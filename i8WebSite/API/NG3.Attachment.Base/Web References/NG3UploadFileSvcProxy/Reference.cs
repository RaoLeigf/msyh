//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace NG3.Attachment.Base.NG3UploadFileSvcProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NG3UploadFileSvcSoap", Namespace="http://tempuri.org/")]
    public partial class NG3UploadFileSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NG3UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3DelOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3GetExOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3CopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3CopyByAttachIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3MutilCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AyncNG3MutilCopyExOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3MutilCopyExOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3DelByAsrCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NG3ImageLoad2AttachFolderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NG3UploadFileSvc() {
            this.Url = global::NG3.Attachment.Base.Properties.Settings.Default.NG3_Attachment_Base_NG3UploadFileSvcProxy_NG3UploadFileSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NG3UploadCompletedEventHandler NG3UploadCompleted;
        
        /// <remarks/>
        public event NG3DelCompletedEventHandler NG3DelCompleted;
        
        /// <remarks/>
        public event NG3ModifyCompletedEventHandler NG3ModifyCompleted;
        
        /// <remarks/>
        public event NG3GetCompletedEventHandler NG3GetCompleted;
        
        /// <remarks/>
        public event NG3GetExCompletedEventHandler NG3GetExCompleted;
        
        /// <remarks/>
        public event NG3CopyCompletedEventHandler NG3CopyCompleted;
        
        /// <remarks/>
        public event NG3CopyByAttachIdsCompletedEventHandler NG3CopyByAttachIdsCompleted;
        
        /// <remarks/>
        public event NG3MutilCopyCompletedEventHandler NG3MutilCopyCompleted;
        
        /// <remarks/>
        public event AyncNG3MutilCopyExCompletedEventHandler AyncNG3MutilCopyExCompleted;
        
        /// <remarks/>
        public event NG3MutilCopyExCompletedEventHandler NG3MutilCopyExCompleted;
        
        /// <remarks/>
        public event NG3DelByAsrCodeCompletedEventHandler NG3DelByAsrCodeCompleted;
        
        /// <remarks/>
        public event NG3ImageLoad2AttachFolderCompletedEventHandler NG3ImageLoad2AttachFolderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3Upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3Upload(string asr_dbconn, string blob_data) {
            object[] results = this.Invoke("NG3Upload", new object[] {
                        asr_dbconn,
                        blob_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3UploadAsync(string asr_dbconn, string blob_data) {
            this.NG3UploadAsync(asr_dbconn, blob_data, null);
        }
        
        /// <remarks/>
        public void NG3UploadAsync(string asr_dbconn, string blob_data, object userState) {
            if ((this.NG3UploadOperationCompleted == null)) {
                this.NG3UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3UploadOperationCompleted);
            }
            this.InvokeAsync("NG3Upload", new object[] {
                        asr_dbconn,
                        blob_data}, this.NG3UploadOperationCompleted, userState);
        }
        
        private void OnNG3UploadOperationCompleted(object arg) {
            if ((this.NG3UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3UploadCompleted(this, new NG3UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3Del", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3Del(string dbconn, long phid) {
            object[] results = this.Invoke("NG3Del", new object[] {
                        dbconn,
                        phid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3DelAsync(string dbconn, long phid) {
            this.NG3DelAsync(dbconn, phid, null);
        }
        
        /// <remarks/>
        public void NG3DelAsync(string dbconn, long phid, object userState) {
            if ((this.NG3DelOperationCompleted == null)) {
                this.NG3DelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3DelOperationCompleted);
            }
            this.InvokeAsync("NG3Del", new object[] {
                        dbconn,
                        phid}, this.NG3DelOperationCompleted, userState);
        }
        
        private void OnNG3DelOperationCompleted(object arg) {
            if ((this.NG3DelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3DelCompleted(this, new NG3DelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3Modify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3Modify(string dbconn, long phid, string blob_data) {
            object[] results = this.Invoke("NG3Modify", new object[] {
                        dbconn,
                        phid,
                        blob_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3ModifyAsync(string dbconn, long phid, string blob_data) {
            this.NG3ModifyAsync(dbconn, phid, blob_data, null);
        }
        
        /// <remarks/>
        public void NG3ModifyAsync(string dbconn, long phid, string blob_data, object userState) {
            if ((this.NG3ModifyOperationCompleted == null)) {
                this.NG3ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3ModifyOperationCompleted);
            }
            this.InvokeAsync("NG3Modify", new object[] {
                        dbconn,
                        phid,
                        blob_data}, this.NG3ModifyOperationCompleted, userState);
        }
        
        private void OnNG3ModifyOperationCompleted(object arg) {
            if ((this.NG3ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3ModifyCompleted(this, new NG3ModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3Get(string dbconn, long phid) {
            object[] results = this.Invoke("NG3Get", new object[] {
                        dbconn,
                        phid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3GetAsync(string dbconn, long phid) {
            this.NG3GetAsync(dbconn, phid, null);
        }
        
        /// <remarks/>
        public void NG3GetAsync(string dbconn, long phid, object userState) {
            if ((this.NG3GetOperationCompleted == null)) {
                this.NG3GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3GetOperationCompleted);
            }
            this.InvokeAsync("NG3Get", new object[] {
                        dbconn,
                        phid}, this.NG3GetOperationCompleted, userState);
        }
        
        private void OnNG3GetOperationCompleted(object arg) {
            if ((this.NG3GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3GetCompleted(this, new NG3GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3GetEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] NG3GetEx(string dbconn, long phid) {
            object[] results = this.Invoke("NG3GetEx", new object[] {
                        dbconn,
                        phid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void NG3GetExAsync(string dbconn, long phid) {
            this.NG3GetExAsync(dbconn, phid, null);
        }
        
        /// <remarks/>
        public void NG3GetExAsync(string dbconn, long phid, object userState) {
            if ((this.NG3GetExOperationCompleted == null)) {
                this.NG3GetExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3GetExOperationCompleted);
            }
            this.InvokeAsync("NG3GetEx", new object[] {
                        dbconn,
                        phid}, this.NG3GetExOperationCompleted, userState);
        }
        
        private void OnNG3GetExOperationCompleted(object arg) {
            if ((this.NG3GetExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3GetExCompleted(this, new NG3GetExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3Copy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3Copy(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, long oriphid, string ori_asr_table) {
            object[] results = this.Invoke("NG3Copy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        oriphid,
                        ori_asr_table});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3CopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, long oriphid, string ori_asr_table) {
            this.NG3CopyAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, oriphid, ori_asr_table, null);
        }
        
        /// <remarks/>
        public void NG3CopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, long oriphid, string ori_asr_table, object userState) {
            if ((this.NG3CopyOperationCompleted == null)) {
                this.NG3CopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3CopyOperationCompleted);
            }
            this.InvokeAsync("NG3Copy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        oriphid,
                        ori_asr_table}, this.NG3CopyOperationCompleted, userState);
        }
        
        private void OnNG3CopyOperationCompleted(object arg) {
            if ((this.NG3CopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3CopyCompleted(this, new NG3CopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3CopyByAttachIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3CopyByAttachIds(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string attachids) {
            object[] results = this.Invoke("NG3CopyByAttachIds", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        attachids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3CopyByAttachIdsAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string attachids) {
            this.NG3CopyByAttachIdsAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, attachids, null);
        }
        
        /// <remarks/>
        public void NG3CopyByAttachIdsAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string attachids, object userState) {
            if ((this.NG3CopyByAttachIdsOperationCompleted == null)) {
                this.NG3CopyByAttachIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3CopyByAttachIdsOperationCompleted);
            }
            this.InvokeAsync("NG3CopyByAttachIds", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        attachids}, this.NG3CopyByAttachIdsOperationCompleted, userState);
        }
        
        private void OnNG3CopyByAttachIdsOperationCompleted(object arg) {
            if ((this.NG3CopyByAttachIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3CopyByAttachIdsCompleted(this, new NG3CopyByAttachIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3MutilCopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3MutilCopy(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string oriphids, string ori_asr_table) {
            object[] results = this.Invoke("NG3MutilCopy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        oriphids,
                        ori_asr_table});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3MutilCopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string oriphids, string ori_asr_table) {
            this.NG3MutilCopyAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, oriphids, ori_asr_table, null);
        }
        
        /// <remarks/>
        public void NG3MutilCopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string oriphids, string ori_asr_table, object userState) {
            if ((this.NG3MutilCopyOperationCompleted == null)) {
                this.NG3MutilCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3MutilCopyOperationCompleted);
            }
            this.InvokeAsync("NG3MutilCopy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        oriphids,
                        ori_asr_table}, this.NG3MutilCopyOperationCompleted, userState);
        }
        
        private void OnNG3MutilCopyOperationCompleted(object arg) {
            if ((this.NG3MutilCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3MutilCopyCompleted(this, new NG3MutilCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AyncNG3MutilCopyEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AyncNG3MutilCopyEx(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("AyncNG3MutilCopyEx", new object[] {
                        copyjosn,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AyncNG3MutilCopyExAsync(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.AyncNG3MutilCopyExAsync(copyjosn, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void AyncNG3MutilCopyExAsync(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.AyncNG3MutilCopyExOperationCompleted == null)) {
                this.AyncNG3MutilCopyExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAyncNG3MutilCopyExOperationCompleted);
            }
            this.InvokeAsync("AyncNG3MutilCopyEx", new object[] {
                        copyjosn,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.AyncNG3MutilCopyExOperationCompleted, userState);
        }
        
        private void OnAyncNG3MutilCopyExOperationCompleted(object arg) {
            if ((this.AyncNG3MutilCopyExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AyncNG3MutilCopyExCompleted(this, new AyncNG3MutilCopyExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3MutilCopyEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3MutilCopyEx(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("NG3MutilCopyEx", new object[] {
                        copyjosn,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3MutilCopyExAsync(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.NG3MutilCopyExAsync(copyjosn, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void NG3MutilCopyExAsync(string copyjosn, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.NG3MutilCopyExOperationCompleted == null)) {
                this.NG3MutilCopyExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3MutilCopyExOperationCompleted);
            }
            this.InvokeAsync("NG3MutilCopyEx", new object[] {
                        copyjosn,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.NG3MutilCopyExOperationCompleted, userState);
        }
        
        private void OnNG3MutilCopyExOperationCompleted(object arg) {
            if ((this.NG3MutilCopyExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3MutilCopyExCompleted(this, new NG3MutilCopyExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3DelByAsrCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3DelByAsrCode(string dbconn, string asr_code, string asr_attach_table, string asr_table) {
            object[] results = this.Invoke("NG3DelByAsrCode", new object[] {
                        dbconn,
                        asr_code,
                        asr_attach_table,
                        asr_table});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3DelByAsrCodeAsync(string dbconn, string asr_code, string asr_attach_table, string asr_table) {
            this.NG3DelByAsrCodeAsync(dbconn, asr_code, asr_attach_table, asr_table, null);
        }
        
        /// <remarks/>
        public void NG3DelByAsrCodeAsync(string dbconn, string asr_code, string asr_attach_table, string asr_table, object userState) {
            if ((this.NG3DelByAsrCodeOperationCompleted == null)) {
                this.NG3DelByAsrCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3DelByAsrCodeOperationCompleted);
            }
            this.InvokeAsync("NG3DelByAsrCode", new object[] {
                        dbconn,
                        asr_code,
                        asr_attach_table,
                        asr_table}, this.NG3DelByAsrCodeOperationCompleted, userState);
        }
        
        private void OnNG3DelByAsrCodeOperationCompleted(object arg) {
            if ((this.NG3DelByAsrCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3DelByAsrCodeCompleted(this, new NG3DelByAsrCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NG3ImageLoad2AttachFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NG3ImageLoad2AttachFolder(string dbconn, string downinfo) {
            object[] results = this.Invoke("NG3ImageLoad2AttachFolder", new object[] {
                        dbconn,
                        downinfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NG3ImageLoad2AttachFolderAsync(string dbconn, string downinfo) {
            this.NG3ImageLoad2AttachFolderAsync(dbconn, downinfo, null);
        }
        
        /// <remarks/>
        public void NG3ImageLoad2AttachFolderAsync(string dbconn, string downinfo, object userState) {
            if ((this.NG3ImageLoad2AttachFolderOperationCompleted == null)) {
                this.NG3ImageLoad2AttachFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNG3ImageLoad2AttachFolderOperationCompleted);
            }
            this.InvokeAsync("NG3ImageLoad2AttachFolder", new object[] {
                        dbconn,
                        downinfo}, this.NG3ImageLoad2AttachFolderOperationCompleted, userState);
        }
        
        private void OnNG3ImageLoad2AttachFolderOperationCompleted(object arg) {
            if ((this.NG3ImageLoad2AttachFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NG3ImageLoad2AttachFolderCompleted(this, new NG3ImageLoad2AttachFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3UploadCompletedEventHandler(object sender, NG3UploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3DelCompletedEventHandler(object sender, NG3DelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3DelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3DelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3ModifyCompletedEventHandler(object sender, NG3ModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3ModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3ModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3GetCompletedEventHandler(object sender, NG3GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3GetExCompletedEventHandler(object sender, NG3GetExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3GetExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3GetExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3CopyCompletedEventHandler(object sender, NG3CopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3CopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3CopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3CopyByAttachIdsCompletedEventHandler(object sender, NG3CopyByAttachIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3CopyByAttachIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3CopyByAttachIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3MutilCopyCompletedEventHandler(object sender, NG3MutilCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3MutilCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3MutilCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AyncNG3MutilCopyExCompletedEventHandler(object sender, AyncNG3MutilCopyExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AyncNG3MutilCopyExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AyncNG3MutilCopyExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3MutilCopyExCompletedEventHandler(object sender, NG3MutilCopyExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3MutilCopyExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3MutilCopyExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3DelByAsrCodeCompletedEventHandler(object sender, NG3DelByAsrCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3DelByAsrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3DelByAsrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void NG3ImageLoad2AttachFolderCompletedEventHandler(object sender, NG3ImageLoad2AttachFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NG3ImageLoad2AttachFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NG3ImageLoad2AttachFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591