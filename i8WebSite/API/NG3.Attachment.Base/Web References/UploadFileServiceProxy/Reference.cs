//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace NG3.Attachment.Base.UploadFileServiceProxy {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UploadFileServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class UploadFileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearCacheWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelExOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitExOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitMutilOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitConnExOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AyncCopyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyExOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyForArchiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyAttachFromBillsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachCountExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachModifyCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachInfoByFidOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOfficeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPubConnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImgUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback PicInvokeOperationCompleted;
        
        private System.Threading.SendOrPostCallback PicInvokeExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableNameByASCIIOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchInitOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadForAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAppUploadfilesStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AsrCodeModifyForNG3OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppUploadfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadForInvoiceRecogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelForInvoiceRecogOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelForInvoiceRecogExOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFileNameForInvoiceRecogOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyFileNameForInvoiceRecogExOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileStatusForInvoiceRecogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileByAsrFidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UploadFileService() {
            this.Url = global::NG3.Attachment.Base.Properties.Settings.Default.NG3_Attachment_Base_UploadFileServiceProxy_UploadFileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SaveCompletedEventHandler SaveCompleted;
        
        /// <remarks/>
        public event ClearCacheCompletedEventHandler ClearCacheCompleted;
        
        /// <remarks/>
        public event ClearCacheWebCompletedEventHandler ClearCacheWebCompleted;
        
        /// <remarks/>
        public event DelCompletedEventHandler DelCompleted;
        
        /// <remarks/>
        public event DelExCompletedEventHandler DelExCompleted;
        
        /// <remarks/>
        public event InitCompletedEventHandler InitCompleted;
        
        /// <remarks/>
        public event InitExCompletedEventHandler InitExCompleted;
        
        /// <remarks/>
        public event InitMutilCompletedEventHandler InitMutilCompleted;
        
        /// <remarks/>
        public event InitConnCompletedEventHandler InitConnCompleted;
        
        /// <remarks/>
        public event InitConnExCompletedEventHandler InitConnExCompleted;
        
        /// <remarks/>
        public event CopyCompletedEventHandler CopyCompleted;
        
        /// <remarks/>
        public event AyncCopyCompletedEventHandler AyncCopyCompleted;
        
        /// <remarks/>
        public event CopyExCompletedEventHandler CopyExCompleted;
        
        /// <remarks/>
        public event CopyForArchiveCompletedEventHandler CopyForArchiveCompleted;
        
        /// <remarks/>
        public event CopyAttachCompletedEventHandler CopyAttachCompleted;
        
        /// <remarks/>
        public event CopyAttachFromBillsCompletedEventHandler CopyAttachFromBillsCompleted;
        
        /// <remarks/>
        public event SaveConfigCompletedEventHandler SaveConfigCompleted;
        
        /// <remarks/>
        public event ReadConfigCompletedEventHandler ReadConfigCompleted;
        
        /// <remarks/>
        public event GetAttachCountCompletedEventHandler GetAttachCountCompleted;
        
        /// <remarks/>
        public event GetAttachCountExCompletedEventHandler GetAttachCountExCompleted;
        
        /// <remarks/>
        public event GetAttachModifyCountCompletedEventHandler GetAttachModifyCountCompleted;
        
        /// <remarks/>
        public event GetAttachInfoCompletedEventHandler GetAttachInfoCompleted;
        
        /// <remarks/>
        public event GetAttachInfoByFidCompletedEventHandler GetAttachInfoByFidCompleted;
        
        /// <remarks/>
        public event DataUpgradeCompletedEventHandler DataUpgradeCompleted;
        
        /// <remarks/>
        public event GetGuidCompletedEventHandler GetGuidCompleted;
        
        /// <remarks/>
        public event GetSessionGuidCompletedEventHandler GetSessionGuidCompleted;
        
        /// <remarks/>
        public event GetCompletedEventHandler GetCompleted;
        
        /// <remarks/>
        public event GetOfficeCompletedEventHandler GetOfficeCompleted;
        
        /// <remarks/>
        public event UpdateOfficeCompletedEventHandler UpdateOfficeCompleted;
        
        /// <remarks/>
        public event SaveDataCompletedEventHandler SaveDataCompleted;
        
        /// <remarks/>
        public event SetPubConnCompletedEventHandler SetPubConnCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event BatchDownloadCompletedEventHandler BatchDownloadCompleted;
        
        /// <remarks/>
        public event GetImgUrlCompletedEventHandler GetImgUrlCompleted;
        
        /// <remarks/>
        public event PicInvokeCompletedEventHandler PicInvokeCompleted;
        
        /// <remarks/>
        public event PicInvokeExCompletedEventHandler PicInvokeExCompleted;
        
        /// <remarks/>
        public event GetTableNameByASCIICompletedEventHandler GetTableNameByASCIICompleted;
        
        /// <remarks/>
        public event UploadCompletedEventHandler UploadCompleted;
        
        /// <remarks/>
        public event BatchInitCompletedEventHandler BatchInitCompleted;
        
        /// <remarks/>
        public event BatchSaveCompletedEventHandler BatchSaveCompleted;
        
        /// <remarks/>
        public event UploadForAppCompletedEventHandler UploadForAppCompleted;
        
        /// <remarks/>
        public event SetAppUploadfilesStatusCompletedEventHandler SetAppUploadfilesStatusCompleted;
        
        /// <remarks/>
        public event AsrCodeModifyForNG3CompletedEventHandler AsrCodeModifyForNG3Completed;
        
        /// <remarks/>
        public event GetAppUploadfilesCompletedEventHandler GetAppUploadfilesCompleted;
        
        /// <remarks/>
        public event UploadForInvoiceRecogCompletedEventHandler UploadForInvoiceRecogCompleted;
        
        /// <remarks/>
        public event DelForInvoiceRecogCompletedEventHandler DelForInvoiceRecogCompleted;
        
        /// <remarks/>
        public event DelForInvoiceRecogExCompletedEventHandler DelForInvoiceRecogExCompleted;
        
        /// <remarks/>
        public event ModifyFileNameForInvoiceRecogCompletedEventHandler ModifyFileNameForInvoiceRecogCompleted;
        
        /// <remarks/>
        public event ModifyFileNameForInvoiceRecogExCompletedEventHandler ModifyFileNameForInvoiceRecogExCompleted;
        
        /// <remarks/>
        public event UpdateFileStatusForInvoiceRecogCompletedEventHandler UpdateFileStatusForInvoiceRecogCompleted;
        
        /// <remarks/>
        public event GetFileByAsrFidCompletedEventHandler GetFileByAsrFidCompleted;
        
        /// <remarks/>
        public event UpdateFileCompletedEventHandler UpdateFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Save(string asr_guid, string asr_code, string asr_mode) {
            object[] results = this.Invoke("Save", new object[] {
                        asr_guid,
                        asr_code,
                        asr_mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveAsync(string asr_guid, string asr_code, string asr_mode) {
            this.SaveAsync(asr_guid, asr_code, asr_mode, null);
        }
        
        /// <remarks/>
        public void SaveAsync(string asr_guid, string asr_code, string asr_mode, object userState) {
            if ((this.SaveOperationCompleted == null)) {
                this.SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveOperationCompleted);
            }
            this.InvokeAsync("Save", new object[] {
                        asr_guid,
                        asr_code,
                        asr_mode}, this.SaveOperationCompleted, userState);
        }
        
        private void OnSaveOperationCompleted(object arg) {
            if ((this.SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCompleted(this, new SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClearCache(string asr_guid) {
            object[] results = this.Invoke("ClearCache", new object[] {
                        asr_guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCacheAsync(string asr_guid) {
            this.ClearCacheAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void ClearCacheAsync(string asr_guid, object userState) {
            if ((this.ClearCacheOperationCompleted == null)) {
                this.ClearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCacheOperationCompleted);
            }
            this.InvokeAsync("ClearCache", new object[] {
                        asr_guid}, this.ClearCacheOperationCompleted, userState);
        }
        
        private void OnClearCacheOperationCompleted(object arg) {
            if ((this.ClearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCacheCompleted(this, new ClearCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearCacheWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ClearCacheWeb(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("ClearCacheWeb", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClearCacheWebAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.ClearCacheWebAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void ClearCacheWebAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.ClearCacheWebOperationCompleted == null)) {
                this.ClearCacheWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearCacheWebOperationCompleted);
            }
            this.InvokeAsync("ClearCacheWeb", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.ClearCacheWebOperationCompleted, userState);
        }
        
        private void OnClearCacheWebOperationCompleted(object arg) {
            if ((this.ClearCacheWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCacheWebCompleted(this, new ClearCacheWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Del", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Del(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            object[] results = this.Invoke("Del", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            this.DelAsync(asr_guid, asr_code, asr_table, asr_attach_table, asr_filename, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void DelAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn, object userState) {
            if ((this.DelOperationCompleted == null)) {
                this.DelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelOperationCompleted);
            }
            this.InvokeAsync("Del", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn}, this.DelOperationCompleted, userState);
        }
        
        private void OnDelOperationCompleted(object arg) {
            if ((this.DelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelCompleted(this, new DelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelEx(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            object[] results = this.Invoke("DelEx", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelExAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            this.DelExAsync(asr_guid, asr_code, asr_table, asr_attach_table, asr_filename, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void DelExAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn, object userState) {
            if ((this.DelExOperationCompleted == null)) {
                this.DelExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelExOperationCompleted);
            }
            this.InvokeAsync("DelEx", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn}, this.DelExOperationCompleted, userState);
        }
        
        private void OnDelExOperationCompleted(object arg) {
            if ((this.DelExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelExCompleted(this, new DelExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Init", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Init(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("Init", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.InitAsync(asr_session_guid, asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void InitAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.InitOperationCompleted == null)) {
                this.InitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitOperationCompleted);
            }
            this.InvokeAsync("Init", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.InitOperationCompleted, userState);
        }
        
        private void OnInitOperationCompleted(object arg) {
            if ((this.InitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitCompleted(this, new InitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitEx(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("InitEx", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitExAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.InitExAsync(asr_session_guid, asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void InitExAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.InitExOperationCompleted == null)) {
                this.InitExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitExOperationCompleted);
            }
            this.InvokeAsync("InitEx", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.InitExOperationCompleted, userState);
        }
        
        private void OnInitExOperationCompleted(object arg) {
            if ((this.InitExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitExCompleted(this, new InitExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitMutil", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitMutil(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_where) {
            object[] results = this.Invoke("InitMutil", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_where});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitMutilAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_where) {
            this.InitMutilAsync(asr_session_guid, asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_where, null);
        }
        
        /// <remarks/>
        public void InitMutilAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_where, object userState) {
            if ((this.InitMutilOperationCompleted == null)) {
                this.InitMutilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitMutilOperationCompleted);
            }
            this.InvokeAsync("InitMutil", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_where}, this.InitMutilOperationCompleted, userState);
        }
        
        private void OnInitMutilOperationCompleted(object arg) {
            if ((this.InitMutilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitMutilCompleted(this, new InitMutilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitConn(string asr_dbconn) {
            object[] results = this.Invoke("InitConn", new object[] {
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitConnAsync(string asr_dbconn) {
            this.InitConnAsync(asr_dbconn, null);
        }
        
        /// <remarks/>
        public void InitConnAsync(string asr_dbconn, object userState) {
            if ((this.InitConnOperationCompleted == null)) {
                this.InitConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitConnOperationCompleted);
            }
            this.InvokeAsync("InitConn", new object[] {
                        asr_dbconn}, this.InitConnOperationCompleted, userState);
        }
        
        private void OnInitConnOperationCompleted(object arg) {
            if ((this.InitConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitConnCompleted(this, new InitConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitConnEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitConnEx(string asr_session_guid, string asr_dbconn) {
            object[] results = this.Invoke("InitConnEx", new object[] {
                        asr_session_guid,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitConnExAsync(string asr_session_guid, string asr_dbconn) {
            this.InitConnExAsync(asr_session_guid, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void InitConnExAsync(string asr_session_guid, string asr_dbconn, object userState) {
            if ((this.InitConnExOperationCompleted == null)) {
                this.InitConnExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitConnExOperationCompleted);
            }
            this.InvokeAsync("InitConnEx", new object[] {
                        asr_session_guid,
                        asr_dbconn}, this.InitConnExOperationCompleted, userState);
        }
        
        private void OnInitConnExOperationCompleted(object arg) {
            if ((this.InitConnExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitConnExCompleted(this, new InitConnExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Copy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Copy(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            object[] results = this.Invoke("Copy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            this.CopyAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_guid_copy, null);
        }
        
        /// <remarks/>
        public void CopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, object userState) {
            if ((this.CopyOperationCompleted == null)) {
                this.CopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyOperationCompleted);
            }
            this.InvokeAsync("Copy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy}, this.CopyOperationCompleted, userState);
        }
        
        private void OnCopyOperationCompleted(object arg) {
            if ((this.CopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyCompleted(this, new CopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AyncCopy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AyncCopy(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            object[] results = this.Invoke("AyncCopy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AyncCopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            this.AyncCopyAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_guid_copy, null);
        }
        
        /// <remarks/>
        public void AyncCopyAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, object userState) {
            if ((this.AyncCopyOperationCompleted == null)) {
                this.AyncCopyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAyncCopyOperationCompleted);
            }
            this.InvokeAsync("AyncCopy", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy}, this.AyncCopyOperationCompleted, userState);
        }
        
        private void OnAyncCopyOperationCompleted(object arg) {
            if ((this.AyncCopyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AyncCopyCompleted(this, new AyncCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyEx(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, string asr_fid) {
            object[] results = this.Invoke("CopyEx", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy,
                        asr_fid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyExAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, string asr_fid) {
            this.CopyExAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_guid_copy, asr_fid, null);
        }
        
        /// <remarks/>
        public void CopyExAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, string asr_fid, object userState) {
            if ((this.CopyExOperationCompleted == null)) {
                this.CopyExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyExOperationCompleted);
            }
            this.InvokeAsync("CopyEx", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy,
                        asr_fid}, this.CopyExOperationCompleted, userState);
        }
        
        private void OnCopyExOperationCompleted(object arg) {
            if ((this.CopyExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyExCompleted(this, new CopyExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyForArchive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyForArchive(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            object[] results = this.Invoke("CopyForArchive", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyForArchiveAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy) {
            this.CopyForArchiveAsync(asr_session_guid, asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_guid_copy, null);
        }
        
        /// <remarks/>
        public void CopyForArchiveAsync(string asr_session_guid, string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_guid_copy, object userState) {
            if ((this.CopyForArchiveOperationCompleted == null)) {
                this.CopyForArchiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyForArchiveOperationCompleted);
            }
            this.InvokeAsync("CopyForArchive", new object[] {
                        asr_session_guid,
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_guid_copy}, this.CopyForArchiveOperationCompleted, userState);
        }
        
        private void OnCopyForArchiveOperationCompleted(object arg) {
            if ((this.CopyForArchiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyForArchiveCompleted(this, new CopyForArchiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyAttach", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyAttach(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guid_copy) {
            object[] results = this.Invoke("CopyAttach", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_session_guid_copy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyAttachAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guid_copy) {
            this.CopyAttachAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_session_guid_copy, null);
        }
        
        /// <remarks/>
        public void CopyAttachAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guid_copy, object userState) {
            if ((this.CopyAttachOperationCompleted == null)) {
                this.CopyAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyAttachOperationCompleted);
            }
            this.InvokeAsync("CopyAttach", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_session_guid_copy}, this.CopyAttachOperationCompleted, userState);
        }
        
        private void OnCopyAttachOperationCompleted(object arg) {
            if ((this.CopyAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyAttachCompleted(this, new CopyAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyAttachFromBills", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CopyAttachFromBills(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guids_copy) {
            object[] results = this.Invoke("CopyAttachFromBills", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_session_guids_copy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CopyAttachFromBillsAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guids_copy) {
            this.CopyAttachFromBillsAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, asr_session_guids_copy, null);
        }
        
        /// <remarks/>
        public void CopyAttachFromBillsAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, string asr_session_guids_copy, object userState) {
            if ((this.CopyAttachFromBillsOperationCompleted == null)) {
                this.CopyAttachFromBillsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyAttachFromBillsOperationCompleted);
            }
            this.InvokeAsync("CopyAttachFromBills", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_session_guids_copy}, this.CopyAttachFromBillsOperationCompleted, userState);
        }
        
        private void OnCopyAttachFromBillsOperationCompleted(object arg) {
            if ((this.CopyAttachFromBillsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyAttachFromBillsCompleted(this, new CopyAttachFromBillsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveConfig(string keyvalue) {
            object[] results = this.Invoke("SaveConfig", new object[] {
                        keyvalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveConfigAsync(string keyvalue) {
            this.SaveConfigAsync(keyvalue, null);
        }
        
        /// <remarks/>
        public void SaveConfigAsync(string keyvalue, object userState) {
            if ((this.SaveConfigOperationCompleted == null)) {
                this.SaveConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveConfigOperationCompleted);
            }
            this.InvokeAsync("SaveConfig", new object[] {
                        keyvalue}, this.SaveConfigOperationCompleted, userState);
        }
        
        private void OnSaveConfigOperationCompleted(object arg) {
            if ((this.SaveConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveConfigCompleted(this, new SaveConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReadConfig() {
            object[] results = this.Invoke("ReadConfig", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReadConfigAsync() {
            this.ReadConfigAsync(null);
        }
        
        /// <remarks/>
        public void ReadConfigAsync(object userState) {
            if ((this.ReadConfigOperationCompleted == null)) {
                this.ReadConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadConfigOperationCompleted);
            }
            this.InvokeAsync("ReadConfig", new object[0], this.ReadConfigOperationCompleted, userState);
        }
        
        private void OnReadConfigOperationCompleted(object arg) {
            if ((this.ReadConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadConfigCompleted(this, new ReadConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAttachCount(string asr_guid) {
            object[] results = this.Invoke("GetAttachCount", new object[] {
                        asr_guid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachCountAsync(string asr_guid) {
            this.GetAttachCountAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void GetAttachCountAsync(string asr_guid, object userState) {
            if ((this.GetAttachCountOperationCompleted == null)) {
                this.GetAttachCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachCountOperationCompleted);
            }
            this.InvokeAsync("GetAttachCount", new object[] {
                        asr_guid}, this.GetAttachCountOperationCompleted, userState);
        }
        
        private void OnGetAttachCountOperationCompleted(object arg) {
            if ((this.GetAttachCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachCountCompleted(this, new GetAttachCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachCountEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAttachCountEx(string asr_guid) {
            object[] results = this.Invoke("GetAttachCountEx", new object[] {
                        asr_guid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachCountExAsync(string asr_guid) {
            this.GetAttachCountExAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void GetAttachCountExAsync(string asr_guid, object userState) {
            if ((this.GetAttachCountExOperationCompleted == null)) {
                this.GetAttachCountExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachCountExOperationCompleted);
            }
            this.InvokeAsync("GetAttachCountEx", new object[] {
                        asr_guid}, this.GetAttachCountExOperationCompleted, userState);
        }
        
        private void OnGetAttachCountExOperationCompleted(object arg) {
            if ((this.GetAttachCountExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachCountExCompleted(this, new GetAttachCountExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachModifyCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAttachModifyCount(string asr_guid) {
            object[] results = this.Invoke("GetAttachModifyCount", new object[] {
                        asr_guid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachModifyCountAsync(string asr_guid) {
            this.GetAttachModifyCountAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void GetAttachModifyCountAsync(string asr_guid, object userState) {
            if ((this.GetAttachModifyCountOperationCompleted == null)) {
                this.GetAttachModifyCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachModifyCountOperationCompleted);
            }
            this.InvokeAsync("GetAttachModifyCount", new object[] {
                        asr_guid}, this.GetAttachModifyCountOperationCompleted, userState);
        }
        
        private void OnGetAttachModifyCountOperationCompleted(object arg) {
            if ((this.GetAttachModifyCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachModifyCountCompleted(this, new GetAttachModifyCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAttachInfo(string asr_guid) {
            object[] results = this.Invoke("GetAttachInfo", new object[] {
                        asr_guid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachInfoAsync(string asr_guid) {
            this.GetAttachInfoAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void GetAttachInfoAsync(string asr_guid, object userState) {
            if ((this.GetAttachInfoOperationCompleted == null)) {
                this.GetAttachInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachInfoOperationCompleted);
            }
            this.InvokeAsync("GetAttachInfo", new object[] {
                        asr_guid}, this.GetAttachInfoOperationCompleted, userState);
        }
        
        private void OnGetAttachInfoOperationCompleted(object arg) {
            if ((this.GetAttachInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachInfoCompleted(this, new GetAttachInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachInfoByFid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAttachInfoByFid(string asr_dbconn, string asr_fid) {
            object[] results = this.Invoke("GetAttachInfoByFid", new object[] {
                        asr_dbconn,
                        asr_fid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachInfoByFidAsync(string asr_dbconn, string asr_fid) {
            this.GetAttachInfoByFidAsync(asr_dbconn, asr_fid, null);
        }
        
        /// <remarks/>
        public void GetAttachInfoByFidAsync(string asr_dbconn, string asr_fid, object userState) {
            if ((this.GetAttachInfoByFidOperationCompleted == null)) {
                this.GetAttachInfoByFidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachInfoByFidOperationCompleted);
            }
            this.InvokeAsync("GetAttachInfoByFid", new object[] {
                        asr_dbconn,
                        asr_fid}, this.GetAttachInfoByFidOperationCompleted, userState);
        }
        
        private void OnGetAttachInfoByFidOperationCompleted(object arg) {
            if ((this.GetAttachInfoByFidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachInfoByFidCompleted(this, new GetAttachInfoByFidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataUpgrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DataUpgrade(string asr_dbconn, string asr_attach_table) {
            object[] results = this.Invoke("DataUpgrade", new object[] {
                        asr_dbconn,
                        asr_attach_table});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataUpgradeAsync(string asr_dbconn, string asr_attach_table) {
            this.DataUpgradeAsync(asr_dbconn, asr_attach_table, null);
        }
        
        /// <remarks/>
        public void DataUpgradeAsync(string asr_dbconn, string asr_attach_table, object userState) {
            if ((this.DataUpgradeOperationCompleted == null)) {
                this.DataUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataUpgradeOperationCompleted);
            }
            this.InvokeAsync("DataUpgrade", new object[] {
                        asr_dbconn,
                        asr_attach_table}, this.DataUpgradeOperationCompleted, userState);
        }
        
        private void OnDataUpgradeOperationCompleted(object arg) {
            if ((this.DataUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataUpgradeCompleted(this, new DataUpgradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGuid(string asr_guid) {
            object[] results = this.Invoke("GetGuid", new object[] {
                        asr_guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGuidAsync(string asr_guid) {
            this.GetGuidAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void GetGuidAsync(string asr_guid, object userState) {
            if ((this.GetGuidOperationCompleted == null)) {
                this.GetGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGuidOperationCompleted);
            }
            this.InvokeAsync("GetGuid", new object[] {
                        asr_guid}, this.GetGuidOperationCompleted, userState);
        }
        
        private void OnGetGuidOperationCompleted(object arg) {
            if ((this.GetGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGuidCompleted(this, new GetGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSessionGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSessionGuid(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            object[] results = this.Invoke("GetSessionGuid", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionGuidAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn) {
            this.GetSessionGuidAsync(asr_attach_table, asr_table, asr_code, asr_fill, asr_fillname, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void GetSessionGuidAsync(string asr_attach_table, string asr_table, string asr_code, string asr_fill, string asr_fillname, string asr_dbconn, object userState) {
            if ((this.GetSessionGuidOperationCompleted == null)) {
                this.GetSessionGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionGuidOperationCompleted);
            }
            this.InvokeAsync("GetSessionGuid", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn}, this.GetSessionGuidOperationCompleted, userState);
        }
        
        private void OnGetSessionGuidOperationCompleted(object arg) {
            if ((this.GetSessionGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionGuidCompleted(this, new GetSessionGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Get(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            object[] results = this.Invoke("Get", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn) {
            this.GetAsync(asr_guid, asr_code, asr_table, asr_attach_table, asr_filename, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void GetAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_filename, string asr_dbconn, object userState) {
            if ((this.GetOperationCompleted == null)) {
                this.GetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperationCompleted);
            }
            this.InvokeAsync("Get", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_filename,
                        asr_dbconn}, this.GetOperationCompleted, userState);
        }
        
        private void OnGetOperationCompleted(object arg) {
            if ((this.GetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompleted(this, new GetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOffice(string asr_guid, string asr_fid) {
            object[] results = this.Invoke("GetOffice", new object[] {
                        asr_guid,
                        asr_fid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOfficeAsync(string asr_guid, string asr_fid) {
            this.GetOfficeAsync(asr_guid, asr_fid, null);
        }
        
        /// <remarks/>
        public void GetOfficeAsync(string asr_guid, string asr_fid, object userState) {
            if ((this.GetOfficeOperationCompleted == null)) {
                this.GetOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfficeOperationCompleted);
            }
            this.InvokeAsync("GetOffice", new object[] {
                        asr_guid,
                        asr_fid}, this.GetOfficeOperationCompleted, userState);
        }
        
        private void OnGetOfficeOperationCompleted(object arg) {
            if ((this.GetOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfficeCompleted(this, new GetOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOffice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOffice(string asr_guid, string asr_fid, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer) {
            object[] results = this.Invoke("UpdateOffice", new object[] {
                        asr_guid,
                        asr_fid,
                        buffer});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOfficeAsync(string asr_guid, string asr_fid, byte[] buffer) {
            this.UpdateOfficeAsync(asr_guid, asr_fid, buffer, null);
        }
        
        /// <remarks/>
        public void UpdateOfficeAsync(string asr_guid, string asr_fid, byte[] buffer, object userState) {
            if ((this.UpdateOfficeOperationCompleted == null)) {
                this.UpdateOfficeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOfficeOperationCompleted);
            }
            this.InvokeAsync("UpdateOffice", new object[] {
                        asr_guid,
                        asr_fid,
                        buffer}, this.UpdateOfficeOperationCompleted, userState);
        }
        
        private void OnUpdateOfficeOperationCompleted(object arg) {
            if ((this.UpdateOfficeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOfficeCompleted(this, new UpdateOfficeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveData(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_dbconn, string asr_params, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] asr_data) {
            object[] results = this.Invoke("SaveData", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_dbconn,
                        asr_params,
                        asr_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_dbconn, string asr_params, byte[] asr_data) {
            this.SaveDataAsync(asr_guid, asr_code, asr_table, asr_attach_table, asr_dbconn, asr_params, asr_data, null);
        }
        
        /// <remarks/>
        public void SaveDataAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_dbconn, string asr_params, byte[] asr_data, object userState) {
            if ((this.SaveDataOperationCompleted == null)) {
                this.SaveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataOperationCompleted);
            }
            this.InvokeAsync("SaveData", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_dbconn,
                        asr_params,
                        asr_data}, this.SaveDataOperationCompleted, userState);
        }
        
        private void OnSaveDataOperationCompleted(object arg) {
            if ((this.SaveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataCompleted(this, new SaveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPubConn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetPubConn(string dbconn) {
            object[] results = this.Invoke("SetPubConn", new object[] {
                        dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetPubConnAsync(string dbconn) {
            this.SetPubConnAsync(dbconn, null);
        }
        
        /// <remarks/>
        public void SetPubConnAsync(string dbconn, object userState) {
            if ((this.SetPubConnOperationCompleted == null)) {
                this.SetPubConnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPubConnOperationCompleted);
            }
            this.InvokeAsync("SetPubConn", new object[] {
                        dbconn}, this.SetPubConnOperationCompleted, userState);
        }
        
        private void OnSetPubConnOperationCompleted(object arg) {
            if ((this.SetPubConnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPubConnCompleted(this, new SetPubConnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFile(string asr_guid, string asr_fid) {
            object[] results = this.Invoke("GetFile", new object[] {
                        asr_guid,
                        asr_fid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(string asr_guid, string asr_fid) {
            this.GetFileAsync(asr_guid, asr_fid, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(string asr_guid, string asr_fid, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        asr_guid,
                        asr_fid}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchDownload(string downFileInfo) {
            object[] results = this.Invoke("BatchDownload", new object[] {
                        downFileInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchDownloadAsync(string downFileInfo) {
            this.BatchDownloadAsync(downFileInfo, null);
        }
        
        /// <remarks/>
        public void BatchDownloadAsync(string downFileInfo, object userState) {
            if ((this.BatchDownloadOperationCompleted == null)) {
                this.BatchDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchDownloadOperationCompleted);
            }
            this.InvokeAsync("BatchDownload", new object[] {
                        downFileInfo}, this.BatchDownloadOperationCompleted, userState);
        }
        
        private void OnBatchDownloadOperationCompleted(object arg) {
            if ((this.BatchDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchDownloadCompleted(this, new BatchDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImgUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImgUrl(string url, string asr_dbconn, string asr_fid) {
            object[] results = this.Invoke("GetImgUrl", new object[] {
                        url,
                        asr_dbconn,
                        asr_fid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImgUrlAsync(string url, string asr_dbconn, string asr_fid) {
            this.GetImgUrlAsync(url, asr_dbconn, asr_fid, null);
        }
        
        /// <remarks/>
        public void GetImgUrlAsync(string url, string asr_dbconn, string asr_fid, object userState) {
            if ((this.GetImgUrlOperationCompleted == null)) {
                this.GetImgUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImgUrlOperationCompleted);
            }
            this.InvokeAsync("GetImgUrl", new object[] {
                        url,
                        asr_dbconn,
                        asr_fid}, this.GetImgUrlOperationCompleted, userState);
        }
        
        private void OnGetImgUrlOperationCompleted(object arg) {
            if ((this.GetImgUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImgUrlCompleted(this, new GetImgUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PicInvoke", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PicInvoke(string dllName, string className, string method, object[] args) {
            object[] results = this.Invoke("PicInvoke", new object[] {
                        dllName,
                        className,
                        method,
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PicInvokeAsync(string dllName, string className, string method, object[] args) {
            this.PicInvokeAsync(dllName, className, method, args, null);
        }
        
        /// <remarks/>
        public void PicInvokeAsync(string dllName, string className, string method, object[] args, object userState) {
            if ((this.PicInvokeOperationCompleted == null)) {
                this.PicInvokeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPicInvokeOperationCompleted);
            }
            this.InvokeAsync("PicInvoke", new object[] {
                        dllName,
                        className,
                        method,
                        args}, this.PicInvokeOperationCompleted, userState);
        }
        
        private void OnPicInvokeOperationCompleted(object arg) {
            if ((this.PicInvokeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PicInvokeCompleted(this, new PicInvokeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PicInvokeEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object PicInvokeEx(string dllName, string className, string method, object[] args) {
            object[] results = this.Invoke("PicInvokeEx", new object[] {
                        dllName,
                        className,
                        method,
                        args});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void PicInvokeExAsync(string dllName, string className, string method, object[] args) {
            this.PicInvokeExAsync(dllName, className, method, args, null);
        }
        
        /// <remarks/>
        public void PicInvokeExAsync(string dllName, string className, string method, object[] args, object userState) {
            if ((this.PicInvokeExOperationCompleted == null)) {
                this.PicInvokeExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPicInvokeExOperationCompleted);
            }
            this.InvokeAsync("PicInvokeEx", new object[] {
                        dllName,
                        className,
                        method,
                        args}, this.PicInvokeExOperationCompleted, userState);
        }
        
        private void OnPicInvokeExOperationCompleted(object arg) {
            if ((this.PicInvokeExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PicInvokeExCompleted(this, new PicInvokeExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableNameByASCII", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTableNameByASCII(string text) {
            object[] results = this.Invoke("GetTableNameByASCII", new object[] {
                        text});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableNameByASCIIAsync(string text) {
            this.GetTableNameByASCIIAsync(text, null);
        }
        
        /// <remarks/>
        public void GetTableNameByASCIIAsync(string text, object userState) {
            if ((this.GetTableNameByASCIIOperationCompleted == null)) {
                this.GetTableNameByASCIIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableNameByASCIIOperationCompleted);
            }
            this.InvokeAsync("GetTableNameByASCII", new object[] {
                        text}, this.GetTableNameByASCIIOperationCompleted, userState);
        }
        
        private void OnGetTableNameByASCIIOperationCompleted(object arg) {
            if ((this.GetTableNameByASCIICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableNameByASCIICompleted(this, new GetTableNameByASCIICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Upload(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] asr_data) {
            object[] results = this.Invoke("Upload", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_name,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, byte[] asr_data) {
            this.UploadAsync(asr_guid, asr_code, asr_table, asr_attach_table, asr_name, asr_fill, asr_fillname, asr_dbconn, asr_data, null);
        }
        
        /// <remarks/>
        public void UploadAsync(string asr_guid, string asr_code, string asr_table, string asr_attach_table, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, byte[] asr_data, object userState) {
            if ((this.UploadOperationCompleted == null)) {
                this.UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadOperationCompleted);
            }
            this.InvokeAsync("Upload", new object[] {
                        asr_guid,
                        asr_code,
                        asr_table,
                        asr_attach_table,
                        asr_name,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_data}, this.UploadOperationCompleted, userState);
        }
        
        private void OnUploadOperationCompleted(object arg) {
            if ((this.UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCompleted(this, new UploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchInit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchInit(string batchparam, string asr_dbconn) {
            object[] results = this.Invoke("BatchInit", new object[] {
                        batchparam,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchInitAsync(string batchparam, string asr_dbconn) {
            this.BatchInitAsync(batchparam, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void BatchInitAsync(string batchparam, string asr_dbconn, object userState) {
            if ((this.BatchInitOperationCompleted == null)) {
                this.BatchInitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchInitOperationCompleted);
            }
            this.InvokeAsync("BatchInit", new object[] {
                        batchparam,
                        asr_dbconn}, this.BatchInitOperationCompleted, userState);
        }
        
        private void OnBatchInitOperationCompleted(object arg) {
            if ((this.BatchInitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchInitCompleted(this, new BatchInitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchSave(string saveparms, string asr_dbconn) {
            object[] results = this.Invoke("BatchSave", new object[] {
                        saveparms,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchSaveAsync(string saveparms, string asr_dbconn) {
            this.BatchSaveAsync(saveparms, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void BatchSaveAsync(string saveparms, string asr_dbconn, object userState) {
            if ((this.BatchSaveOperationCompleted == null)) {
                this.BatchSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchSaveOperationCompleted);
            }
            this.InvokeAsync("BatchSave", new object[] {
                        saveparms,
                        asr_dbconn}, this.BatchSaveOperationCompleted, userState);
        }
        
        private void OnBatchSaveOperationCompleted(object arg) {
            if ((this.BatchSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchSaveCompleted(this, new BatchSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadForApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadForApp(string asr_guid, string asr_name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] asr_data) {
            object[] results = this.Invoke("UploadForApp", new object[] {
                        asr_guid,
                        asr_name,
                        asr_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadForAppAsync(string asr_guid, string asr_name, byte[] asr_data) {
            this.UploadForAppAsync(asr_guid, asr_name, asr_data, null);
        }
        
        /// <remarks/>
        public void UploadForAppAsync(string asr_guid, string asr_name, byte[] asr_data, object userState) {
            if ((this.UploadForAppOperationCompleted == null)) {
                this.UploadForAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadForAppOperationCompleted);
            }
            this.InvokeAsync("UploadForApp", new object[] {
                        asr_guid,
                        asr_name,
                        asr_data}, this.UploadForAppOperationCompleted, userState);
        }
        
        private void OnUploadForAppOperationCompleted(object arg) {
            if ((this.UploadForAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadForAppCompleted(this, new UploadForAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAppUploadfilesStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetAppUploadfilesStatus(string asr_session_guid, string updatetype) {
            object[] results = this.Invoke("SetAppUploadfilesStatus", new object[] {
                        asr_session_guid,
                        updatetype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetAppUploadfilesStatusAsync(string asr_session_guid, string updatetype) {
            this.SetAppUploadfilesStatusAsync(asr_session_guid, updatetype, null);
        }
        
        /// <remarks/>
        public void SetAppUploadfilesStatusAsync(string asr_session_guid, string updatetype, object userState) {
            if ((this.SetAppUploadfilesStatusOperationCompleted == null)) {
                this.SetAppUploadfilesStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAppUploadfilesStatusOperationCompleted);
            }
            this.InvokeAsync("SetAppUploadfilesStatus", new object[] {
                        asr_session_guid,
                        updatetype}, this.SetAppUploadfilesStatusOperationCompleted, userState);
        }
        
        private void OnSetAppUploadfilesStatusOperationCompleted(object arg) {
            if ((this.SetAppUploadfilesStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAppUploadfilesStatusCompleted(this, new SetAppUploadfilesStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AsrCodeModifyForNG3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AsrCodeModifyForNG3(string fids, string asr_dbconn) {
            object[] results = this.Invoke("AsrCodeModifyForNG3", new object[] {
                        fids,
                        asr_dbconn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AsrCodeModifyForNG3Async(string fids, string asr_dbconn) {
            this.AsrCodeModifyForNG3Async(fids, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void AsrCodeModifyForNG3Async(string fids, string asr_dbconn, object userState) {
            if ((this.AsrCodeModifyForNG3OperationCompleted == null)) {
                this.AsrCodeModifyForNG3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAsrCodeModifyForNG3OperationCompleted);
            }
            this.InvokeAsync("AsrCodeModifyForNG3", new object[] {
                        fids,
                        asr_dbconn}, this.AsrCodeModifyForNG3OperationCompleted, userState);
        }
        
        private void OnAsrCodeModifyForNG3OperationCompleted(object arg) {
            if ((this.AsrCodeModifyForNG3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AsrCodeModifyForNG3Completed(this, new AsrCodeModifyForNG3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppUploadfiles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppUploadfiles(string asr_session_guid, string status) {
            object[] results = this.Invoke("GetAppUploadfiles", new object[] {
                        asr_session_guid,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppUploadfilesAsync(string asr_session_guid, string status) {
            this.GetAppUploadfilesAsync(asr_session_guid, status, null);
        }
        
        /// <remarks/>
        public void GetAppUploadfilesAsync(string asr_session_guid, string status, object userState) {
            if ((this.GetAppUploadfilesOperationCompleted == null)) {
                this.GetAppUploadfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppUploadfilesOperationCompleted);
            }
            this.InvokeAsync("GetAppUploadfiles", new object[] {
                        asr_session_guid,
                        status}, this.GetAppUploadfilesOperationCompleted, userState);
        }
        
        private void OnGetAppUploadfilesOperationCompleted(object arg) {
            if ((this.GetAppUploadfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppUploadfilesCompleted(this, new GetAppUploadfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadForInvoiceRecog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadForInvoiceRecog(string asr_guid, string asr_name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] asr_data) {
            object[] results = this.Invoke("UploadForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name,
                        asr_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadForInvoiceRecogAsync(string asr_guid, string asr_name, byte[] asr_data) {
            this.UploadForInvoiceRecogAsync(asr_guid, asr_name, asr_data, null);
        }
        
        /// <remarks/>
        public void UploadForInvoiceRecogAsync(string asr_guid, string asr_name, byte[] asr_data, object userState) {
            if ((this.UploadForInvoiceRecogOperationCompleted == null)) {
                this.UploadForInvoiceRecogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadForInvoiceRecogOperationCompleted);
            }
            this.InvokeAsync("UploadForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name,
                        asr_data}, this.UploadForInvoiceRecogOperationCompleted, userState);
        }
        
        private void OnUploadForInvoiceRecogOperationCompleted(object arg) {
            if ((this.UploadForInvoiceRecogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadForInvoiceRecogCompleted(this, new UploadForInvoiceRecogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelForInvoiceRecog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelForInvoiceRecog(string asr_guid, string asr_name) {
            object[] results = this.Invoke("DelForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelForInvoiceRecogAsync(string asr_guid, string asr_name) {
            this.DelForInvoiceRecogAsync(asr_guid, asr_name, null);
        }
        
        /// <remarks/>
        public void DelForInvoiceRecogAsync(string asr_guid, string asr_name, object userState) {
            if ((this.DelForInvoiceRecogOperationCompleted == null)) {
                this.DelForInvoiceRecogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelForInvoiceRecogOperationCompleted);
            }
            this.InvokeAsync("DelForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name}, this.DelForInvoiceRecogOperationCompleted, userState);
        }
        
        private void OnDelForInvoiceRecogOperationCompleted(object arg) {
            if ((this.DelForInvoiceRecogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelForInvoiceRecogCompleted(this, new DelForInvoiceRecogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelForInvoiceRecogEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelForInvoiceRecogEx(string asr_guid) {
            object[] results = this.Invoke("DelForInvoiceRecogEx", new object[] {
                        asr_guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelForInvoiceRecogExAsync(string asr_guid) {
            this.DelForInvoiceRecogExAsync(asr_guid, null);
        }
        
        /// <remarks/>
        public void DelForInvoiceRecogExAsync(string asr_guid, object userState) {
            if ((this.DelForInvoiceRecogExOperationCompleted == null)) {
                this.DelForInvoiceRecogExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelForInvoiceRecogExOperationCompleted);
            }
            this.InvokeAsync("DelForInvoiceRecogEx", new object[] {
                        asr_guid}, this.DelForInvoiceRecogExOperationCompleted, userState);
        }
        
        private void OnDelForInvoiceRecogExOperationCompleted(object arg) {
            if ((this.DelForInvoiceRecogExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelForInvoiceRecogExCompleted(this, new DelForInvoiceRecogExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyFileNameForInvoiceRecog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyFileNameForInvoiceRecog(string asr_guid, string asr_name_new, string asr_name_old) {
            object[] results = this.Invoke("ModifyFileNameForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name_new,
                        asr_name_old});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFileNameForInvoiceRecogAsync(string asr_guid, string asr_name_new, string asr_name_old) {
            this.ModifyFileNameForInvoiceRecogAsync(asr_guid, asr_name_new, asr_name_old, null);
        }
        
        /// <remarks/>
        public void ModifyFileNameForInvoiceRecogAsync(string asr_guid, string asr_name_new, string asr_name_old, object userState) {
            if ((this.ModifyFileNameForInvoiceRecogOperationCompleted == null)) {
                this.ModifyFileNameForInvoiceRecogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFileNameForInvoiceRecogOperationCompleted);
            }
            this.InvokeAsync("ModifyFileNameForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_name_new,
                        asr_name_old}, this.ModifyFileNameForInvoiceRecogOperationCompleted, userState);
        }
        
        private void OnModifyFileNameForInvoiceRecogOperationCompleted(object arg) {
            if ((this.ModifyFileNameForInvoiceRecogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFileNameForInvoiceRecogCompleted(this, new ModifyFileNameForInvoiceRecogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyFileNameForInvoiceRecogEx", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyFileNameForInvoiceRecogEx(string asr_guid, string param) {
            object[] results = this.Invoke("ModifyFileNameForInvoiceRecogEx", new object[] {
                        asr_guid,
                        param});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyFileNameForInvoiceRecogExAsync(string asr_guid, string param) {
            this.ModifyFileNameForInvoiceRecogExAsync(asr_guid, param, null);
        }
        
        /// <remarks/>
        public void ModifyFileNameForInvoiceRecogExAsync(string asr_guid, string param, object userState) {
            if ((this.ModifyFileNameForInvoiceRecogExOperationCompleted == null)) {
                this.ModifyFileNameForInvoiceRecogExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyFileNameForInvoiceRecogExOperationCompleted);
            }
            this.InvokeAsync("ModifyFileNameForInvoiceRecogEx", new object[] {
                        asr_guid,
                        param}, this.ModifyFileNameForInvoiceRecogExOperationCompleted, userState);
        }
        
        private void OnModifyFileNameForInvoiceRecogExOperationCompleted(object arg) {
            if ((this.ModifyFileNameForInvoiceRecogExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyFileNameForInvoiceRecogExCompleted(this, new ModifyFileNameForInvoiceRecogExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFileStatusForInvoiceRecog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFileStatusForInvoiceRecog(string asr_guid, string asr_filename) {
            object[] results = this.Invoke("UpdateFileStatusForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_filename});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFileStatusForInvoiceRecogAsync(string asr_guid, string asr_filename) {
            this.UpdateFileStatusForInvoiceRecogAsync(asr_guid, asr_filename, null);
        }
        
        /// <remarks/>
        public void UpdateFileStatusForInvoiceRecogAsync(string asr_guid, string asr_filename, object userState) {
            if ((this.UpdateFileStatusForInvoiceRecogOperationCompleted == null)) {
                this.UpdateFileStatusForInvoiceRecogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileStatusForInvoiceRecogOperationCompleted);
            }
            this.InvokeAsync("UpdateFileStatusForInvoiceRecog", new object[] {
                        asr_guid,
                        asr_filename}, this.UpdateFileStatusForInvoiceRecogOperationCompleted, userState);
        }
        
        private void OnUpdateFileStatusForInvoiceRecogOperationCompleted(object arg) {
            if ((this.UpdateFileStatusForInvoiceRecogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileStatusForInvoiceRecogCompleted(this, new UpdateFileStatusForInvoiceRecogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileByAsrFid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileByAsrFid(string asr_code, string asr_fid, string asr_dbconn) {
            object[] results = this.Invoke("GetFileByAsrFid", new object[] {
                        asr_code,
                        asr_fid,
                        asr_dbconn});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByAsrFidAsync(string asr_code, string asr_fid, string asr_dbconn) {
            this.GetFileByAsrFidAsync(asr_code, asr_fid, asr_dbconn, null);
        }
        
        /// <remarks/>
        public void GetFileByAsrFidAsync(string asr_code, string asr_fid, string asr_dbconn, object userState) {
            if ((this.GetFileByAsrFidOperationCompleted == null)) {
                this.GetFileByAsrFidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByAsrFidOperationCompleted);
            }
            this.InvokeAsync("GetFileByAsrFid", new object[] {
                        asr_code,
                        asr_fid,
                        asr_dbconn}, this.GetFileByAsrFidOperationCompleted, userState);
        }
        
        private void OnGetFileByAsrFidOperationCompleted(object arg) {
            if ((this.GetFileByAsrFidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByAsrFidCompleted(this, new GetFileByAsrFidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFile(string asr_attach_table, string asr_table, string asr_code, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] asr_data) {
            object[] results = this.Invoke("UpdateFile", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_name,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFileAsync(string asr_attach_table, string asr_table, string asr_code, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, byte[] asr_data) {
            this.UpdateFileAsync(asr_attach_table, asr_table, asr_code, asr_name, asr_fill, asr_fillname, asr_dbconn, asr_data, null);
        }
        
        /// <remarks/>
        public void UpdateFileAsync(string asr_attach_table, string asr_table, string asr_code, string asr_name, string asr_fill, string asr_fillname, string asr_dbconn, byte[] asr_data, object userState) {
            if ((this.UpdateFileOperationCompleted == null)) {
                this.UpdateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileOperationCompleted);
            }
            this.InvokeAsync("UpdateFile", new object[] {
                        asr_attach_table,
                        asr_table,
                        asr_code,
                        asr_name,
                        asr_fill,
                        asr_fillname,
                        asr_dbconn,
                        asr_data}, this.UpdateFileOperationCompleted, userState);
        }
        
        private void OnUpdateFileOperationCompleted(object arg) {
            if ((this.UpdateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileCompleted(this, new UpdateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SaveCompletedEventHandler(object sender, SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ClearCacheCompletedEventHandler(object sender, ClearCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ClearCacheWebCompletedEventHandler(object sender, ClearCacheWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearCacheWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearCacheWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DelCompletedEventHandler(object sender, DelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DelExCompletedEventHandler(object sender, DelExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InitCompletedEventHandler(object sender, InitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InitExCompletedEventHandler(object sender, InitExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InitMutilCompletedEventHandler(object sender, InitMutilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitMutilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitMutilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InitConnCompletedEventHandler(object sender, InitConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void InitConnExCompletedEventHandler(object sender, InitConnExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitConnExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitConnExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyCompletedEventHandler(object sender, CopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AyncCopyCompletedEventHandler(object sender, AyncCopyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AyncCopyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AyncCopyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyExCompletedEventHandler(object sender, CopyExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyForArchiveCompletedEventHandler(object sender, CopyForArchiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyForArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyForArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyAttachCompletedEventHandler(object sender, CopyAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void CopyAttachFromBillsCompletedEventHandler(object sender, CopyAttachFromBillsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyAttachFromBillsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyAttachFromBillsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SaveConfigCompletedEventHandler(object sender, SaveConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ReadConfigCompletedEventHandler(object sender, ReadConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAttachCountCompletedEventHandler(object sender, GetAttachCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAttachCountExCompletedEventHandler(object sender, GetAttachCountExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachCountExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachCountExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAttachModifyCountCompletedEventHandler(object sender, GetAttachModifyCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachModifyCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachModifyCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAttachInfoCompletedEventHandler(object sender, GetAttachInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAttachInfoByFidCompletedEventHandler(object sender, GetAttachInfoByFidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachInfoByFidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachInfoByFidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DataUpgradeCompletedEventHandler(object sender, DataUpgradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetGuidCompletedEventHandler(object sender, GetGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetSessionGuidCompletedEventHandler(object sender, GetSessionGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetCompletedEventHandler(object sender, GetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetOfficeCompletedEventHandler(object sender, GetOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateOfficeCompletedEventHandler(object sender, UpdateOfficeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOfficeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOfficeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SaveDataCompletedEventHandler(object sender, SaveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetPubConnCompletedEventHandler(object sender, SetPubConnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPubConnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPubConnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BatchDownloadCompletedEventHandler(object sender, BatchDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetImgUrlCompletedEventHandler(object sender, GetImgUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImgUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImgUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void PicInvokeCompletedEventHandler(object sender, PicInvokeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PicInvokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PicInvokeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void PicInvokeExCompletedEventHandler(object sender, PicInvokeExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PicInvokeExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PicInvokeExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetTableNameByASCIICompletedEventHandler(object sender, GetTableNameByASCIICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableNameByASCIICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableNameByASCIICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UploadCompletedEventHandler(object sender, UploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BatchInitCompletedEventHandler(object sender, BatchInitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchInitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchInitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void BatchSaveCompletedEventHandler(object sender, BatchSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UploadForAppCompletedEventHandler(object sender, UploadForAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadForAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadForAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void SetAppUploadfilesStatusCompletedEventHandler(object sender, SetAppUploadfilesStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAppUploadfilesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAppUploadfilesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void AsrCodeModifyForNG3CompletedEventHandler(object sender, AsrCodeModifyForNG3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AsrCodeModifyForNG3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AsrCodeModifyForNG3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetAppUploadfilesCompletedEventHandler(object sender, GetAppUploadfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppUploadfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppUploadfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UploadForInvoiceRecogCompletedEventHandler(object sender, UploadForInvoiceRecogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadForInvoiceRecogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadForInvoiceRecogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DelForInvoiceRecogCompletedEventHandler(object sender, DelForInvoiceRecogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelForInvoiceRecogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelForInvoiceRecogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void DelForInvoiceRecogExCompletedEventHandler(object sender, DelForInvoiceRecogExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelForInvoiceRecogExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelForInvoiceRecogExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ModifyFileNameForInvoiceRecogCompletedEventHandler(object sender, ModifyFileNameForInvoiceRecogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFileNameForInvoiceRecogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFileNameForInvoiceRecogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void ModifyFileNameForInvoiceRecogExCompletedEventHandler(object sender, ModifyFileNameForInvoiceRecogExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyFileNameForInvoiceRecogExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyFileNameForInvoiceRecogExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateFileStatusForInvoiceRecogCompletedEventHandler(object sender, UpdateFileStatusForInvoiceRecogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFileStatusForInvoiceRecogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFileStatusForInvoiceRecogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void GetFileByAsrFidCompletedEventHandler(object sender, GetFileByAsrFidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByAsrFidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByAsrFidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateFileCompletedEventHandler(object sender, UpdateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591