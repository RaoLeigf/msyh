// ------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本: 14.0.0.0
//  
//     对此文件的更改可能导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SUP.CustomForm.ServerGen.AppTemplate
{
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class AppControllerTemplate : AppControllerTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"using System;
using System.Collections.Generic;
using System.Data;
using System.Dynamic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;
using System.Web;
using System.Web.Mvc;
using System.Web.SessionState;
using System.Xml;
using System.Xml.Serialization;
using System.IO;
using System.Drawing;

using Enterprise3.Common.Model;
using Enterprise3.NHORM.Controller;
using Enterprise3.NHORM.Rule;
using Enterprise3.Rights.AnalyticEngine;
using Enterprise3.Common.BizBase;

using Microsoft.CSharp;
using MySql.Data;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

using NG3;
using NG3.Aop;
using NG3.Aop.Transaction;
using NG3.Bill.Base;
using NG3.Data;
using NG3.Data.Service;
using NG3.Web.Controller;
using NG3.Web.Mvc;
using SUP.Common.Base;
using SUP.Common.DataAccess;
using SUP.CustomForm.Controller;
using SUP.CustomForm.DataAccess;
using SUP.CustomForm.Rule;

namespace ");
            
            #line 42 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nameSpace + ".Controller"));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    //Controller层\r\n\tpublic class ");
            
            #line 45 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("ListController : CustomAFController\r\n\t{\r\n\t\tprivate ");
            
            #line 47 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I"+className+"Fac"));
            
            #line default
            #line hidden
            this.Write(" Fac;\r\n\t\tprivate CustomCommonController customCommon;\r\n\r\n\t\tpublic ");
            
            #line 50 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("ListController()\r\n\t\t{\r\n\t\t\t//Fac = new ");
            
            #line 52 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac();\r\n\t\t\tFac = AopObjectProxy.GetObject<I");
            
            #line 53 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac>(new ");
            
            #line 53 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac());\r\n\t\t\tcustomCommon = new CustomCommonController();\r\n\t\t}\r\n\r\n\t\t/*List页面*/\r\n\t\t" +
                    "public ActionResult Index()\r\n\t\t{\r\n\t\t\t//多语言支持\t\t\t\r\n\t\t\tbase.InitialMultiLanguage(\"");
            
            #line 61 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n\t\t\t//标签页标题\r\n\t\t\tViewBag.Title = base.GetMenuLanguage(\"");
            
            #line 64 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tif (string.IsNullOrEmpty(ViewBag.Title)) { ViewBag.Title = \"");
            
            #line 65 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Title));
            
            #line default
            #line hidden
            this.Write(@"""; }

			//判断是否单点登录
            if (string.IsNullOrWhiteSpace(ViewBag.IsSso))
            {
                ViewBag.IsSso = ""false"";
            }

			//判断是否记账
			ViewBag.IsIad = System.Web.HttpContext.Current.Request.Params[""isiad""];

			//获取公共选项设置
			ViewBag.EditBySelf = customCommon.GetOptionValue(""edit"");      //仅修改自己的单据
			ViewBag.DeleteBySelf = customCommon.GetOptionValue(""delete"");  //仅删除自己的单据
			ViewBag.CheckBySelf = customCommon.GetOptionValue(""check"");    //仅允许他人审核自己的单据
			ViewBag.EditAttach = customCommon.GetOptionValue(""attach"");    //单据审核后也允许修改附件
			if (string.IsNullOrWhiteSpace(ViewBag.EditAttach))
            {
                ViewBag.EditAttach = ""1"";
            }

			//默认项目
			ViewBag.defaultPc = new Enterprise3.Common.BizBase.CommonBiz().GetCurrentProjectId();
			
			//性能优化
			this.ToolbarRightNames = new string[] { """);
            
            #line 90 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(QForm));
            
            #line default
            #line hidden
            this.Write("\" };\r\n            this.QueryPanelIDs = new string[] { \"Web:");
            
            #line 91 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PForm));
            
            #line default
            #line hidden
            this.Write("List\" };\r\n            this.GridStateIDs = new string[] { \"");
            
            #line 92 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("grid\" };\r\n\r\n\t\t\treturn View(\"");
            
            #line 94 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(@"List"");
		}

		/*获得主表列表数据;*/
		public string GetList()
		{
			string limit = System.Web.HttpContext.Current.Request.Params[""limit""];
			string page = System.Web.HttpContext.Current.Request.Params[""page""];
			string clientJsonQuery = System.Web.HttpContext.Current.Request.Params[""queryfilter""];
			
			//组织树传递数据			
			string clientfilter = System.Web.HttpContext.Current.Request.Params[""clientfilter""];
			string orgFilter = string.Empty;

			if (!string.IsNullOrEmpty(clientfilter))
			{
				Dictionary<string, object> dic = DataConverterHelper.ConvertToDic(clientfilter);

				long[] cnttypes = { };
				long[] orgs = { };
				long[] projs = { };
				customCommon.AnalyOrgQuery(dic, ref cnttypes, ref orgs, ref projs);

				string inWhere = string.Empty;
				
				if (orgs.Length > 0)
				{
					for (int i = 0; i < orgs.Length; i++)
					{
						inWhere += "","" + Convert.ToString(orgs[i]);
					}
					inWhere = inWhere.Substring(1);
					orgFilter += "" ocode in ("" + inWhere + "")"";
				}

				//主表是否有pc项目列
				var mstDt = DbHelper.GetDataTable(""select * from ");
            
            #line 130 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(" where 1=2\");\r\n\t\t\t\tif (mstDt.Columns.Contains(\"pc\"))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (projs.Lengt" +
                    "h > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tinWhere = \"\";\r\n\t\t\t\t\t\tif (!string.IsNullOrEmpty(orgFilter))" +
                    "  //不为空说明有组织过滤条件\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\torgFilter += \" and \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tf" +
                    "or (int i = 0; i < projs.Length; i++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tinWhere += \",\" + Convert." +
                    "ToString(projs[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinWhere = inWhere.Substring(1);\r\n\t\t\t\t\t\torgFi" +
                    "lter += \" pc in (\" + inWhere + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (page == null)" +
                    "\r\n\t\t\t\tpage=\"0\";\r\n\r\n\t\t\tint pageSize = int.Parse(limit);\r\n\t\t\tint pageIndex = int.P" +
                    "arse(page);\r\n\t\t\tint totalRecord = 0;\r\n\t\t\t\r\n\t\t\tDataTable dt = Fac.GetMasterList(c" +
                    "lientJsonQuery, pageSize, pageIndex, ref totalRecord, orgFilter);\r\n\t\t\tstring jso" +
                    "n = DataConverterHelper.ToJson(dt, totalRecord);\r\n\r\n\t\t\treturn json;\r\n\t\t}\r\n\r\n\t\t/*" +
                    "删除信息;*/\r\n\t\tpublic string Delete(string id)\r\n\t\t{\r\n\t\t\tvar extendParam = System.Web" +
                    ".HttpContext.Current.Request.Params[\"extendParam\"];\r\n\r\n            int iret = Fa" +
                    "c.Delete(id, extendParam);\r\n\r\n            JObject jResult = new JObject();\r\n    " +
                    "        if (iret != -1)\r\n            {\r\n                jResult.Add(\"status\", \"O" +
                    "K\");\r\n                return JsonConvert.SerializeObject(jResult);\r\n            " +
                    "}\r\n            else\r\n            {\r\n                jResult.Add(\"status\", \"Fail\"" +
                    ");\r\n                return JsonConvert.SerializeObject(jResult);\r\n            }\r" +
                    "\n\t\t}\r\n\r\n\t\t/*审核或去审核;*/\r\n\t\tpublic string Verify(string id)\r\n\t\t{\r\n\t\t\tvar isApplyChe" +
                    "ck = System.Web.HttpContext.Current.Request.Params[\"isapplycheck\"];\r\n\t\t\tvar para" +
                    "mValue = System.Web.HttpContext.Current.Request.Params[\"paramvalue\"];\r\n\t\t\tvar re" +
                    "ceiverId = System.Web.HttpContext.Current.Request.Params[\"receiverid\"];\r\n\t\t\tvar " +
                    "extendParam = System.Web.HttpContext.Current.Request.Params[\"extendParam\"];\r\n\r\n " +
                    "           int iret = Fac.Verify(id, extendParam);\r\n\r\n            JObject jResul" +
                    "t = new JObject();\r\n            if (iret != -1)\r\n            {\r\n\t\t\t\t//去审核成功后代办事宜" +
                    "中删除记录\r\n\t\t\t\tif (isApplyCheck == \"1\")\r\n\t\t\t\t{\r\n\t\t\t\t\tApplyCheck apply = new ApplyChe" +
                    "ck();\r\n\t\t\t\t\tbool rtnBool = apply.DeleteApplyCheck(string.Empty, string.Empty, NG" +
                    "3.AppInfoBase.LoginID, paramValue, receiverId);\r\n\t\t\t\t\tjResult.Add(\"RemoveStatus\"" +
                    ", rtnBool ? \"true\" : \"false\");\r\n\t\t\t\t}\r\n\r\n                jResult.Add(\"status\", \"" +
                    "OK\");\t\t\t\t\r\n                return JsonConvert.SerializeObject(jResult);\r\n       " +
                    "     }\r\n            else\r\n            {\r\n                jResult.Add(\"status\", \"" +
                    "Fail\");\r\n                return JsonConvert.SerializeObject(jResult);\r\n         " +
                    "   }\r\n\t\t}\r\n\t}\r\n\t\r\n\t[SessionState(SessionStateBehavior.ReadOnly)] \r\n\tpublic class" +
                    " ");
            
            #line 217 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("EditController : CustomAFController\r\n\t{\r\n\t\tprivate ");
            
            #line 219 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I"+className+"Fac"));
            
            #line default
            #line hidden
            this.Write(" Fac;\r\n\t\tprivate CustomCommonController customCommon;\r\n\r\n        public ");
            
            #line 222 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("EditController()\r\n        {\r\n            //Fac = new ");
            
            #line 224 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac();\r\n\t\t\tFac = AopObjectProxy.GetObject<I");
            
            #line 225 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac>(new ");
            
            #line 225 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Fac());\r\n\t\t\tcustomCommon = new CustomCommonController();\r\n        }\r\n\r\n\t\t/*编辑页面*/" +
                    "\r\n\t\tpublic ActionResult Index()\r\n\t\t{\r\n\t\t\t//多语言支持\r\n\t\t\tbase.InitialMultiLanguage(\"" +
                    "");
            
            #line 233 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n\t\t\tViewBag.OType = System.Web.HttpContext.Current.Request.Params[\"otype\"];" +
                    "\r\n            ViewBag.ID = System.Web.HttpContext.Current.Request.Params[\"id\"];\r" +
                    "\n\t\t\tViewBag.IsSso = System.Web.HttpContext.Current.Request.Params[\"issso\"];\r\n\t\t\t" +
                    "ViewBag.CurDate = DateTime.Now.ToString(\"yyyy-MM-dd\");\r\n\t\t\tViewBag.CurTime = Dat" +
                    "eTime.Now.ToString(\"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\tViewBag.TreeOrgId = System.Web.Ht" +
                    "tpContext.Current.Request.Params[\"treeorgid\"];\r\n\t\t\tViewBag.TreeProjId = System.W" +
                    "eb.HttpContext.Current.Request.Params[\"treeprojid\"];\r\n\t\t\tViewBag.IsApplyCheck = " +
                    "System.Web.HttpContext.Current.Request.Params[\"isapplycheck\"];\r\n\t\t\tViewBag.BusTy" +
                    "pe = System.Web.HttpContext.Current.Request.Params[\"bustype\"];  //2：来自查看原始单据；其它：" +
                    "普通打开\r\n\t\t\tViewBag.IDs = System.Web.HttpContext.Current.Request.Params[\"ids\"];  //" +
                    "任务分解下级单据id集合\r\n\r\n\t\t\t//获取公共选项设置\r\n\t\t\tViewBag.EditAttach = customCommon.GetOptionVal" +
                    "ue(\"attach\");  //单据审核后允许的修改附件\r\n\t\t\tif (string.IsNullOrWhiteSpace(ViewBag.EditAtta" +
                    "ch))\r\n            {\r\n                ViewBag.EditAttach = \"1\";\r\n            }\r\n\r" +
                    "\n\t\t\t//任务分解：流程id，节点id，模板id\r\n\t\t\tViewBag.PhidWork = System.Web.HttpContext.Current." +
                    "Request.Params[\"phidwork\"];\r\n\t\t\tViewBag.PhidWorkNode = System.Web.HttpContext.Cu" +
                    "rrent.Request.Params[\"phidworknode\"];\r\n\t\t\tViewBag.PhidTemplate = System.Web.Http" +
                    "Context.Current.Request.Params[\"phidtemplate\"];\r\n\r\n\t\t\t//判断该流程id和节点id的单据是否存在\r\n\t\t\t" +
                    "if (!string.IsNullOrEmpty(ViewBag.PhidWork) && !string.IsNullOrEmpty(ViewBag.Phi" +
                    "dWorkNode))\r\n            {                \r\n                string exphid = DbHe" +
                    "lper.GetString(string.Format(\"select phid from ");
            
            #line 261 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(@" where s_task_wf='{0}' and s_task_node='{1}'"", ViewBag.PhidWork, ViewBag.PhidWorkNode));
				if (!string.IsNullOrEmpty(exphid))
                {
                    ViewBag.OType = ""edit"";
					ViewBag.ID = exphid;
                }
            }			

			//标签页标题
			ViewBag.Title = base.GetMenuLanguage(""");
            
            #line 270 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\tif (string.IsNullOrEmpty(ViewBag.Title))\r\n            {\r\n\t\t\t\tViewBag.Titl" +
                    "e = \"");
            
            #line 273 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Title));
            
            #line default
            #line hidden
            this.Write(@""";

				if (!string.IsNullOrEmpty(ViewBag.WorkFlowInfo))
				{
					ViewBag.Title += ""-工作流"";
				}
				else
				{
					if (ViewBag.OType == ""add"")
					{
						ViewBag.Title += ""-新增"";
					}
					else if (ViewBag.OType == ""edit"")
					{
						ViewBag.Title += ""-修改"";
					}
					else if (ViewBag.OType == ""view"")
					{
						if (ViewBag.BusType == ""2"")
						{
							ViewBag.Title += ""-原汇总信息"";
						}
						else
						{
							ViewBag.Title += ""-查看"";
						}
					}
					else if (ViewBag.OType == ""copy"")
					{
						ViewBag.Title += ""-复制"";
					}
				}
            }

            //判断是否单点登录
            if (string.IsNullOrWhiteSpace(ViewBag.IsSso))
            {
                ViewBag.IsSso = ""false"";
            }

			if (ViewBag.OType == ""add"" || ViewBag.OType == ""copy"")  //新增或复制
			{
				try
				{
					bool hasRule = Enterprise3.Common.BizBase.CommonBiz.HasBillNoRule(""");
            
            #line 317 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t\t\tif (hasRule)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar billId = new Enterprise3.NHORM.Rule.Bil" +
                    "lNoCommon();\r\n\t\t\t\t\t\tbillId.BillNoReqType = \"");
            
            #line 321 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\t\t\t\tViewBag.BillNo = billId.GetBillNo(false).BillNoList.Last();\r\n\t\t\t\t\t}\r\n\t\t" +
                    "\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tViewBag.BillNo = CustomCommonController.GetBillNo(\"");
            
            #line 326 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\");;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch (Exception)\r\n                {\r\n\t\t\t\t\tViewBag.billN" +
                    "o = CustomCommonController.GetBillNo(\"");
            
            #line 331 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\");\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\t//性能优化\r\n\t\t\tList<string> list = new List<string" +
                    ">();\r\n\t\t\tlist.Add(\"");
            
            #line 337 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("workflowhisgrid\");\r\n\t\t\t");
            
            #line 338 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tlist.Add(\"");
            
            #line 339 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("grid\");\r\n\t\t\t");
            
            #line 340 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t\tthis.GridStateIDs = list.ToArray();\r\n\r\n\t\t\treturn View(\"");
            
            #line 343 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Edit\");\r\n\t\t}\r\n\r\n\t\t/*获取表头信息;*/\r\n\t\tpublic string GetMasterInfo(string id)\r\n\t\t{\r\n   " +
                    "         DataTable dt = Fac.GetMasterInfo(id);\r\n            JObject jResult = ne" +
                    "w JObject();\r\n\r\n\t\t\t");
            
            #line 352 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var bitmapName in bitmapNameList) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tstring ");
            
            #line 353 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("url = dt.Rows[0][\"");
            
            #line 353 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("_url\"].ToString();\r\n\t\t\tstring ");
            
            #line 354 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("attachphid = dt.Rows[0][\"");
            
            #line 354 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("_attachphid\"].ToString();\r\n\t\t\tif (!string.IsNullOrEmpty(");
            
            #line 355 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("url) && !string.IsNullOrEmpty(");
            
            #line 355 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("attachphid) && !System.IO.File.Exists(Request.PhysicalApplicationPath + ");
            
            #line 355 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("url))\r\n\t\t\t{\r\n\t\t\t    byte[] buffer = NG3UploadFileService.NG3GetEx(\"\", long.Parse(" +
                    "");
            
            #line 357 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write(@"attachphid));
				string dirPath = AppDomain.CurrentDomain.BaseDirectory + ""/NG3Resource/TempImgUpload/"";
                if (!Directory.Exists(dirPath))
                {
                    Directory.CreateDirectory(dirPath);
                }
                System.IO.File.WriteAllBytes(Request.PhysicalApplicationPath + ");
            
            #line 363 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("url, buffer);\r\n\t\t\t}\r\n\t\t\t");
            
            #line 365 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
            if (dt.Rows.Count > 0)
            {
                JObject dataObj = dt.Rows[0].ToJObject();
                jResult.Add(""Status"", ""OK"");
                jResult.Add(""Data"", dataObj);
                return JsonConvert.SerializeObject(jResult);
            }
            else
            {
                jResult.Add(""Status"", ""Fail"");
                return JsonConvert.SerializeObject(jResult);
            }
		}

	");
            
            #line 381 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t/*此段生成GetDetailInfo相关的方法，一张detail明细表对应一个GetDetailInfo方法;*/\r\n\t\tpublic string Get" +
                    "");
            
            #line 383 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write(@"List()
		{
			string id = System.Web.HttpContext.Current.Request.Params[""id""];
			string ids = System.Web.HttpContext.Current.Request.Params[""ids""];
			string bustype = System.Web.HttpContext.Current.Request.Params[""bustype""];  //1：来自汇总；2：来自查看原始单据；其它：普通查询			
			string phidwork = System.Web.HttpContext.Current.Request.Params[""phidwork""];  //任务分解：流程id
			string istreegrid = System.Web.HttpContext.Current.Request.Params[""istreegrid""];
			string nodeid = System.Web.HttpContext.Current.Request.Params[""node""];
			string json = string.Empty;
			
			DataTable dt = null;  //返回的dt

			//普通查询明细grid
			if (string.IsNullOrEmpty(bustype))
            {
				dt = Fac.Get");
            
            #line 398 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(id, 0);\r\n            }\r\n\t\t\t//汇总流程是先删除此单据明细记录，新增下级单据的汇总行再保存并返回汇总行；查看原始单据是直接返回" +
                    "汇总行\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tDataTable dts = Fac.Get");
            
            #line 403 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(ids, 1);\r\n\t\t\t\tdts.TableName = \"");
            
            #line 404 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n\t\t\t\t//数据汇总\r\n                if (dts.Rows.Count > 0)\r\n                {\r\n\t\t\t" +
                    "\t\t//获取任务分解用到的明细表的分组小计信息\r\n\t\t\t\t\tDataSet ds_subtotal = SUP.CustomForm.DataAccess.Co" +
                    "mmon.GetSubtotalDS(\"");
            
            #line 410 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write("\", phidwork);\r\n\t\t\t\t\tDataTable dt_subtotal = ds_subtotal.Tables[\"");
            
            #line 411 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write(@"""];

					//任务分解汇总下级单据
					dt = customCommon.MergeGrid(dts, id, dt_subtotal, bustype);  //bustype：1汇总，2查看原始单据
                }
			}

			//树grid需要转换成树json
			if (istreegrid == ""1"")  
			{
				CustomTreeBuilder builder = new CustomTreeBuilder();
				string filter = ""(s_tree_pid is null or s_tree_pid='' or s_tree_pid='0')"";

				if (""root"" == nodeid)  //首次加载
				{
					JArray ja = builder.GetTreeList(dt, ""s_tree_pid"", ""s_tree_id"", filter, ""phid"", TreeDataLevelType.TopLevel, 5);
					json = JsonConvert.SerializeObject(ja);
				}
				else  //懒加载
				{
					JArray ja = builder.GetTreeList(dt, ""s_tree_pid"", ""s_tree_id"", filter, ""phid"", TreeDataLevelType.LazyLevel);
					json = JsonConvert.SerializeObject(ja);
				}
			}
			else
			{
				json = SUP.Common.Base.DataConverterHelper.ToJson(dt, 1);
			}

			return json;
		}
	");
            
            #line 442 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\tpublic string Save()\r\n\t\t{\r\n\t\t\tstring formdata = System.Web.HttpContext.Curr" +
                    "ent.Request.Params[\"formdata\"];\r\n\t\t\tDataTable masterdt = DataConverterHelper.ToD" +
                    "ataTable(formdata, \"");
            
            #line 448 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("select * from " + tableNameM));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n\t\t\t");
            
            #line 450 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var bitmapName in bitmapNameList) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tstring ");
            
            #line 451 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("path = Request.PhysicalApplicationPath + masterdt.Rows[0][\"");
            
            #line 451 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("_url\"].ToString();\r\n\t\t\tif (System.IO.File.Exists(");
            
            #line 452 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("path))\r\n\t\t\t{\r\n\t\t\t    byte[] buffer;\r\n\t\t\t\tusing (FileStream fs = new FileStream(");
            
            #line 455 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("path, FileMode.Open, FileAccess.Read))\r\n\t\t\t\t{\r\n\t\t\t\t    buffer = new byte[fs.Lengt" +
                    "h];\r\n                    fs.Read(buffer, 0, (int)fs.Length);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstrin" +
                    "g attachphid = masterdt.Rows[0][\"");
            
            #line 461 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write(@"_attachphid""].ToString();
				if (string.IsNullOrEmpty(attachphid))
				{
				    JObject jo = (JObject)JsonConvert.DeserializeObject(NG3UploadFileService.NG3UploadEx("""", buffer));
				    if (jo[""success""] != null && jo[""success""].ToString() == ""true"")
				    {
				        masterdt.Rows[0][""");
            
            #line 467 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write("_attachphid\"] = jo[\"phid\"].ToString();\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t  " +
                    "  NG3UploadFileService.NG3ModifyEx(\"\", long.Parse(attachphid), buffer);\r\n\t\t\t\t}\r\n" +
                    "\t\t\t}\r\n\t\t\t");
            
            #line 475 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tIList<DataTable> detailList = new List<DataTable>();\r\n\r\n\t\t");
            
            #line 479 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t/*每张detail明细表生成对应的保存语句;*/\r\n\t\t\tstring ");
            
            #line 481 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("data = System.Web.HttpContext.Current.Request.Params[\"");
            
            #line 481 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("data\"];\r\n\t\t\tDataTable ");
            
            #line 482 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("detaildt = new DataTable();\r\n\t\t\t");
            
            #line 483 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("detaildt = DataConverterHelper.ToDataTable(");
            
            #line 483 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("data, \"");
            
            #line 483 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("select * from " + detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\t\t");
            
            #line 484 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("detaildt.TableName = \"");
            
            #line 484 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\t\tdetailList.Add(");
            
            #line 485 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("detaildt);\r\n\t\t");
            
            #line 486 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n            int iret = 0;\r\n\t\t\tstring id = string.Empty;\r\n\t\t\tstring msg=string.E" +
                    "mpty;\r\n\t\t\t/****************************************\r\n             * 这里多出来两个参数 ;\r" +
                    "\n             * SQL（SQL语句）;\r\n             * exec （存储过程的方法名和参数）;\r\n             **" +
                    "**************************************/\r\n            var sqlStr = System.Web.Htt" +
                    "pContext.Current.Request.Params[\"sql\"];\r\n            var exec = System.Web.HttpC" +
                    "ontext.Current.Request.Params[\"exec\"];\r\n\t\t\tvar extendParam = System.Web.HttpCont" +
                    "ext.Current.Request.Params[\"extendParam\"];\r\n\r\n\t\t\t//任务分解的模板id\r\n\t\t\tstring phidtemp" +
                    "late = System.Web.HttpContext.Current.Request.Params[\"phidtemplate\"];\r\n\r\n       " +
                    "     if (!string.IsNullOrEmpty(sqlStr))\r\n            {\r\n                var sqlS" +
                    "trSplit = sqlStr.Trim().Split(\';\');\r\n                IList<string> sqlList = new" +
                    " List<string>();\r\n                foreach (string sql in sqlStrSplit)\r\n         " +
                    "       {\r\n                    if (!string.IsNullOrEmpty(sql))\r\n                 " +
                    "   {\r\n                        sqlList.Add(sql);\r\n                    }\r\n        " +
                    "        }\r\n\r\n                iret = Fac.Save(masterdt, detailList, ref id, sqlLi" +
                    "st, exec, extendParam, phidtemplate);\r\n            }\r\n            else\r\n        " +
                    "    {\r\n\t\t\t\tiret = Fac.Save(masterdt, detailList, ref id, new List<string>(), exe" +
                    "c, extendParam, phidtemplate);\r\n            }\r\n\r\n            JObject jResult = n" +
                    "ew JObject();\r\n            if (iret != -1)\r\n            {\t\t\t\t\r\n\t\t\t\t//拼返回结果串\r\n   " +
                    "             jResult.Add(\"Status\", \"OK\");\r\n\t\t\t\tjResult.Add(\"id\", id);\r\n         " +
                    "       return JsonConvert.SerializeObject(jResult);\r\n            }\r\n            " +
                    "else\r\n            {\r\n                jResult.Add(\"Status\", \"Fail\");\r\n           " +
                    "     return JsonConvert.SerializeObject(jResult);\r\n            }\r\n\t\t}\r\n\r\n\t\t");
            
            #line 537 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var bitmapName in bitmapNameList) { 
            
            #line default
            #line hidden
            this.Write("\t\t/// <summary>\r\n        /// 图片上传\r\n        /// </summary>\r\n        /// <returns><" +
                    "/returns>\r\n        [ActionAuthorize(NG3.Web.Mvc.Level.NonCheck)]\r\n        public" +
                    " string ");
            
            #line 543 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(bitmapName));
            
            #line default
            #line hidden
            this.Write(@"ImageUpload()
        {
            System.Web.HttpRequest request = System.Web.HttpContext.Current.Request;
            System.Web.HttpPostedFile imgreq = request.Files[0];
            string path = string.Empty;
            string filetype = imgreq.FileName.Substring(imgreq.FileName.LastIndexOf(""."") + 1);
			if(filetype != ""png"" && filetype != ""jpg"" && filetype != ""bmp"")
			{
			    return DataConverterHelper.SerializeObject(new
                {
                    success = false,
                    msg = ""请选择图片文件！""
                });
			}
            using (Stream imgstream = imgreq.InputStream)
            {
                using (var img = Image.FromStream(imgstream))
                {                    
                    path = ImageSaveFile(img, filetype);
                }
            }
            return DataConverterHelper.SerializeObject(new
            {
                success = true,
                path = path
            });
        }		
		");
            
            #line 570 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 572 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 if (bitmapNameList.Count > 0) { 
            
            #line default
            #line hidden
            this.Write(@"       
        private string ImageSaveFile(Image img, string filetype)
        {
            var dirPath = AppDomain.CurrentDomain.BaseDirectory + ""/NG3Resource/TempImgUpload/"";
            if (!Directory.Exists(dirPath))
            {
                Directory.CreateDirectory(dirPath);
            }
            
            string path = string.Format(""/NG3Resource/TempImgUpload/{0}.{1}"", Guid.NewGuid().ToString(), filetype);
            img.Save(AppDomain.CurrentDomain.BaseDirectory + path);
            return path;
        }

		");
            
            #line 587 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t");
            
            #line 589 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 if (HasAsrGrid == "1") { 
            
            #line default
            #line hidden
            this.Write(@"		/// <summary>
        /// 获取附件单据体
        /// <summary>
        public string GetAsrGridList(string tablename,string asr_code)
        {
		    DataTable dt = new DataTable();
            dt.TableName = ""AsrGrid"";

            dt.Columns.Add(new DataColumn(""asr_name"", Type.GetType(""System.String"")));
            dt.Columns.Add(new DataColumn(""logid"", Type.GetType(""System.String"")));
            dt.Columns.Add(new DataColumn(""asr_dt"", Type.GetType(""System.String"")));

            DataTable attachInfoDt = NG3UploadFileService.NG3GetAttachInfo(NG3.AppInfoBase.UserConnectString, tablename, ""c_pfc_attachment"", asr_code);
			DataRow dr;
			for (int i = 0;i < attachInfoDt.Rows.Count; i++)
			{
			    dr = dt.NewRow();
			    dr[""asr_name""] = attachInfoDt.Rows[i][""asr_name""];
                dr[""logid""] = attachInfoDt.Rows[i][""asr_fillname""];
				dr[""asr_dt""] = attachInfoDt.Rows[i][""asr_filldt""];
				dt.Rows.Add(dr);
			}

			return  DataConverterHelper.ToJson(dt, dt.Rows.Count);
        }
		");
            
            #line 615 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t/// <summary>\r\n        /// 拷贝附件\r\n        /// <summary>\r\n\t\tpublic string CopyA" +
                    "ttachment(string tablename, string oriphid, string origuid)\r\n\t\t{\r\n\t\t    var bill" +
                    "Id = new Enterprise3.NHORM.Rule.BillNoCommon();\r\n\t\t\tbillId.BillNoReqType = \"");
            
            #line 623 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write(@""";
			string asr_code = billId.GetBillId(tablename, ""phid"").ToString();
			NG3UploadFileService.InitEx(origuid, ""c_pfc_attachment"", tablename, oriphid, NG3.AppInfoBase.LoginID, NG3.AppInfoBase.UserName, NG3.AppInfoBase.UserConnectString);
			return NG3UploadFileService.CopyAttach(""c_pfc_attachment"", tablename, asr_code, NG3.AppInfoBase.LoginID, NG3.AppInfoBase.UserName, NG3.AppInfoBase.UserConnectString, origuid);
		}

	}


	//Facade层
	public interface ");
            
            #line 633 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I"+className+"Fac"));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\t\r\n\t\tDataTable GetMasterList(string clientFilter, int pageSize, int PageIndex" +
                    ", ref int totalRecord, string orgFilter);\r\n\r\n\t\tDataTable GetMasterInfo(string ph" +
                    "id);\r\n\t\t\r\n\t");
            
            #line 639 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t/*生成GetDetailInfo相关的接口;*/\r\n\t\tDataTable Get");
            
            #line 641 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(string id, int type);\r\n\t");
            
            #line 642 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
		int Save(DataTable masterdt, IList<DataTable> detaildt, ref string id, IList<string> sqlList, string execStr, string extendParam, string phidtemplate);

		int Delete(string phid, string extendParam);

		int Verify(string phid, string extendParam);

		void FuncParser(ref int iRet, string extendParam);

		int MergeSubmit(DataTable dts, string id);
	}

	public class ");
            
            #line 655 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className+"Fac"));
            
            #line default
            #line hidden
            this.Write(":");
            
            #line 655 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture("I"+className+"Fac"));
            
            #line default
            #line hidden
            this.Write("\r\n\t{\r\n\t\tprivate ");
            
            #line 657 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className+"Dac"));
            
            #line default
            #line hidden
            this.Write(" dac=new ");
            
            #line 657 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className+"Dac"));
            
            #line default
            #line hidden
            this.Write(@"();

		[DBControl]
		public DataTable GetMasterList(string clientFilter, int pageSize, int PageIndex, ref int totalRecord, string orgFilter)
		{
			return dac.GetMasterList(clientFilter, pageSize, PageIndex, ref totalRecord, orgFilter);
		}

		[DBControl]
		public DataTable GetMasterInfo(string phid)
		{
			return dac.GetMasterInfo(phid);
		}				
		
	");
            
            #line 671 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t/*这段代码生成GetDetailInfo相关的方法，一张detail明细表对应一个方法;*/\r\n\t\t[DBControl]\r\n\t\tpublic DataTa" +
                    "ble Get");
            
            #line 674 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(string id, int type)\r\n\t\t{\r\n\t\t\treturn dac.Get");
            
            #line 676 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(id, type);\r\n\t\t}\r\n\t");
            
            #line 678 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t[DBControl(ControlOption = DbControlOption.BeginTransaction)]\r\n\t\tpublic int S" +
                    "ave(DataTable masterdt, IList<DataTable> detailList, ref string id, IList<string" +
                    "> sqlList, string execStr, string extendParam, string phidtemplate)\r\n\t\t{\r\n\t\t\t//单" +
                    "据保存，附件先保存，以免dac中保存时把code清空\r\n\t\t\tint iRet = dac.Save(masterdt, detailList, ref id," +
                    " sqlList, execStr, phidtemplate);\r\n\r\n\t\t\t//附件保存\r\n\t\t\tstring saveparms = string.Emp" +
                    "ty;\r\n\t\t\tstring code = masterdt.Rows[0][\"code\"].ToString();\r\n\r\n\t\t\tif (!string.IsN" +
                    "ullOrEmpty(code) && code.Length > 30)  //guid长度为36\r\n\t\t\t{\r\n\t\t\t\tsaveparms += code " +
                    "+ \"||\" + id + \"@@##\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tforeach (DataTable dt in detailList)\r\n\t\t\t{\r" +
                    "\n\t\t\t\tforeach (DataRow row in dt.Rows)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!string.IsNullOrEmpty(row" +
                    "[\"code\"].ToString()) && row[\"code\"].ToString().Length > 30 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsave" +
                    "parms += row[\"code\"].ToString() + \"||\" + row[\"phid\"].ToString() + \"@@##\";\r\n\t\t\t\t\t" +
                    "}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!string.IsNullOrEmpty(saveparms))\r\n\t\t\t{\r\n\t\t\t\tsaveparms " +
                    "= saveparms.TrimEnd(\'#\', \'@\');\r\n\t\t\t\tstring sRet = NG3UploadFileService.BatchSave" +
                    "(saveparms, NG3.AppInfoBase.UserConnectString);\r\n\t\t\t\t//附件保存失败\r\n\t\t\t\tif (sRet != \"" +
                    "1\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Exception(\"BatchSave返回值：\" + sRet);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t" +
                    "\t//执行元数据函数\r\n\t\t\tFuncParser(ref iRet, extendParam);\r\n\t\t\t\r\n\t\t\treturn iRet;\r\n\t\t}\r\n\r\n" +
                    "\t\t[DBControl(ControlOption = DbControlOption.BeginTransaction)]\r\n\t\tpublic int De" +
                    "lete(string phid, string extendParam)\r\n\t\t{\r\n\t\t\tint iRet = dac.Delete(phid);\r\n\r\n\t" +
                    "\t\t//执行元数据函数\r\n\t\t\tFuncParser(ref iRet, extendParam);\r\n\r\n\t\t\treturn iRet;\r\n\t\t}\r\n\r\n\t\t" +
                    "[DBControl(ControlOption = DbControlOption.BeginTransaction)]\r\n\t\tpublic int Veri" +
                    "fy(string phid, string extendParam)\r\n\t\t{\r\n\t\t\tint iRet = dac.Verify(phid);\r\n\r\n\t\t\t" +
                    "//执行元数据函数\r\n\t\t\tFuncParser(ref iRet, extendParam);\r\n\r\n\t\t\treturn iRet;\r\n\t\t}\r\n\r\n\t\t//" +
                    "执行注册好的元数据函数\r\n\t\tpublic void FuncParser(ref int iRet, string extendParam)\r\n\t\t{\t\t\t\r" +
                    "\n\t\t\tif (iRet >= 0 && !string.IsNullOrEmpty(extendParam))\r\n            {\r\n\t\t\t\tstr" +
                    "ing resultStr = new ServerFuncParserRule().FuncParser(\"");
            
            #line 750 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(PForm));
            
            #line default
            #line hidden
            this.Write("\", extendParam);\r\n\t\t\t\tif (resultStr.Equals(\"fail\"))\r\n\t\t\t\t\tiRet = -1;\r\n\t\t\t}\r\n\t\t}\r\n" +
                    "\r\n\t\t[DBControl]\r\n\t\tpublic int MergeSubmit(DataTable dts, string id)\r\n\t\t{\r\n\t\t\tret" +
                    "urn dac.MergeSubmit(dts, id);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t//DataAccess层\r\n\tpublic class ");
            
            #line 765 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className+"Dac"));
            
            #line default
            #line hidden
            this.Write(@"
	{
	    /// <summary>
        /// 获取列表数据;
        /// </summary>
        /// <param name=""clientFilter"">查询条件</param>
        /// <param name=""pageSize"">页面长度</param>
        /// <param name=""PageIndex"">页码</param>
        /// <param name=""totalRecord"">总记录条数</param>
        /// <returns></returns>
		public DataTable GetMasterList(string clientFilter, int pageSize, int PageIndex ,ref int totalRecord, string orgFilter)
        {
			/*
            string sql = """);
            
            #line 778 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sqlList));
            
            #line default
            #line hidden
            this.Write(@""";

			int index = sql.IndexOf(""LEFT OUTER"", StringComparison.OrdinalIgnoreCase);
			if(index > 0)
			{
				sql = sql.Substring(0,index);
			}

			index = sql.IndexOf(""WHERE"", StringComparison.OrdinalIgnoreCase);
			if(index > 0)
			{
				sql = sql.Substring(0,index);
			}
			*/

			string sql = ""select * from ");
            
            #line 793 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\";\r\n\r\n            string sortField = \"");
            
            #line 795 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(".phid asc\";\r\n            DataTable dt;\r\n\r\n\t\t\t//信息权限加where\r\n\t\t\tstring infoRightQue" +
                    "ry = string.Empty;\r\n\t\t\ttry\r\n            {\r\n\t\t\t\tvar infoRight = new InfoRightCont" +
                    "rol(\"");
            
            #line 802 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write(@""", AppInfoBase.UserID);
				infoRightQuery = infoRight.GetSqlWhere();
			}
			catch (Exception e)
            {
                var msg = e;
            }
			finally
			{
				string whereStr = string.Empty;
				string query = string.Empty;
				IDataParameter[] p = DataConverterHelper.BuildQueryWithParam(clientFilter, ref query);

				if (!string.IsNullOrEmpty(query))
				{
					whereStr += "" and ("" + query + "")"";
				}

				if (!string.IsNullOrEmpty(infoRightQuery))
				{
					whereStr += "" and ("" + infoRightQuery + "")"";
				}
				
				if (!string.IsNullOrEmpty(orgFilter))
				{
					whereStr += "" and ("" + orgFilter + "")"";
				}

				if (!string.IsNullOrEmpty(whereStr))
				{
					sql += "" where "" + whereStr.Substring(4).Trim();
				}

				string sqlstr = PaginationAdapter.GetPageDataSql(sql, pageSize, ref PageIndex, ref totalRecord, sortField, p);
				dt = DbHelper.GetDataTable(sqlstr, p);

				");
            
            #line 838 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Common.GetCodeToNameDac(CodeToNameList, sqlList)));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t}\r\n\r\n\t\t\treturn SetCodeNull(dt);\r\n\t\t}\r\n\r\n\t\t/// <summary>\r\n        /// 根据phid获" +
                    "取单条记录;\r\n        /// </summary>\r\n\t\tpublic DataTable GetMasterInfo(string phid)\r\n\t" +
                    "\t{\r\n\t\t\tstring sql = \"select * from ");
            
            #line 849 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(" where phid = {0}\";\r\n\r\n            IDataParameter[] p = new NGDataParameter[1];\r\n" +
                    "            p[0] = new NGDataParameter(\"phid\", phid);\r\n\r\n            DataTable d" +
                    "t = DbHelper.GetDataTable(sql, p);\r\n\r\n\t\t\treturn SetCodeNull(dt);\r\n\t\t}\r\n\r\n\t");
            
            #line 859 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\tpublic DataTable Get");
            
            #line 860 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write("List(string id, int type)\r\n\t\t{\r\n\t\t");
            
            #line 862 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 if (detailInfo.Sql.IndexOf("where", StringComparison.OrdinalIgnoreCase) > 0) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tstring sql = \"");
            
            #line 863 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.Sql));
            
            #line default
            #line hidden
            this.Write(" and m_code={0}\";\r\n\t\t");
            
            #line 864 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write("\t\t\tstring sql = \"");
            
            #line 865 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.Sql));
            
            #line default
            #line hidden
            this.Write(" where m_code={0}\";\r\n\t\t");
            
            #line 866 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\tif (type == 1) { sql = sql.Replace(\"m_code={0}\", \"m_code in ({0})\"); } \r\n\t\t\t" +
                    "DataTable dt = DbHelper.GetDataTable(string.Format(sql, id));\r\n\r\n\t\t\t//grid帮助列分两列" +
                    "并代码转名称\r\n\t\t\t");
            
            #line 872 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Common.GetCodeToNameDac(CodeToNameGrid, detailInfo.Sql, detailInfo.TableName)));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t\t//增加汇总合并列并赋值\r\n            dt.Columns.Add(\"s_groupfield\");\r\n\t\t");
            
            #line 876 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 if (detailInfo.Groupfield.Count > 0) { 
            
            #line default
            #line hidden
            this.Write("            foreach (DataRow dr in dt.Rows)\r\n            {\r\n                dr[\"s" +
                    "_groupfield\"] = ");
            
            #line 879 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Common.GetGroupFieldCol(detailInfo.Groupfield)));
            
            #line default
            #line hidden
            this.Write(";\r\n            }\r\n\t\t");
            
            #line 881 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\treturn SetCodeNull(dt);\r\n\t\t}\r\n\t");
            
            #line 885 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(@"
		/// <summary>
        /// 保存修改记录;
        /// </summary>
		public int Save(DataTable masterdt, IList<DataTable> detailList, ref string id, IList<string> sqlList, string execStr, string phidtemplate)
		{
			string mastercode = string.Empty;
            string detailcode = string.Empty;
            var billId = new Enterprise3.NHORM.Rule.BillNoCommon();
			billId.BillNoReqType = """);
            
            #line 895 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write(@""";
			bool exception = false;  //调主键服务是否发生异常

			//主表保存
            foreach (DataRow dr in masterdt.Rows)
            {
                if (dr.RowState == DataRowState.Deleted) continue;
                if (dr.RowState == DataRowState.Added)
                {
					try
					{                        
						mastercode = billId.GetBillId(""");
            
            #line 906 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\", \"phid\").ToString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (Exception)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//因为url的关系可" +
                    "能调不到主键服务，则调自己写的取主键函数\r\n\t\t\t\t\t\texception = true;\r\n\t\t\t\t\t\tmastercode = CustomCommonCo" +
                    "ntroller.GetBillId(\"");
            
            #line 912 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(@""");
					}

                    dr[""phid""] = mastercode;
                    if (dr.Table.Columns.Contains(""fillpsn"")) { dr[""fillpsn""] = AppInfoBase.UserID; }
                    if (dr.Table.Columns.Contains(""ischeck"")) { dr[""ischeck""] = 0; }
                    if (dr.Table.Columns.Contains(""is_wf"")) { dr[""is_wf""] = 0; }
                    if (dr.Table.Columns.Contains(""asr_flg"") && dr[""asr_flg""] == null) { dr[""asr_flg""] = 0; }
                    id = mastercode;
                    
                    try
                    {              
						bool hasRule = Enterprise3.Common.BizBase.CommonBiz.HasBillNoRule(""");
            
            #line 924 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(EForm));
            
            #line default
            #line hidden
            this.Write(@""");          
                        if (hasRule)
						{
							var billno = billId.GetBillNo(true).BillNoList.Last();
                            dr[""bill_no""] = billno;
						}
                        else
                        {
                            dr[""bill_no""] = CustomCommonController.GetBillNo(""");
            
            #line 932 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\");\r\n                        }\r\n                    }\r\n                    catch " +
                    "(Exception)\r\n                    {\r\n                        dr[\"bill_no\"] = Cust" +
                    "omCommonController.GetBillNo(\"");
            
            #line 937 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(@""");
                    }
                }
                else
                {
                    mastercode = dr[""phid""].ToString();
                    id = mastercode;
                }
            }
            int iRet = DbHelper.Update(masterdt, ""select * from ");
            
            #line 946 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write("\");\r\n\r\n\t\t\t//明细表保存\r\n\t\t\tforeach (DataTable dt in detailList)\r\n\t\t\t{\r\n\t\t\t\tforeach (Da" +
                    "taRow dr in dt.Rows)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (dr.RowState == DataRowState.Added)\r\n\t\t\t\t\t{" +
                    "\r\n\t\t\t\t\t\tif (!exception)\r\n                        {\r\n\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t" +
                    "\t\tdetailcode = billId.GetBillId(dt.TableName, \"phid\").ToString();\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t" +
                    "\t}\r\n\t\t\t\t\t\t\tcatch (Exception)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t//因为url的关系可能调不到主键服务，则调自己写的取主键函数\r" +
                    "\n\t\t\t\t\t\t\t\texception = true;\r\n\t\t\t\t\t\t\t\tdetailcode = CustomCommonController.GetBillI" +
                    "d(dt.TableName);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n                        {\r\n    " +
                    "                        detailcode = (Convert.ToInt64(detailcode) + 1).ToString(" +
                    ");\r\n                        }\r\n\t\t\t\t\t\tdr[\"phid\"] = detailcode;\r\n\t\t\t\t\t\tdr[\"m_code\"" +
                    "] = mastercode;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tiRet += DbHelper.Update(dt, \"select * from \"" +
                    " + dt.TableName);\r\n\t\t\t}\r\n\r\n\t\t\t//单据主键回填到任务分解模板表\r\n            if (!string.IsNullOr" +
                    "Empty(phidtemplate))\r\n            {\r\n                DbHelper.ExecuteNonQuery(st" +
                    "ring.Format(\"update work_templatemain set phidbill={0} where phid={1}\", masterco" +
                    "de, phidtemplate));\r\n            }\r\n\r\n\t\t\t/**************************************" +
                    "******\r\n             * 这一段用于执行存储过程;\r\n             ******************************" +
                    "**************/\r\n            if (!string.IsNullOrEmpty(execStr))\r\n            {\r" +
                    "\n                var execList = execStr.Replace(\'(\', \';\').Replace(\')\', \' \').Trim" +
                    "().Split(\';\');\r\n\t\t\t\tvar sql=\"select name from sys.parameters where object_id = o" +
                    "bject_id(\'\" + execList[0]+ \"\') order by parameter_id\";\r\n\t\t\t\tDataTable dtParaName" +
                    " = DbHelper.GetDataTable(sql);\r\n\r\n                var prosql = string.Format(\"ca" +
                    "ll {0}\",execList[0]);\r\n                var paraList = execList[1].Split(\',\');\r\n " +
                    "               IDataParameter[] para = new NGDataParameter[paraList.Length];// 参" +
                    "数长度;\r\n\r\n                for (int i = 0; i < paraList.Length; i++)\r\n             " +
                    "   {\r\n                    var paraSeparate = paraList[i].Split(\'|\');\r\n          " +
                    "          var dbType = paraSeparate[0].Trim();\r\n                    NGDbType ngd" +
                    "bType = new NGDbType();\r\n                    switch (dbType.ToLower())\r\n        " +
                    "            {\r\n                        case \"string\":\r\n                         " +
                    "   ngdbType = NGDbType.VarChar;\r\n                            break;\r\n           " +
                    "             case \"number\":\r\n                            ngdbType = NGDbType.Num" +
                    "eric;\r\n                            break;\r\n                        case \"int\":\r\n" +
                    "                            ngdbType = NGDbType.Integer;\r\n                      " +
                    "      break;\r\n                        default:\r\n                            ngdb" +
                    "Type = NGDbType.VarChar;\r\n                            break;\r\n                  " +
                    "  }\r\n                    var paraValue = paraSeparate[1].Trim();\r\n              " +
                    "      //para[i] = new NGDataParameter(dtParaName.Rows[i][\"name\"].ToString().Repl" +
                    "ace(\"@\",\"\"), ngdbType, paraValue);\r\n\t\t\t\t\tpara[i] = new NGDataParameter(paraSepar" +
                    "ate[2], ngdbType, paraValue);\r\n                }\r\n\r\n                iRet += DbHe" +
                    "lper.ExecuteNonQuery(prosql, para);\r\n            }\r\n\r\n\t\t\t/**********************" +
                    "**********************\r\n             * 这一段用于执行update SQL语句;\r\n             ******" +
                    "**************************************/\r\n            if (sqlList.Count > 0)\r\n   " +
                    "         {\r\n                foreach(string sql in sqlList)\r\n                {\r\n " +
                    "                   iRet += DbHelper.ExecuteNonQuery(sql);\r\n                }\r\n  " +
                    "          }\t\t\t\r\n\r\n\t\t\treturn iRet;\r\n\t\t}\r\n\r\n\t\t/// <summary>\r\n\t\t/// 删除记录;\r\n\t\t/// <s" +
                    "ummary>\r\n\t\tpublic int Delete(string phid)\r\n        {\r\n\t\t\tstring sql = \"delete fr" +
                    "om ");
            
            #line 1045 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(" where phid = \'\" + phid + \"\'\";\r\n\t\t\tint iRet = DbHelper.ExecuteNonQuery(sql);\r\n\r\n\t" +
                    "\t");
            
            #line 1048 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 foreach (var detailInfo in detailInfoList) { 
            
            #line default
            #line hidden
            this.Write("\t\t\tsql = \"delete from ");
            
            #line 1049 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(detailInfo.TableName));
            
            #line default
            #line hidden
            this.Write(" where m_code = \'\" + phid + \"\'\";\r\n\t\t\tiRet += DbHelper.ExecuteNonQuery(sql);\r\n\t\t");
            
            #line 1051 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\treturn iRet;\r\n        }\r\n\r\n\t\t/// <summary>\r\n\t\t/// 审核或去审核记录;\r\n\t\t/// <summary>" +
                    "\r\n\t\tpublic int Verify(string phid)\r\n        {\r\n\t\t\tint iRet = 0;\r\n\t\t\tstring sql =" +
                    " \"");
            
            #line 1062 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sqlM));
            
            #line default
            #line hidden
            this.Write(" where ");
            
            #line 1062 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(tableNameM));
            
            #line default
            #line hidden
            this.Write(@".phid={0}"";

            IDataParameter[] p = new NGDataParameter[1];
            p[0] = new NGDataParameter(""phid"", phid);

            DataTable dt = DbHelper.GetDataTable(sql, p);

            if (dt != null && dt.Rows.Count > 0)
            {
                string ischeck = dt.Rows[0][""ischeck""].ToString();

                //审核
                if (ischeck == ""0"" || string.IsNullOrEmpty(ischeck))
                {
                    dt.Rows[0][""ischeck""] = ""1"";
                    dt.Rows[0][""check_dt""] = DateTime.Now;
                    dt.Rows[0][""checkpsn""] = EntAppInfoBase.UserID;
                }
                //去审核
                else if (ischeck == ""1"")
                {
                    dt.Rows[0][""ischeck""] = ""0"";
                    dt.Rows[0][""check_dt""] = DBNull.Value;
                    dt.Rows[0][""checkpsn""] = DBNull.Value;
                }

                iRet = DbHelper.Update(dt, """);
            
            #line 1088 "E:\NG3_Business\BusinessBaseClass\SUP\CustomForm\SUP.CustomForm.ServerGen\AppTemplate\AppControllerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(sqlM));
            
            #line default
            #line hidden
            this.Write(@""");
            }

			return iRet;
        }

		/// <summary>
        /// 清空附件会话guid;
        /// <summary>
        public DataTable SetCodeNull(DataTable dt)
        {
            if (dt != null && dt.Rows.Count > 0)
            {
                foreach (DataRow dr in dt.Rows)
                {
                    dr[""code""] = null;
                }
            }
            return dt;
        }

		/// <summary>
        /// 保存任务分解汇总数据
        /// <summary>
		public int MergeSubmit(DataTable dts, string id)
		{
			string sql = ""delete from "" + dts.TableName + "" where m_code = '"" + id + ""'"";
			DbHelper.ExecuteNonQuery(sql);

			var billId = new Enterprise3.NHORM.Rule.BillNoCommon();
			foreach (DataRow dr in dts.Rows)
			{
				if (dr.RowState == DataRowState.Added)
				{
					dr[""phid""] = billId.GetBillId(dts.TableName, ""phid"").ToString();				
				}
			}

			int iRet = DbHelper.Update(dts, ""select * from "" + dts.TableName);

			return iRet;
		}
	}
}
");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class AppControllerTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
