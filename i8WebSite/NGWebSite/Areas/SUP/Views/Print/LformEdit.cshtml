@{
    //ViewBag.Title = "打印模板编辑";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section script
{
    <script src="@Url.Content("~/NG3/js/RWcommon.js")" type="text/javascript"></script>  
    <script type="text/javascript">
    
        var otype = '@ViewBag.OType';
        var printId = '@ViewBag.PrintID';
        var typefile = '@ViewBag.TypeFile';
        var templatename = '@ViewBag.TemplateName';
        

        var templatetype = '@ViewBag.TemplateType';
        if (templatename){
            templatename = decodeURIComponent(templatename);
        }
        //templatename = "C:\\i6s\\增值税预缴申请[PUB_VatTaxPreBill001].xml";

        Ext.onReady(function () {
            var t1 = "";
          

            //#region 1、初始化按钮工具条
            var ngToolbar = Ext.create('Ext.ng.Toolbar', {
                region: 'north',
                showArrowBtn: false,
                //                rightName: 'LFormList',
                ngbuttons: ['save', '->',  'close']
            });
            //#endregion

            //#region 2、初始化界面
            var mtypecombo = Ext.create('Ext.ng.ComboBox', {
                valueField: "def_int2",
                displayField: 'name',
                queryMode: 'local',
                fieldLabel: '模板类型',
                name: 'def_int2',
                id: 'def_int2',
                data: [{
                    "def_int2": "0",
                    "name": "用户"
                }, {
                    "def_int2": "1",
                    "name": "系统"
                }, {
                    "def_int2": "2",
                    "name": "自定义"
                }, {
                    "def_int2": "3",
                    "name": "系统_PDF"
                }
                ]
            });
            //预览编辑
            var mpreviewcombo = Ext.create('Ext.ng.ComboBox', {
                valueField: "code",
                displayField: 'name',
                queryMode: 'local',
                fieldLabel: '打印编辑',
                name: 'previeweditflg',
                id: 'previeweditflg',
                data: [{
                    "code": "0",
                    "name": "否"
                }, {
                    "code": "1",
                    "name": "是"
                }
                ]
            });
            //直接预览
            var mdoprintcombo = Ext.create('Ext.ng.ComboBox', {
                valueField: "code",
                displayField: 'name',
                queryMode: 'local',
                fieldLabel: '直接预览',
                name: 'def_int1',
                id: 'def_int1',
                data: [{
                    "code": "0",
                    "name": "否"
                }, {
                    "code": "1",
                    "name": "是"
                }
                ]
            });
            //是否共享
            var mpubcombo = Ext.create('Ext.ng.ComboBox', {
                valueField: "code",
                displayField: 'name',
                queryMode: 'local',
                fieldLabel: '共享',
                name: 'ispub',
                id: 'ispub',
                data: [{
                    "code": "0",
                    "name": "私有"
                }, {
                    "code": "1",
                    "name": "公有"
                }
                ]
            });

            var ngform = Ext.create('Ext.ng.TableLayoutForm', {
                region: 'north',
                frame: true,
                split: true,
                buskey: 'printid', //对应的业务表主键
                columnsPerRow: 4,
                minWidth: 400,
                bodyPadding: "10 0 0 20px",
                autoScroll: true,
                //fieldDefaults: {
                //    labelWidth: 100,
                //    anchor: '100%',
                //    margin: '0 10 5 0',
                //    msgTarget: 'side'
                //},
                fields: [{
                    xtype: 'ngText',
                    fieldLabel: '单据类型',
                    name: 'typefile',
                    id: 'typefile',
                    mustInput: true
                }, {
                    xtype: 'ngText',
                    fieldLabel: '模块号',
                    name: 'moduleno',
                    id: 'moduleno',
                    mustInput: true
                }, {
                    xtype: 'ngText',
                    fieldLabel: '模版名称',
                    name: 'billname',
                    id: 'billname',
                    mustInput: true,
                    colspan: 2
                }, mtypecombo, mpreviewcombo, mpubcombo,
                mdoprintcombo, {
                    xtype: 'ngText',
                    id: 'remarks',
                    fieldLabel: '备注',
                    name: 'remarks',
                    colspan: 3
                },{
                    xtype: 'ngText',
                    fieldLabel: '输出比例',
                    name: 'outscale',
                    id: 'outscale',
                    regex: /^[1-9]+\d*$/,
                    regexText:'请输入整数',
                    mustInput: false,
                    hidden: false,
                    colspan: 1
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '编号',
                    name: 'printid'
                },
                {
                    xtype: 'hiddenfield',
                    fieldLabel: '文件',
                    name: 'filename'
                }
                ]
            });

            var viewport = Ext.create('Ext.container.Viewport', {
                id: "viewPort",
                layout: 'border',
                rennderto: Ext.getBody(),
                items: [ngToolbar, ngform, { id: 'bodypanel', region: 'center', xtype: 'panel', layout: 'fit',html: '<div id="SUPObject1" style="width: 100%; height: 100%;"></div>' }]
            });

            var SUPObject1 = Ext.getDom('SUPObject1');
            SUPObject1.Template = t1;
            SUPObject1.ObjConfig = { id: 'SUPObject1_AF', type: 'LuxForm', param: 'Border=0;', ver: SupCanVersion };
            if (otype == 'view') {
                SUPObject1.ObjConfig.param = 'WorkMode=DesignTime;Main = 1074, 105, 100, 189, 20, 32, 106, 107; TabScrollBar = show; CollapseToolbar = true; print = 11, 216, 18; Form = 110, 162, 164';
            }
            else {
                SUPObject1.ObjConfig.param = 'WorkMode=DesignTime;Border=single,3D;PagesTabPercent=50;Rebar=Main, Print, Form,,Font, Property,,Text;Main= 103,1074, 105, 100, 189, 0, 20, 32, 106, 107;'
            }
            //Ext.getCmp('bodypanel').body.dom.appendChild(SUPObject1);
            AFEX = $AF.create(SUPObject1);
            //#endregion
            function GetDateString(d1) {
                var y = d1.getFullYear().toString();
                var m = d1.getMonth() < 10 ? '0' + d1.getMonth() : d1.getMonth().toString();
                var d = d1.getDate() ? '0' + d1.getDate() : d1.getDate().toString();
                var h = d1.getHours() ? '0' + d1.getHours() : d1.getHours().toString();
                var min = d1.getMinutes() ? '0' + d1.getMinutes() : d1.getMinutes().toString();
                var s = d1.getSeconds() ? '0' + d1.getSeconds() : d1.getSeconds().toString();
                return y + m + d + h + min + s;
            }
            //#region 3、回填数据到控件
            var dataStore = new Object();

            AllReady = function () {               
                AFEX.SetSource(C_ROOT + 'ESB/DataServiceCenter/DataCenter');
                if (otype == "add" && printId == "") {                 
                    AFEX.Build(templatename);
                    if(templatetype=="")templatetype="0";
                    var formobj = ngform.getForm();
                    formobj.setValues({ typefile: typefile, def_int2: templatetype, moduleno: 'PUB', def_int1: "1", ispub: "0", previeweditflg: "0", filename: templatename, outscale:"100" });
                    dataStore = {
                        def_int1: "1",
                        ispub: "0",
                        previeweditflg: "0"
                    }
                    //Ext.getCmp("filename").value = templatename;
                    Ext.getCmp("typefile").setReadOnly(true);
                    Ext.getCmp("moduleno").setReadOnly(true);
                    Ext.getCmp("def_int2").setReadOnly(true);
                    Ext.getCmp("ispub").setReadOnly(true);
                    if (templatetype == "3") {
                        Ext.getCmp("outscale").setVisible(true);
                    }
                    else
                        Ext.getCmp("outscale").setVisible(false);
                }
                else {
                    var xml ="";
                    if (templatename != '') {
                        AFEX.Build(templatename);
                        xml = AFEX.GetFileXML("");
                    }
                    Ext.Ajax.request({
                        params: { printid: printId,xml:xml },
                        url:C_ROOT+'/SUP/Print/GetModuleByID',
                        success: function (response) {
                            var resp = Ext.JSON.decode(response.responseText);
                            if (resp.status === "ok") {
                                Ext.getCmp("typefile").setReadOnly(true);
                                Ext.getCmp("moduleno").setReadOnly(true);
                                Ext.getCmp("def_int2").setReadOnly(true);
                                var formobj = ngform.getForm();
                                dataStore = InitData(resp.data);
                                       
                                if (resp.data.def_int2 == "3"){
                                    Ext.getCmp("outscale").setVisible(true);
                                } else
                                    Ext.getCmp("outscale").setVisible(false);
                                //Ext.getCmp("filename").value = resp.xmlName.replace(/\//g, "\\");
                                if (otype == "view" || resp.data.def_int2 == "3") {                                  
                                    //Ext.getCmp("filename").button.onDisable();
                                    Ext.getCmp("billname").setReadOnly(true);                                  
                                    if (otype == "view") {                                       
                                        Ext.getCmp("remarks").setReadOnly(true);
                                    }
                                }                               
                                AFEX.Build($path(resp.xmlName) + '?v=' + GetDateString(new Date()));

                                var m1 = AFEX.GetMemo('', 'OutScale');
                                if (m1 != "") {
                                    dataStore.outscale = m1;
                                }                               
                                formobj.setValues(dataStore);
                            } else {
                                $ExtMessageBoxAlert("提示", "取数失败", null, null, AFEX);                               
                            }
                        }
                    });
                }
                if (otype == "view") {
                    ngToolbar.get('save').hide();
                }

            }
            function InitData(data) {
                if (otype == "add") {
                    data.def_int2 = "0";
                    data.billname = "";
                    data.remarks = "";
                    data.def_int1 = "1";
                    data.ispub = "0";
                    data.previeweditflg = "0";
                    data.outscale = "100";
                }
                else {
                    data.def_int2 = data.def_int2.toString();
                    data.def_int1 =  data.def_int1||"1";
                    data.ispub =  data.ispub||"1";
                    data.previeweditflg = data.previeweditflg || "0";
                    data.outscale = "100";
                }
                return data;
            }
            //#endregion

            //#region 4、初始化按钮事件
            var isSaving = false;
            ngToolbar.get("save").on("click", function () {
                 ngToolbar.disable();
                if (otype == "view") {
                    ngToolbar.enable();                   
                    return false;
                }
                else {
                    var f = ngform.getForm();
                    ngform.focus();
                    if (f.isValid()) {
                        //var fname = Ext.getCmp("filename").value.split("\\");
                        //fname = fname[fname.length - 1];  
                        //if (fname.indexOf(".xml") < 0 && fname.indexOf(".xls") < 0 && fname.indexOf(".xlsx") < 0) {
                        //    ngToolbar.enable();
                        //    return false;
                        //}
                        //if (fname.indexOf(".xls") < 0 || fname.indexOf(".xlsx") < 0) {
                        //    fname = fname.replace(/.xls/g, '.xml').replace(/.xlsx/g, '.xml');
                        //}
                        ngToolbar.enable();
                        if (isSaving) {return; }
                        isSaving = true;
                        var values = f.getValues();
                        AFEX.SetMemo('', 'OutScale', values["outscale"]);                      
                        dataStore["xmlDoc"] = AFEX.GetFileXML("");
                        dataStore["oType"] = otype;
                        dataStore["remarks"] = values["remarks"];
                        dataStore["billname"] = values["billname"];
                        dataStore["def_int2"] = values["def_int2"];
                        dataStore["typefile"] = values["typefile"];
                        if (dataStore["def_int2"] == "3") {
                            dataStore["filename"] = dataStore["billname"]+"["+  dataStore["typefile"]+"].xml";
                        }
                        else {
                            dataStore["filename"] = values["filename"]; //fname;
                        }
                        dataStore["moduleno"] = values["moduleno"];                       
                        dataStore["printid"] = printId;
                        dataStore["def_int1"] = values["def_int1"];
                        dataStore["ispub"] = values["ispub"];
                        dataStore["previeweditflg"] = values["previeweditflg"];
                       
                        NG3Ajaxrequest({
                            params: dataStore,
                            url: C_ROOT + '/SUP/Print/UpdateLformTemplate',
                            success: function (response) {
                                var resp = Ext.JSON.decode(response.responseText);
                                if (resp.status === "ok") {
                                    //AFEX.MessageBoxFloat("保存成功", "center=true");
                                    $FireWebRefreshEvent("LFormList");                                
                                    printId = resp.printId;
                                    if (otype == "add") {
                                        otype = "edit";
                                    }
                                    $ExtMessageBoxAlert("提示", resp.msg, null, null, AFEX);
                                    //AFEX.func("MessageBoxFloat", resp.msg + "\r\n title=Success; icon=Success; center=true");                                    
                                } else {
                                    $ExtMessageBoxAlert('出错', resp.msg, null, null, AFEX);
                                }
                              
                                isSaving = false;
                            }
                        });
                    }                    
                    ngToolbar.enable();
                }
            });
            //#endregion
        });


    </script>
}



