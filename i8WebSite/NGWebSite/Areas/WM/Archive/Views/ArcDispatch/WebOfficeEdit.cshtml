@using NG3.Web.Controller.Extensions
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>金格科技-iWebOffice2015在线管理中间件示例程序</title>
    <meta http-equiv="X-UA-Compatible" content="IE=9" />
    <script type="text/javascript">
        var $PageName = "",
            C_ROOT = '@ViewBag.Root',
            C_PATH = '@ViewBag.Path',
            FromType = '@ViewBag.FromType',//meetsummary,dispatch,receipt,myarchive
            $gridStateInfo = '',
            $queryPanelInfo = '',
            $toolbarRightInfo = '';
        var bizpropertiesJson = '@ViewBag.BizPropertiesJson';
        var bizPropertiesInfo = bizpropertiesJson == "" ? {} : Ext.JSON.decode(Ext.htmlDecode(bizpropertiesJson));
        var bookmarkjson = '@ViewBag.BookMarkJson';
        var bookmarkInfo = Ext.htmlDecode(bookmarkjson);
        var templateid = '@ViewBag.Templateid';
        var paper = "@ViewBag.mPaper";//0正文1稿纸
    </script>
    <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/KingGrid/jquery-1.4.2.min.js")"></script>
    <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/KingGrid/WebOffice.js")" charset="utf-8"></script>
    <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/KingGrid/kinggrid.js")"></script>
    <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/help/WorkFlowHelp.js")"></script>
    <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/WM/WMHelp.js")"></script>
    <script type="text/javascript">

        function IsArc() {
            if (FromType == 'dispatch' || FromType == "receipt" || FromType == 'myarchive')
                return true;
            return false;
        }

        King_AcceptReverison = '@ViewBag.AcceptRevisions' == 'Y' ? true : false;

    </script>
    <script type="text/javascript">
        function Load() {
            try {
                WebOffice.LogId = "@ViewBag.LogId";
                WebOffice.LogName = "@ViewBag.LogName";
                WebOffice.OCode = "@ViewBag.OCode";
                WebOffice.UCode = "@ViewBag.UCode";
                WebOffice.Product = "@ViewBag.Product";
                WebOffice.UserType = "@ViewBag.UserType";
                WebOffice.OrgID = "@ViewBag.OrgID";
                WebOffice.UserID = "@ViewBag.UserID";

                WebOffice.WebUrl = "@ViewBag.mServerUrl"; //WebUrl:系统服务器路径，与服务器文件交互操作，如保存、打开文档，重要文件
                WebOffice.RecordID = "@ViewBag.mRecordID"; //RecordID:本文档记录编号
                var fileName = Ext.isEmpty('@ViewBag.lblTitle') ? "@ViewBag.mRecordID" : "@ViewBag.lblTitle";
                WebOffice.FileName = fileName + "@ViewBag.mFileType";
                WebOffice.FileType = "@ViewBag.mFileType"; //FileType:文档类型  .doc  .xls
                WebOffice.UserName = "@ViewBag.mUserName"; //UserName:操作用户名，痕迹保留需要
                WebOffice.OpType = "@ViewBag.OpType";
                WebOffice.DataFrom = "@ViewBag.DataFrom";
                WebOffice.IsCopy = "@ViewBag.IsCopy";
                WebOffice.ProductPath = "@ViewBag.ProductPath";
                WebOffice.BillId = "@ViewBag.BillId";
                WebOffice.TableName = "@ViewBag.TableName";
                webOffice.FromType = "@ViewBag.FromType";
                var showOpenLocalFile = '@ViewBag.ShowOpenLocalFile' == 'Y' && WebOffice.OpType.toLowerCase() != 'view';
                if (!IsArc() || showOpenLocalFile) {
                    WebOffice.AppendMenu("1", "打开本地文件(&L)"); //多次给文件菜单添加
                }
                if (!IsArc() || '@ViewBag.CanSaveLocalFile' == 'Y') {
                    WebOffice.AppendMenu("2", "保存本地文件(&S)");
                }
                if (showOpenLocalFile || '@ViewBag.CanSaveLocalFile' == 'Y') {
                    WebOffice.AppendMenu("3", "-");
                }
                //WebOffice.AppendMenu("4", "打印预览(&C)");
                //WebOffice.AppendMenu("5", "退出打印预览(&E)");
                if (FromType != 'myarchive' || '@ViewBag.ArcCanPrintFile' == 'Y') {
                    WebOffice.AppendMenu("4", "打印设置");
                }

                if (!Ext.isEmpty(templateid)) {
                    WebOffice.IsCopy = "1";
                    WebOffice.RecordID = templateid;
                }


                WebOffice.ShowToolBars(true); //显示工具栏
                WebOffice.ShowMenuBar(true); //显示菜单栏
                WebOffice.Skin('white'); //设置皮肤
                WebOffice.HookEnabled();
                WebOffice.SetCaption();
                if (WebOffice.WebOpen()) { //打开该文档    交互OfficeServer  调出文档OPTION="LOADFILE"
                    WebOffice.setEditType("@ViewBag.mEditType"); //EditType:编辑类型  方式一   WebOpen之后
                    WebOffice.SaveEnabled(false);
                    WebOffice.SetUser('@ViewBag.mUserName');
                    WebOffice.VBASetUserName('@ViewBag.mUserName');
                    WebOffice.AddToolbar(); //打开文档时显示手写签批工具栏
                    WebOffice.ShowCustomToolbar(false); //隐藏手写签批工具栏
                    initMenu(); //初始化金格控件菜单
                    if (WebOffice.OpType == 'Edit' || '@ViewBag.wfOtype' == 'taskhandle') {
                        VBATrackRevisions(true);//编辑模式下记录修改痕迹
                    }
                    if (browser == "chrome") {
                        $RegKG(WebOffice.obj, true); //注册金格到框架
                    }
                    if ('@ViewBag.TempCno' != '') {
                        WebSetBookmarks('d_no', '@ViewBag.TempCno');
                        WebSetBookmarks('r_number', '@ViewBag.TempCno');
                    }
                }
            } catch (e) {
                alert(e.description);
            }
        }

        function initMenu() {
            var mark = '1', signal = '1';
            if (WebOffice.OpType != 'View' && '@ViewBag.wfOtype' != 'taskhandle') {
                if (WebOffice.OpType.toLowerCase() == "edit") {
                    AddCustomMenu("1", "1", "1", "0");
                }
                else {
                    AddCustomMenu("1", "1", "1", "1");
                }
            }
            if ('@ViewBag.wfOtype' == 'taskhandle') {
                Ext.Array.each(bizPropertiesInfo, function (rcd) {
                    switch (rcd.control_id) {
                        //case 'Mark':
                        //    mark = rcd.value == 5 ? '0' : '1';
                        //    break;
                        case 'Signal':
                            signal = rcd.value == 5 ? '0' : '1';
                            break;
                        case 'TemplateFinalization':
                            King_MenuConfig.arctemplate = rcd.value == 5 ? '0' : '1';
                            break;
                        case 'RedTemplateFinal':
                            King_MenuConfig.redtemplate = rcd.value == 5 ? '0' : '1';
                            break;
                        default:
                            break;
                    }
                });
                AddCustomMenu(mark, signal, "1", "0");
            }
            if (WebOffice.OpType == 'View' && '@ViewBag.wfOtype' != 'taskhandle') {
                var showReversion = "@ViewBag.ShowReversion";
                if (Ext.isEmpty(showReversion) || showReversion.toLowerCase() == 'y') {
                    AddCustomMenu("1", "0", "0", "0");
                }
                else {
                    AddCustomMenu("0", "0", "0", "0");
                }
            }
        }

        function WebSaveDocToLocal() {

            var isEdit = true;

            if (IsArc()) {

                var canModifyLocalFile = '@ViewBag.canModifyLocalFile';
                if ('@ViewBag.wfOtype' == 'taskhandle') {
                    if (canModifyLocalFile != 'Y') {
                        isEdit = false;
                    }
                }
                else {
                    if ('@ViewBag.OpType'.toLowerCase() == "view") {
                        if (canModifyLocalFile != 'Y') {
                            isEdit = false;
                        }
                    }
                }
            }

            if (FromType == 'meetsummary') {
                var meetsummaryeditlocal = '@ViewBag.MeetSummarySaveLocalEditType';
                if (meetsummaryeditlocal != 'Y') {
                    isEdit = false;
                }
            }

            if (FromType == 'inform') {
                var informeditlocal = '@ViewBag.InformSaveLocalEditType';
                if (informeditlocal != 'Y') {
                    isEdit = false;
                }
            }

            WebSaveLocal(isEdit);
        }

        function FillBookMark() {

            //预算说明书取数
            Ext.Ajax.request({
                params: { 'FDeclarationUnit': $appinfo.ocode },
                url: C_ROOT + 'GYS/YS/BudgetMst/GetKingGridData',
                async: false, //同步请求
                success: function (response) {
                    bookmarkInfo  = response.responseText;

                }
            });


            if (bookmarkInfo == "{}" || Ext.isEmpty(bookmarkInfo))
                return;

            var bookmarkSub = bookmarkInfo.substring(1, bookmarkInfo.length - 1);

            var strArray = bookmarkSub.split('","');

            for (var i = 0; i < strArray.length; i++) {
                if (i == 0) {
                    strArray[i] = strArray[i] + '"';
                } else {
                    strArray[i] = '"' + strArray[i] + '"';
                }
                var strTemp = strArray[i].split(':');
                strTemp[0] = strTemp[0].substring(1, strTemp[0].length - 1);
                strTemp[1] = strTemp[1].substring(1, strTemp[1].length - 1);
                strTemp[1] = strTemp[1].replace(/##%!!%##/g, ',');
                //if (strTemp[1] != '') {
                    WebSetBookmarks(strTemp[0], strTemp[1]);
               // }
            }
        }


        function ChangContent() {
            window.document.location ="WebOfficeEdit?OpType=Add&FromType=dispatch";
        }

    </script>
    <script language="javascript" for="WebOffice2015" event="OnReady()">
        WebOffice.setObj(document.getElementById('WebOffice2015')); //给2015对象赋值
        Load(); //避免页面加载完，控件还没有加载情况
    </script>
    <script language="javascript" for="WebOffice2015" event="OnRightClickedWhenAnnotate()">
        WebOffice.ShowToolBars(true); //停止签批时显示工具栏
        WebOffice.ShowMenuBar(true); //停止签批时显示菜单栏
        WebOffice.ShowCustomToolbar(false); //隐藏手写签批工具栏
    </script>
    <script language="JavaScript" for=WebOffice2015 event="OnFullSizeBefore(bVal)">
        if (bVal == true) {
            var getVersion = WebOffice.getEditVersion();
            if (getVersion == "WINWORD.EXE" || getVersion == "wps.exe") {
                //WebOffice.ShowCustomToolbar(true);//显示手写签批工具栏
            }
        }
    </script>
    <script language="JavaScript" for=WebOffice2015 event="OnFullSizeAfter(bVal)">
        if (bVal == false) {
            WebOffice.ShowCustomToolbar(false); //隐藏控件的手写签批工具栏
        }
    </script>

    <script language="javascript" for=WebOffice2015 event="OnRecvStart(nTotleBytes)">
        nSendTotleBytes = nTotleBytes;
        nSendedSumBytes = 0;
    </script>
    <script language="javascript" for=WebOffice2015 event="OnRecving(nRecvedBytes)">
        nSendedSumBytes += nRecvedBytes;
    </script>
    <script language="javascript" for=WebOffice2015 event="OnRecvEnd(bSucess)">


    </script>
    <script language="javascript" for=WebOffice2015 event="OnSendStart(nTotleBytes)">
        nSendTotleBytes = nTotleBytes;
        nSendedSumBytes = 0;
    </script>
    <script language="javascript" for=WebOffice2015 event="OnSending(nSendedBytes)">
        nSendedSumBytes += nSendedBytes;
    </script>
    <script language="javascript" for=WebOffice2015 event="OnSendEnd(bSucess)">
        if (bSucess) {
            if (WebOffice.sendMode == "LoadImage") {
                var httpclient = WebOffice.WebObject.Http;
                WebOffice.hiddenSaveLocal(httpclient, WebOffice, false, false, WebOffice.ImageName);
                WebOffice.InsertImageByBookMark();
                WebOffice.ImageName = null;
                WebOffice.BookMark = null;
                //StatusMsg("插入图片成功");
            }
            //StatusMsg("插入图片失败");
        }
    </script>
    <script language="JavaScript" for=WebOffice2015 event="OnCommand(ID, Caption, bCancel)">
        WebOffice.SaveEnabled(true);
        switch (ID) {
            case 1:
                WebOffice.WebOpenLocal();
                break; //打开本地文件
            case 2:
                WebSaveDocToLocal();
                break; //另存本地文件
            case 4:
                // WebOffice.PrintPreview();
                WebOffice.WebOpenPrint();
                break;
            //case 5:
            //    WebOffice.PrintPreviewExit();
            //    WebOffice.ShowField();
            //    break; //启用
            case 17:
                WebOffice.SaveEnabled(true);
                break; //启用保存
            case 18:
                WebOffice.SaveEnabled(false);
                break; //关闭保存
            case 19:
                WebOffice.PrintEnabled(true);
                break; //启用打印
            case 20:
                WebOffice.PrintEnabled(false);
                break; //关闭打印
            case 30:
                VBAShowRevisions(true);
                break; //显示痕迹
            case 31:
                VBAShowRevisions(false);
                break; //隐藏痕迹
            case 32:
                VBAGetRevisons();//获取痕迹
                break;
            case 301:
                WebOffice.HandWriting("255", "4");
                break; //手写签批
            case 302:
                WebOffice.StopHandWriting();
                break; //停止手写签批
            case 303:
                WebOffice.TextWriting();
                break; //文字签名
            case 304:
                WebOffice.ShapeWriting();
                break; //图形签批
            case 305:
                WebOffice.RemoveLastWriting();
                break; //取消上一次签批
            case 306:
                WebOffice.ShowWritingUser(false, WebOffice.UserName);
                break; //显示签批用户
            case 40:
                ShowSignature(true);
                break; //手写签名
            case 41:
                ShowSignature(true);
                break; //文字签名
            case 42:
                ShowSignature(true);
                break; //图形签名
            case 43:
                WebOpenSignature();
                break; //电子印章
            case 50:
                vbaTemplateHelp('1'); //公文模板
                break;
            case 51:
                vbaTemplateHelp();
                break;
            case 52:
                vbaTemplateHelp('2'); //套红模板
                break;
            case 53:
                WebInsertVBA();
                break;
            case 54:
                vbaTemplateHelp();
                break;
            case 55://会议纪要模板
                meetSummaryTemplateHelp();
                break;
            case 56://正文模板
                informTemplateHelp();
                break;
            case 60:
                ChangeWordToExcel();
                break;
            case 61:
                ChangeWordToExcel();
                break;
            case 62:
                ChangContent();
            default:
                ;
        }
        //WebOffice.SaveEnabled(false);
    </script>

    <!--以下是多浏览器的事件方法 -->
    <script>

        //停止签批时显示工具栏和菜单栏
        function OnRightClickedWhenAnnotate() {
            WebOffice.ShowToolBars(true);
            WebOffice.ShowMenuBar(true);
        }

        //全屏显示控件的手写签批工具栏
        function OnFullSizeBefore(bVal) {
            if (bVal == true) {
                var getVersion = WebOffice.getEditVersion();
                if (getVersion == "WINWORD.EXE" || getVersion == "wps.exe") {
                    //WebOffice.ShowCustomToolbar(true); //显示手写签批工具栏
                }
            }
        }

        //退出全屏隐藏控件的手写签批工具栏
        function OnFullSizeAfter(bVal) {
            if (bVal == false) {
                WebOffice.ShowCustomToolbar(false);
            }
        }

        //上传下载回调用事件
        function OnSendStart(nTotleBytes) {
            nSendTotleBytes = nTotleBytes;
            nSendedSumBytes = 0;
        }

        function OnSending(nSendedBytes) {
            nSendedSumBytes += nSendedBytes;
        }

        //异步上传
        function OnSendEnd() {
            if (WebOffice.sendMode == "LoadImage") {
                var httpclient = WebOffice.WebObject.Http;
                WebOffice.hiddenSaveLocal(httpclient, WebOffice, false, false, WebOffice.ImageName);
                WebOffice.InsertImageByBookMark();
                WebOffice.ImageName = null;
                WebOffice.BookMark = null;
                StatusMsg("插入图片成功");
                return;
            }
            StatusMsg("插入图片失败");
        }

        function OnRecvStart(nTotleBytes) {
            nSendTotleBytes = nTotleBytes;
            nSendedSumBytes = 0;
        }

        function OnRecving(nRecvedBytes) {
            nSendedSumBytes += nRecvedBytes;
        }

        //异步下载
        function OnRecvEnd() {
        }

        function OnCommand(ID, Caption, bCancel) {
            WebOffice.SaveEnabled(true);
            switch (ID) {
                case 1:
                    WebOffice.WebOpenLocal();
                    break; //打开本地文件
                case 2:
                    WebSaveLocal();
                    break; //另存本地文件
                case 4:
                    // WebOffice.PrintPreview();
                    WebOffice.WebOpenPrint();
                    break;
                //case 5:
                //    WebOffice.PrintPreviewExit();
                //    WebOffice.ShowField();
                //    break; //启用
                case 17:
                    WebOffice.SaveEnabled(true);
                    break; //启用保存
                case 18:
                    WebOffice.SaveEnabled(false);
                    break; //关闭保存
                case 19:
                    WebOffice.PrintEnabled(true);
                    break; //启用打印
                case 20:
                    WebOffice.PrintEnabled(false);
                    break; //关闭打印
                case 30:
                    WebOffice.VBAShowRevisions(true);
                    break; //显示痕迹
                case 31:
                    WebOffice.VBAShowRevisions(false);
                    break; //隐藏痕迹
                case 301:
                    WebOffice.HandWriting("255", "4");
                    break; //手写签批
                case 302:
                    WebOffice.StopHandWriting();
                    break; //停止手写签批
                case 303:
                    WebOffice.TextWriting();
                    break; //文字签名
                case 304:
                    WebOffice.ShapeWriting();
                    break; //图形签批
                case 305:
                    WebOffice.RemoveLastWriting();
                    break; //取消上一次签批
                case 306:
                    WebOffice.ShowWritingUser(false, WebOffice.UserName);
                    break; //显示签批用户
                case 40:
                    ShowSignature(true);
                    break; //手写签名
                case 41:
                    ShowSignature(true);
                    break; //文字签名
                case 42:
                    ShowSignature(true);
                    break; //图形签名
                case 43:
                    WebOpenSignature();
                    break; //电子印章
                case 50:
                    vbaTemplateHelp('1'); //公文模板
                    break;
                case 51:
                    vbaTemplateHelp();
                    break;
                case 52:
                    vbaTemplateHelp('2'); //套红模板
                    break;
                case 53:
                    WebInsertVBA();
                    break;
                case 54:
                    vbaTemplateHelp();
                    break;
                case 55://会议纪要模板
                    meetSummaryTemplateHelp();
                    break;
                case 56://正文模板
                    informTemplateHelp();
                    break;
                case 60:
                    ChangeWordToExcel();
                    break;
                case 61:
                    ChangeWordToExcel();
                    break;
                default:
                    ;
            }
        }

    </script>
    <!--End 为2015主要方法 -->
</head>
<body onresize="init()" style="overflow-y: hidden; overflow-x: hidden" onload="fun()" onunload="WebOffice.WebClose()">
    @*<div id="kinggrid" style="height: 30px;display:none">
            <span id="activex_install" style="color: #FF0000"></span>
            <a href="@ViewBag.Cab">[请手动下载安装]</a>
        </div>*@
    <div id="webOffice">
        <script type="text/javascript" src="@Url.Script("~/NG3Resource/js/KingGrid/iWebOffice2015.js")" charset="utf-8"></script>
    </div>
</body>
</html>
<script type="text/javascript">
    //var checkActiveX = CheckActiveX();

    function fun() {
        self.moveTo(0, 0);
        self.resizeTo(window.parent.innerWidth, window.parent.innerHeight);
        init();
    }

    function init() {
        if (document.documentElement.clientHeight > 0) {
            document.getElementById('WebOffice2015').width = window.parent.innerWidth;
            document.getElementById('WebOffice2015').height = document.documentElement.clientHeight - 36 + "px";
        }
    }

    //获取id的高度
    function getHeight(id) {
        return document.getElementById(id).offsetHeight;
    }
</script>
<script type="text/javascript">

    var winSignature, templateHelp, modelType, meetSummaryHelp, informHelp;
    Ext.useShims = true;//帮助显示在最顶层

    function vbaTemplateHelp(typeFlag) {

        if (templateHelp || (!Ext.isEmpty(modelType) && modelType != typeFlag)) {
            templateHelp.close();
        }
        templateHelp = Ext.create('Ext.ng.OfficeTemplateHelp', {
            modal: true,
            outFilter: { type: typeFlag },
            listeners: {
                beforeclose: function (_this, obj) {
                    if (browser == "chrome") {
                        WebOffice.obj.HidePlugin(1);
                    }
                },
                helpselected: function (obj) {
                    var contentBookMark;
                    if (FromType == 'dispatch') {
                        contentBookMark = 'd_content';
                    }
                    else if (FromType == 'receipt') {
                        contentBookMark = 'r_content';
                    }
                    WebUseTemplateWithBookMark(contentBookMark, obj.phid_jingge, ".doc");
                    FillBookMark();
                }
            }
        });
        modelType = typeFlag;
        if (browser == "chrome") {
            WebOffice.obj.HidePlugin(0);
        }
        templateHelp.show();
    }


    function meetSummaryTemplateHelp() {
        if (meetSummaryHelp) {
            meetSummaryHelp.close();
        }
        meetSummaryHelp = Ext.create('Ext.ng.MeetSummaryModelHelp', {
            modal: true,
            listeners: {
                beforeclose: function (_this, obj) {
                    if (browser == "chrome") {
                        WebOffice.obj.HidePlugin(1);
                    }
                },
                helpselected: function (obj) {
                    if (!IsExistsMarks('Content')) {
                        WebOffice.WebAddBookMarks('Content', '');
                    }
                    WebUseTemplate(obj.cobject, ".doc");
                }
            }
        });
        if (browser == "chrome") {
            WebOffice.obj.HidePlugin(0);
        }
        meetSummaryHelp.show();
    }

    function informTemplateHelp() {
        if (informHelp) {
            informHelp.close();
        }
        informHelp = Ext.create('Ext.ng.InformModelHelp', {
            modal: true,
            listeners: {
                beforeclose: function (_this, obj) {
                    if (browser == "chrome") {
                        WebOffice.obj.HidePlugin(1);
                    }
                },
                helpselected: function (obj) {
                    WebUseTemplate(obj.cobject, ".doc");
                }
            }
        });
        if (browser == "chrome") {
            WebOffice.obj.HidePlugin(0);
        }
        informHelp.show();
    }


    function WebOpenSignature() {
        if (winSignature) {
            winSignature.close();
        }
        winSignature = Ext.create('Ext.ng.SignatureWin', {
            modal: true,
            draggable: false,
            callback: function (code, url) {
                debugger
                WebOffice.FilePath = '@ViewBag.HostUrl' + url.substring(0, url.lastIndexOf('/') + 1);
                WebOffice.ImageName = url.substring(url.lastIndexOf('/') + 1);
                if (!IsExistsMarks('Manager')) {
                    WebOffice.WebAddBookMarks('Manager', '');
                }
                varInsertImageByBookMark();
                WebOffice.WebDelBookMarks('Manager');
            }
        });
        winSignature.show();
    }
</script>

