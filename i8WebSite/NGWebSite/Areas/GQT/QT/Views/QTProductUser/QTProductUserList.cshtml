@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Script
{ 
    <script src=@Url.Script("~/NG3Resource/IndividualInfo/GQT/QT/QTProductUserEdit.js") type="text/javascript" charset="utf-8"></script>
    <script type="text/javascript">
        //多语言，在Controller调用base.InitialMultiLanguage(busType)方法获取
        var langinfo = Ext.htmlDecode("@ViewBag.NG3Lang");
        var Lang = (!langinfo || Ext.isEmpty(langinfo)) ? {} : JSON.parse(langinfo);

        //从viewBag获取自定义信息，在Controller调用base.GetIndividualUI(busType)方法获取
        var defCustomInfo = Ext.htmlDecode('@ViewBag.IndividualInfo');
        if (Ext.isEmpty(defCustomInfo)) {
            //数据库没有，取js模板的individualConfigInfo
            defCustomInfo = individualConfigInfo;
        }

        //自定义信息与多语言合并
        var individualInfo = $DealIndividualInfo(defCustomInfo, Lang);
    </script>
    <script type="text/javascript">
	    var pageName = '@ViewBag.Title';
        var store;//Grid数据源
        var storeProduct;

        Ext.onReady(function () {

            //工具栏
            var ngToolbar = Ext.create('Ext.ng.Toolbar', {
                region: 'north',
                //rightName: '', //权限名称
                ngbuttons: [
                    'add', 'edit', 'delete', 'view', 
                    '->', 'close'
                ]
            });
			
			var ngToolbar2 = Ext.create('Ext.ng.Toolbar', {
                region: 'north',
                //rightName: '', //权限名称
                ngbuttons: [
                    'add', 'edit', 'delete', 'view', { id: "TB", text: "同步账号", width: this.itemWidth },'import','export'
                ]
            });

			var fields = [
  {
    "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "ProductPhid",
    "type": "string",
    "mapping": "ProductPhid"
  },
  {
    "name": "ProductBZ",
    "type": "string",
    "mapping": "ProductBZ"
  },
  {
    "name": "ProductUserCode",
    "type": "string",
    "mapping": "ProductUserCode"
  },
  {
    "name": "ProductUserName",
    "type": "string",
    "mapping": "ProductUserName"
  },
  {
    "name": "ProductUserPwd",
    "type": "string",
    "mapping": "ProductUserPwd"
  },
  {
    "name": "BZ",
    "type": "string",
    "mapping": "BZ"
  },
  {
    "name": "NgRecordVer",
    "type": "int",
    "mapping": "NgRecordVer"
  }
];
			var modelFileds = $MergIndividualModelCol(fields, individualInfo, 'QTProductUser');//合并model

			//定义模型
			Ext.define('model', {
				extend: 'Ext.data.Model',
				fields: modelFileds
			});          

            store = Ext.create('Ext.ng.JsonStore', {
                model: 'model',
                pageSize: 25,
				autoLoad: false,
                url: C_ROOT + 'GQT/QT/QTProductUser/GetQTProductUserList'
            });

            var pagingbar = Ext.create('Ext.ng.PagingBar', {
                store: store
            });

			var initConfig = {
				region: 'center',             
				store: store,
				columnLines: true,
				stateful: true,
				stateId: '9dc2ebce-86d4-4ebe-878b-9caecc0613ad',   
				buskey: 'PhId', //对应的业务表主键属性         
				layout: {
					type: 'hbox',
					align: 'stretch'
				},            
				viewConfig: {
					forceFit: true,
					scrollOffset: 0
				},
				bbar: [pagingbar],
				height:document.documentElement.clientHeight-28
			};
 
			var gridConfig = Ext.apply(initConfig,individualInfo.grid['QTProductUser']);
			var grid = Ext.create('Ext.ng.GridPanel',gridConfig);
			
			storeProduct = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				fields: [

  {
    "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "ProductBZ",
    "type": "string",
    "mapping": "ProductBZ"
  },
  {
    "name": "ProductName",
    "type": "string",
    "mapping": "ProductName"
  },
  {
    "name": "ProductUrl",
    "type": "string",
    "mapping": "ProductUrl"
  },
  {
    "name": "BZ",
    "type": "string",
    "mapping": "BZ"
  },
  {
    "name": "NgRecordVer",
    "type": "int",
    "mapping": "NgRecordVer"
  }

				],
                url: C_ROOT + 'GQT/QT/QTProduct/GetQTProductList',
				autoLoad:true
			});
			var pagingbar2 = Ext.create('Ext.ng.PagingBar', {
                store: storeProduct
            });
			gridProduct = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height:document.documentElement.clientHeight-28,
				store: storeProduct,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '主键',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'PhId',
					hidden:true
				}, {
					header: '产品名称',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'ProductName'
				}, {
					header: '产品URL',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'ProductUrl'
				}],
				listeners: {
					'itemclick': function (item, record, it, index, e, eOpts) {
						
						var params={'ProductBZ':record.get('ProductBZ')};
						Ext.apply(store.proxy.extraParams,params);
						store.load(function(){
							
						})
						
					}
				},
				viewConfig: {
					style: {
						overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				},*/
				bbar: [pagingbar2]
			});

            //布局
            var viewport = Ext.create('Ext.container.Viewport', {
                id: "viewPort",
                layout: 'border',
				items: [
				{
				region:'west',
				xtype:"panel",
				items:[ngToolbar2,gridProduct],
				width:600
				},
				{
				region:'center',
				xtype:"panel",
				items:[ngToolbar,grid]
				
				}
				]
            });

            //新增
            ngToolbar.get('add').on('click', function () {
                $OpenTab(pageName + '-新增', C_ROOT + 'GQT/QT/QTProductUser/QTProductUserEdit?otype=add');
            });

            //修改
            ngToolbar.get('edit').on('click', function () {
                var data = grid.getSelectionModel().getSelection();
                
                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-修改', C_ROOT + 'GQT/QT/QTProductUser/QTProductUserEdit?otype=edit&id=' + id);
                }
            });

			//删除
            ngToolbar.get('delete').on('click', function () {
                var data = grid.getSelectionModel().getSelection();

                if (data.length > 0) {
                    recoderefresh(data);
                
                    Ext.MessageBox.confirm('提示', '是否删除此记录？', callBack);

                    function callBack(callBackid) {
                        if (callBackid.toString() == "no" || callBackid.toString() == "cancel") {
                            return;
                        } else {
                            Ext.Ajax.request({
                                params: { 'id': data[0].get('PhId') },
                                url: C_ROOT + 'GQT/QT/QTProductUser/Delete',
                                success: function (response) {
                                    var resp = Ext.JSON.decode(response.responseText);
                                    if (resp.Status === "success") {

                                        Ext.Array.each(data, function (record) {
                                            store.remove(record); //前端删除
                                        });

                                        NGMsg.Info('删除成功！');
                                    } else {
                                        NGMsg.Info('删除失败！');
                                    }
                                }
                            });
                        }
                    }
                }
            });

            //查看
            ngToolbar.get('view').on('click', function () {
                var data = grid.getSelectionModel().getSelection();

                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-查看', C_ROOT + 'GQT/QT/QTProductUser/QTProductUserEdit?otype=view&id=' + id);
                }
            });

            //打印
            /*ngToolbar.get('print').on('click', function () {
				$Print("PrintTest1", grid, "列表");
            });*/
			
			//新增产品
            ngToolbar2.get('add').on('click', function () {
                $OpenTab(pageName + '-新增', C_ROOT + 'GQT/QT/QTProduct/QTProductEdit?otype=add');
            });

            //修改产品
            ngToolbar2.get('edit').on('click', function () {
                var data = gridProduct.getSelectionModel().getSelection();
                
                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-修改', C_ROOT + 'GQT/QT/QTProduct/QTProductEdit?otype=edit&id=' + id);
                }
            });

			//删除产品
            ngToolbar2.get('delete').on('click', function () {
                var data = gridProduct.getSelectionModel().getSelection();

                if (data.length > 0) {
                    recoderefresh2(data);
                
                    Ext.MessageBox.confirm('提示', '是否删除此记录？', callBack);

                    function callBack(callBackid) {
                        if (callBackid.toString() == "no" || callBackid.toString() == "cancel") {
                            return;
                        } else {
                            Ext.Ajax.request({
                                params: { 'id': data[0].get('PhId') },
                                url: C_ROOT + 'GQT/QT/QTProduct/Delete',
                                success: function (response) {
                                    var resp = Ext.JSON.decode(response.responseText);
                                    if (resp.Status === "success") {

                                        Ext.Array.each(data, function (record) {
                                            store.remove(record); //前端删除
                                        });

                                        NGMsg.Info('删除成功！');
                                    } else {
                                        NGMsg.Info('删除失败！');
                                    }
                                }
                            });
                        }
                    }
                }
            });

            //查看产品
            ngToolbar2.get('view').on('click', function () {
                var data = gridProduct.getSelectionModel().getSelection();

                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-查看', C_ROOT + 'GQT/QT/QTProduct/QTProductEdit?otype=view&id=' + id);
                }
            });
			
			//同步
			ngToolbar2.get('TB').on('click', function () {
				var data = gridProduct.getSelectionModel().getSelection();
				if (data.length > 0) {
					Ext.Ajax.request({
						params: { 'ProductBZ': data[0].data.ProductBZ},
						url: C_ROOT + 'GQT/QT/QTProductUserDygx/JudgeByProduct',
						async: false,
						success: function (response) {
							var resp = Ext.JSON.decode(response.responseText);
							if (resp.Status === "success") { //未设置过
								Ext.Ajax.request({
									params: { 'ProductBZ': data[0].data.ProductBZ},
									url: C_ROOT + 'GQT/QT/QTProductUserDygx/SaveByProduct',
									async: false,
									success: function (response) {
										var resp = Ext.JSON.decode(response.responseText);
										if (resp.Status === "success") { 
											Ext.MessageBox.alert('提示', '同步成功！');
										}else{
											Ext.MessageBox.alert('提示', resp.Msg);
										}
									}
								});
							}else{
								Ext.MessageBox.confirm('提示', resp.Msg+',是否删除', callBack);
								function callBack(callBackid) {
									if (callBackid.toString() == "cancel") {
										return;
									} else if (callBackid.toString() == "yes"){
										Ext.Ajax.request({
											params: { 'ProductBZ': data[0].data.ProductBZ},
											url: C_ROOT + 'GQT/QT/QTProductUserDygx/SaveByProductIfDelete',
											async: false,
											success: function (response) {
												var resp = Ext.JSON.decode(response.responseText);
												if (resp.Status === "success") { 
													Ext.MessageBox.alert('提示', '同步成功！');
												}else{
													Ext.MessageBox.alert('提示', resp.Msg);
												}
											}
										});
									} else if (callBackid.toString() == "no"){
										Ext.Ajax.request({
											params: { 'ProductBZ': data[0].data.ProductBZ},
											url: C_ROOT + 'GQT/QT/QTProductUserDygx/SaveByProductNoDelete',
											async: false,
											success: function (response) {
												var resp = Ext.JSON.decode(response.responseText);
												if (resp.Status === "success") { 
													Ext.MessageBox.alert('提示', '同步成功！');
												}else{
													Ext.MessageBox.alert('提示', resp.Msg);
												}
											}
										});
									}
								}
							}
						}
					});
				}
			});
			
			//导入
			ngToolbar2.get('import').on('click', function () {
				var data = gridProduct.getSelectionModel().getSelection();
				if (data.length > 0) {
					Ext.MessageBox.confirm('提示', '是否清空当前产品标志已有账号？', callBack);
					function callBack(callBackid) {
						if(callBackid.toString() == "cancel"){
							return;
						}
						if (callBackid.toString() == "no") {
							var panel = Ext.create('Ext.form.Panel', {
								title: '导入',
								width: 450,
								bodyPadding: 10,
								frame: true,
								closable: true,
								renderTo: Ext.getBody(),
								items: [{
									xtype: 'filefield',
									name: 'file',
									fieldLabel: 'Excel文件',
									labelWidth: 100,
									allowBland: false,
									anchor: '100%',
									buttonText: '选择文件'
								}],
								buttons: [{
									text: '导入',
									handler: function () {
										var form = this.up('form').getForm();
										if (form.isValid()) {
											form.submit({
												url: C_ROOT + 'GQT/QT/QTProductUser/ImportData?clear=0&ProductBZ='+data[0].data.ProductBZ+'&ProductPhid='+data[0].data.PhId,
												//params: { 'ProductBZ': data[0].data.ProductBZ,'ProductPhid': data[0].data.ProductPhid},
												waitMsg: '正在导入',
												success: function (fp, o) {
													Ext.Msg.alert('Success', o.result.message);
													panel.close();
												},
												failure: function (fp, o) {
													Ext.Msg.alert('Failed', o.result.message);
													panel.close();
												}
											});
										}

									}
								}]
							});
							panel.el.center();
						} else {
							var panel = Ext.create('Ext.form.Panel', {
								title: '导入',
								width: 450,
								bodyPadding: 10,
								frame: true,
								closable: true,
								renderTo: Ext.getBody(),
								items: [{
									xtype: 'filefield',
									name: 'file',
									fieldLabel: 'Excel文件',
									labelWidth: 100,
									allowBland: false,
									anchor: '100%',
									buttonText: '选择文件'
								}],
								buttons: [{
									text: '导入',
									handler: function () {
										var form = this.up('form').getForm();
										if (form.isValid()) {
											form.submit({
												url: C_ROOT + 'GQT/QT/QTProductUser/ImportData?clear=1&ProductBZ='+data[0].data.ProductBZ+'&ProductPhid='+data[0].data.PhId,
												waitMsg: '正在导入',
												success: function (fp, o) {
													Ext.Msg.alert('Success', o.result.message);
													panel.close();
												},
												failure: function (fp, o) {
													Ext.Msg.alert('Failed', o.result.message);
													panel.close();
												}
											});
										}

									}
								}]
							});
							panel.el.center();
						}
					}
				}
			});
			
			//导出
            ngToolbar2.get("export").on('click', function () {
				var data = gridProduct.getSelectionModel().getSelection();
				if (data.length > 0) {
					Ext.MessageBox.confirm('提示', '是否导出数据？', callBack);
					function callBack(callBackid) {
						if (callBackid.toString() == "no" || callBackid.toString() == "cancel") {
							return;
						} else {

							window.location.href = C_ROOT + 'GQT/QT/QTProductUser/ExportData?ProductBZ='+data[0].data.ProductBZ;

						}
					}
				}
            });
			

			//刷新列表中想修改或删除的行数据
            var recoderefresh = function (data) {
                var jsonStr = "{PhId:" + data[0].get('PhId') + ",ProductBZ:"+data[0].get('ProductBZ') +"}";
                Ext.Ajax.request({
                    params: { 'queryfilter': jsonStr, 'limit': 1 },
					url: C_ROOT + 'GQT/QT/QTProductUser/GetQTProductUserList',
                    async: false, //同步请求
                    success: function (response) {
                        var resp = Ext.JSON.decode(response.responseText);
                        if (resp.Record.length === 1) {
                            Ext.apply(data[0].data, resp.Record[0]);
                            grid.getView().refresh(true);
                        }
                    }
                });
            };
			
			//刷新列表中想修改或删除的行数据
            var recoderefresh2 = function (data) {
                var jsonStr = "{PhId:" + data[0].get('PhId') + "}";
                Ext.Ajax.request({
                    params: { 'queryfilter': jsonStr, 'limit': 1 },
					url: C_ROOT + 'GQT/QT/QTProduct/GetQTProductList',
                    async: false, //同步请求
                    success: function (response) {
                        var resp = Ext.JSON.decode(response.responseText);
                        if (resp.Record.length === 1) {
                            Ext.apply(data[0].data, resp.Record[0]);
                            grid.getView().refresh(true);
                        }
                    }
                });
            };

        });

		function NG3Refresh() {
            store.load();
			storeProduct.load();
        }

    </script>
}


