@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Script
{ 
	<script src=@Url.Script("~/NG3Resource/IndividualInfo/GQT/QT/WorkFlowHelp_ZCLB.js") type="text/javascript" charset="utf-8"></script>
    <script src=@Url.Script("~/NG3Resource/js/help/EmpHelp.js") type="text/javascript" charset="utf-8"></script>
    <script src=@Url.Script("~/NG3Resource/js/help/OrgHelp.js") type="text/javascript" charset="utf-8"></script>
    <script src="@Url.Script("~/Resource/attach/js/loadattach.js")" type="text/javascript" charset="utf-8"></script>

    <script type="text/javascript">

        Ext.onReady(function () {

            //工具栏
            var ngToolbar = Ext.create('Ext.ng.Toolbar', {
                region: 'north',
                //rightName: '', //权限名称
                ngbuttons: [
                    'add', 'delete', 
                    '->',  'close'
                ]
            });

			var storeZCLB = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				pageSize: 200,
				fields: [{

      "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "Dm",
    "type": "string",
    "mapping": "Dm"
  },
  {
    "name": "Mc",
    "type": "string",
    "mapping": "Mc"
  },
  {
    "name": "Bz",
    "type": "string",
    "mapping": "Bz"
	

				}],
				url: C_ROOT + 'GQT/QT/ExpenseCategory/GetExpenseCategoryListDYGXdtl',
				autoLoad:false
			});
			gridZCLB = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height:document.documentElement.clientHeight-28,
				store: storeZCLB,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '对应关系主键',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'PhId',
					hidden:true
				}, {
					header: '代码',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Dm',
					//hidden:true
				}, {
					header: '名称',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Mc'
				}, {
					header: '备注',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Bz'
				
				}],
				listeners: {
					'itemdblclick': function (item, record, it, index, e, eOpts) {
						
					}
				},
				viewConfig: {
					style: {
						overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				}*/
			});
			
			
			

			var storeOrg = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				//pageSize: 14,
				fields: [{

    "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "OCode",
    "type": "string",
    "mapping": "OCode"
  },
  {
    "name": "OName",
    "type": "string",
    "mapping": "OName"

				}],
				//url: C_ROOT + 'DMC/Org/Organization/GetOrganizationList',
                url: C_ROOT + 'GQT/QT/CorrespondenceSettings/GetOrg',
				autoLoad:true
			});
			gridOrg = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height:document.documentElement.clientHeight-28,
				store: storeOrg,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '主键',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'PhId',
					hidden:true
				}, {
					header: '组织代码',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'OCode'
				}, {
					header: '组织名称',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'OName'
					//renderer: function (value, parm, record) {
					//    if (record.data.ctype == "1") {
					//        return me.getEmpName(value, record.data.assigntype);
					//    }
					//    return value;
					//}
				}],
				listeners: {
					'itemclick': function (item, record, it, index, e, eOpts) {
						
						var params={'Dwdm':record.get('PhId')};
						Ext.apply(storeZCLB.proxy.extraParams,params);
						storeZCLB.load(function(){
							/*for(var i=0;i<storeDYGX2.getCount();i++){
								var ZCLBDYDM=storeDYGX2.getAt(i).get('Dydm');
								//var zclbindex=storeZCLB.find('Dm',ZCLBDYDM);
								var zclbindex=findStoreIndex(storeZCLB,'Dm',ZCLBDYDM);
								if(zclbindex>=0)
								{
									var ZCLBMC=storeZCLB.getAt(zclbindex).get('Mc');
									var ZCLBBZ=storeZCLB.getAt(zclbindex).get('Bz');
									storeDYGX2.getAt(i).set('Mc',ZCLBMC);
									storeDYGX2.getAt(i).set('Bz',ZCLBBZ);
								}
							};*/
						})
						
					}
				},
				viewConfig: {
					style: {
						overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				}*/
			});			

            //布局
            var viewport = Ext.create('Ext.container.Viewport', {
                id: "viewPort",
                layout: 'border',
				items: [ngToolbar,
				{
				region:'west',
				xtype:"panel",
				items:[gridOrg],
				width:400
				},
				{
				region:'center',
				xtype:"panel",
				items:[gridZCLB],
				
				}]
            });

            //新增
            ngToolbar.get('add').on('click', function () {
                //$OpenTab(pageName + '-新增', C_ROOT + 'GQT/QT/CorrespondenceSettings2/CorrespondenceSettings2Edit?otype=add');
				var data = gridOrg.getSelectionModel().getSelection();
				if(data.length > 0){
					var win = Ext.create('Ext.ng.WFDynamicNodeUserWin', {
					
					});
					win.show();
				}
            });

            //修改
            /*ngToolbar.get('edit').on('click', function () {
                var data = grid.getSelectionModel().getSelection();
                
                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-修改', C_ROOT + 'GQT/QT/CorrespondenceSettings2/CorrespondenceSettings2Edit?otype=edit&id=' + id);
                }
            });*/

			//删除
            ngToolbar.get('delete').on('click', function () {
                var data = gridZCLB.getSelectionModel().getSelection();

                if (data.length > 0) {
                    //recoderefresh(data);
                
                    Ext.MessageBox.confirm('提示', '是否删除此记录？', callBack);

                    function callBack(callBackid) {
                        if (callBackid.toString() == "no" || callBackid.toString() == "cancel") {
                            return;
                        } else {
                            Ext.Ajax.request({
                                params: { 'id': data[0].get('PhId') },
                                url: C_ROOT + 'GQT/QT/CorrespondenceSettings2/Delete',
                                success: function (response) {
                                    var resp = Ext.JSON.decode(response.responseText);
                                    if (resp.Status === "success") {

                                        Ext.Array.each(data, function (record) {
                                            storeZCLB.remove(record); //前端删除
                                        });

                                        Ext.MessageBox.alert('提示', '删除成功！');
										
										var data = gridOrg.getSelectionModel().getSelection();
										var dataPhid=data[0].data.PhId;
										var params={'Dwdm':dataPhid};
										Ext.apply(storeZCLB.proxy.extraParams,params);
										storeZCLB.load(function(){
											
										})
                                    } else {
                                        //NGMsg.Info('删除失败！');
										Ext.MessageBox.alert('提示', '删除失败！');
                                    }
                                }
                            });
                        }
                    }
                }
            });

            //查看
            /*ngToolbar.get('view').on('click', function () {
                var data = grid.getSelectionModel().getSelection();

                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-查看', C_ROOT + 'GQT/QT/CorrespondenceSettings2/CorrespondenceSettings2Edit?otype=view&id=' + id);
                }
            });*/

            //打印
            /*ngToolbar.get('print').on('click', function () {
				$Print("PrintTest1", grid, "列表");
            });*/

			//刷新列表中想修改或删除的行数据
            /*var recoderefresh = function (data) {
                var jsonStr = "{PhId:" + data[0].get('PhId') + "}";
                Ext.Ajax.request({
                    params: { 'queryfilter': jsonStr, 'limit': 1 },
					url: C_ROOT + 'GQT/QT/CorrespondenceSettings2/GetCorrespondenceSettings2List',
                    async: false, //同步请求
                    success: function (response) {
                        var resp = Ext.JSON.decode(response.responseText);
                        if (resp.Record.length === 1) {
                            Ext.apply(data[0].data, resp.Record[0]);
                            grid.getView().refresh(true);
                        }
                    }
                });
            };*/

        });
		function findStoreIndex(store,name,value){
			for(var i=0;i<store.getCount();i++){
				if(store.getAt(i).get(name)==value){
					return i;
				}
			}
			return -1;
		}


    </script>
}


