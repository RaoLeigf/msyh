@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Script
{ 


    <script type="text/javascript">
		var IsChange;
		var storeDYGX2;

        Ext.onReady(function () {

            //工具栏
            var ngToolbar = Ext.create('Ext.ng.Toolbar', {
                region: 'north',
                //rightName: '', //权限名称
                ngbuttons: [
                     'save',
                    '->',  'close'
                ]
            });

			var storeZCLB = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				//pageSize: 14,
				fields: [{

  
    "name": "Dm",
    "type": "string",
    "mapping": "Dm"
  },
  {
    "name": "Mc",
    "type": "string",
    "mapping": "Mc"
  },
  {
    "name": "Bz",
    "type": "string",
    "mapping": "Bz"
	

				}],
				url: C_ROOT + 'GQT/QT/ExpenseCategory/GetExpenseCategoryList',
				autoLoad:false
			});
			storeZCLB.load();
			gridZCLB = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height: 390,
				store: storeZCLB,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '代码',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Dm',
					//hidden:true
				}, {
					header: '名称',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Mc'
				}, {
					header: '备注',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Bz'
				
				}],
				listeners: {
					'itemdblclick': function (item, record, it, index, e, eOpts) {
						
					}
				},
				viewConfig: {
					style: {
						overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				}*/
			});
			
			storeDYGX2 = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				//pageSize: 14,
				fields: [{

  
    "name": "Dwdm",
    "type": "string",
    "mapping": "Dwdm"
  },
  {
    "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "Dydm",
    "type": "string",
    "mapping": "Dydm"
  },
  {
    "name": "Dylx",
    "type": "string",
    "mapping": "Dylx"
	},
  {
    "name": "DefStr1",
    "type": "string",
    "mapping": "DefStr1"
  },
  {
    "name": "Mc",
    "type": "string",
    "mapping": "Mc"
  },
  {
    "name": "Bz",
    "type": "string",
    "mapping": "Bz"
  },
  {
    "name": "DefStr2",
    "type": "string",
    "mapping": "DefStr2"
  },
  {
    "name": "DefStr3",
    "type": "string",
    "mapping": "DefStr3"
				}],
				url: C_ROOT + 'GQT/QT/CorrespondenceSettings2/GetCorrespondenceSettings2ListbyRelation',
				autoLoad:false,
				sorters: [
					 {
						   property: "Dydm",
						   direction: "ASC"//升序  降序为DESC
					  }
				]
			});
			gridDYGX2 = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height:document.documentElement.clientHeight-38,
				store: storeDYGX2,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '单位代码',
					//flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Dwdm',
					hidden:true
				}, {
					header: '主键',
					//flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'PhId',
					hidden:true
				}, {
					header: '代码',
					//flex: 1,
                    width: 150,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Dydm',
					//hidden:true
				}, {
					header: '对应类型',
					//flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Dylx',
					hidden:true
				}, {
					header: '组织代码',
					//flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'DefStr1',
					hidden:true
				}, {
					header: '项目类型',
					//flex: 1,
                    width:300,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Mc'
				}, {
					header: '备注',
					//flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'Bz',
					hidden:true
				}, {
					header: '项目预算明细格式',
					//flex: 2,
                    width:500,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'DefStr2',
					renderer:function(value, parm, record){
						return '<input type="radio" value="0" name="'+record.get('PhId')+'" onchange="changeradio('+record.get('PhId')+',0)">显示金额</input>'+
						'<input type="radio" value="1" name="'+record.get('PhId')+'" onchange="changeradio('+record.get('PhId')+',1)">显示天/人/单价</input>'+
						'<input type="radio" value="2" name="'+record.get('PhId')+'" onchange="changeradio('+record.get('PhId')+',2)">显示数量/单价</input>';
						
					}
				}, {
					header: '单价（天/人/单价）（元）',
					//flex: 1,
                    align:"right",
					width:250,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'DefStr3'
				
				}],
				listeners: {
					
					'itemdblclick': function (item, record, it, index, e, eOpts) {
						
						OutJG(item, record, it, index, e, eOpts);
						
					}
				
				},
				viewConfig: {
					style: {
						//overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				}*/
			});
			
			var storeOrg = Ext.create('Ext.ng.JsonStore', {
				autoLoad: false,
				//pageSize: 14,
				fields: [{

    "name": "PhId",
    "type": "string",
    "mapping": "PhId"
  },
  {
    "name": "OCode",
    "type": "string",
    "mapping": "OCode"
  },
  {
    "name": "OName",
    "type": "string",
    "mapping": "OName"

				}],
				//url: C_ROOT + 'DMC/Org/Organization/GetOrganizationList',
                url: C_ROOT + 'GQT/QT/CorrespondenceSettings/GetOrg',
				autoLoad:true
			});
			gridOrg = Ext.create('Ext.ng.GridPanel', {
				columnWidth: .5,
				height:document.documentElement.clientHeight-28,
				store: storeOrg,
				autoScroll: true,
				columnLines: true,
				border: false,
				//selModel: { mode: "SIMPLE" },
				columns: [{
					header: '主键',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'PhId',
					hidden:true
				}, {
					header: '组织代码',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'OCode'
				}, {
					header: '组织名称',
					flex: 1,
					sortable: false,
					menuDisabled: true,
					draggable: false,
					dataIndex: 'OName'
					//renderer: function (value, parm, record) {
					//    if (record.data.ctype == "1") {
					//        return me.getEmpName(value, record.data.assigntype);
					//    }
					//    return value;
					//}
				}],
				listeners: {
					'itemclick': function (item, record, it, index, e, eOpts) {
						if(IsChange==true)
						{
							Ext.MessageBox.confirm('提示', '是否保存此修改？', callBack);
							function callBack(callBackid){
								if (callBackid.toString() == "no" || callBackid.toString() == "cancel") {
									var params={'Dylx':'08','Dwdm':record.get('PhId'),'DefStr1':record.get('OCode')};
									Ext.apply(storeDYGX2.proxy.extraParams,params);
									storeDYGX2.load(function(){
										for(var i=0;i<storeDYGX2.getCount();i++){
											var ZCLBDYDM=storeDYGX2.getAt(i).get('Dydm');
											//var zclbindex=storeZCLB.find('Dm',ZCLBDYDM);
											var zclbindex=findStoreIndex(storeZCLB,'Dm',ZCLBDYDM);
											if(zclbindex>=0)
											{
												var ZCLBMC=storeZCLB.getAt(zclbindex).get('Mc');
												var ZCLBBZ=storeZCLB.getAt(zclbindex).get('Bz');
												storeDYGX2.getAt(i).set('Mc',ZCLBMC);
												storeDYGX2.getAt(i).set('Bz',ZCLBBZ);
											}
											
											var GS=storeDYGX2.getAt(i).get('DefStr2');
											var PhId=storeDYGX2.getAt(i).get('PhId');
											var radios=document.getElementsByName(PhId);
											if(GS=='0'){
												radios[0].checked=true;
											}
											if(GS=='1'){
												radios[1].checked=true;
											}
											if(GS=='2'){
												radios[2].checked=true;
											}
										};
									})
								}
								else{
									ngToolbar.get('save').fireEvent('click');//触发保存
									var params={'Dylx':'08','Dwdm':record.get('PhId'),'DefStr1':record.get('OCode')};
									Ext.apply(storeDYGX2.proxy.extraParams,params);
									storeDYGX2.load(function(){
										for(var i=0;i<storeDYGX2.getCount();i++){
											var ZCLBDYDM=storeDYGX2.getAt(i).get('Dydm');
											//var zclbindex=storeZCLB.find('Dm',ZCLBDYDM);
											var zclbindex=findStoreIndex(storeZCLB,'Dm',ZCLBDYDM);
											if(zclbindex>=0)
											{
												var ZCLBMC=storeZCLB.getAt(zclbindex).get('Mc');
												var ZCLBBZ=storeZCLB.getAt(zclbindex).get('Bz');
												storeDYGX2.getAt(i).set('Mc',ZCLBMC);
												storeDYGX2.getAt(i).set('Bz',ZCLBBZ);
											}
											
											var GS=storeDYGX2.getAt(i).get('DefStr2');
											var PhId=storeDYGX2.getAt(i).get('PhId');
											var radios=document.getElementsByName(PhId);
											if(GS=='0'){
												radios[0].checked=true;
											}
											if(GS=='1'){
												radios[1].checked=true;
											}
											if(GS=='2'){
												radios[2].checked=true;
											}
										};
									})
								}
							}
						}else{
							var params={'Dylx':'08','Dwdm':record.get('PhId'),'DefStr1':record.get('OCode')};
							Ext.apply(storeDYGX2.proxy.extraParams,params);
							storeDYGX2.load(function(){
								for(var i=0;i<storeDYGX2.getCount();i++){
									var ZCLBDYDM=storeDYGX2.getAt(i).get('Dydm');
									//var zclbindex=storeZCLB.find('Dm',ZCLBDYDM);
									var zclbindex=findStoreIndex(storeZCLB,'Dm',ZCLBDYDM);
									if(zclbindex>=0)
									{
										var ZCLBMC=storeZCLB.getAt(zclbindex).get('Mc');
										var ZCLBBZ=storeZCLB.getAt(zclbindex).get('Bz');
										storeDYGX2.getAt(i).set('Mc',ZCLBMC);
										storeDYGX2.getAt(i).set('Bz',ZCLBBZ);
									}
									
									var GS=storeDYGX2.getAt(i).get('DefStr2');
									var PhId=storeDYGX2.getAt(i).get('PhId');
									var radios=document.getElementsByName(PhId);
									if(GS=='0'){
										radios[0].checked=true;
									}
									if(GS=='1'){
										radios[1].checked=true;
									}
									if(GS=='2'){
										radios[2].checked=true;
									}
								};
							})
						}
						IsChange=false;
					}
				},
				viewConfig: {
					style: {
						overflowX: 'hidden !important'
					}
				},
				/*bodyStyle: {
					top: '24px !important'
				}*/
			});			

            //布局
            var viewport = Ext.create('Ext.container.Viewport', {
                id: "viewPort",
                layout: 'border',
				items: [ngToolbar,
				{
				region:'west',
				xtype:"panel",
				items:[gridOrg],
				width:400
				},
				{
				region:'center',
				xtype:"panel",
				items:[gridDYGX2],
				
				}]
            });



			//保存
            ngToolbar.get('save').on('click', function () {
                var update_store = gridDYGX2.getStore();
                /**数据格式
                 * '|':元素分割符
                 * ':':属性分割符
                 * ...|PhId:Orgcode:FThreshold|...
                 * */
                var data = "";
                for (var i = 0; i < update_store.getCount(); i++) {
					var PhId=update_store.getAt(i).get('PhId');
					//var DefStr2=update_store.getAt(i).get('DefStr2');
					var DefStr2;
					for(var j=0;j<3;j++){
						if(document.getElementsByName(PhId)[j].checked)
						{
							DefStr2=document.getElementsByName(PhId)[j].value;
							break;
						}
					}
					var DefStr3=update_store.getAt(i).get('DefStr3');
					/*if(DefStr3=="")
					{
						DefStr3=null;
					}*/
                    if(DefStr2=="1"&&DefStr3==""){
						Ext.MessageBox.alert('提示', "格式为显示天/人/单价时单价不允许为空！");
						return;
					}
                    data += PhId + ":" + DefStr2 + ":" + DefStr3 + "|";
					
                }
				//alert(data);
                Ext.Ajax.request({
                    params: { 'data': data},
                    url: C_ROOT + 'GQT/QT/CorrespondenceSettings2/UpdateYSDtlGS',
                    async: false, //同步请求
                    success: function (response) {
						var resp = Ext.JSON.decode(response.responseText);
						if (resp.Status === "success"){
							Ext.MessageBox.alert('设置成功', "设置成功！");
							IsChange=false;
						}else{
							Ext.MessageBox.alert('设置失败', "请重新设置！");
						}
					}
                });
				
            });
            //查看
            /*ngToolbar.get('view').on('click', function () {
                var data = grid.getSelectionModel().getSelection();

                if (data.length > 0) {
                    var id = data[0].get('PhId');
                    $OpenTab(pageName + '-查看', C_ROOT + 'GQT/QT/CorrespondenceSettings2/CorrespondenceSettings2Edit?otype=view&id=' + id);
                }
            });*/

            //打印
            /*ngToolbar.get('print').on('click', function () {
				$Print("PrintTest1", grid, "列表");
            });*/

			//刷新列表中想修改或删除的行数据
            /*var recoderefresh = function (data) {
                var jsonStr = "{PhId:" + data[0].get('PhId') + "}";
                Ext.Ajax.request({
                    params: { 'queryfilter': jsonStr, 'limit': 1 },
					url: C_ROOT + 'GQT/QT/CorrespondenceSettings2/GetCorrespondenceSettings2List',
                    async: false, //同步请求
                    success: function (response) {
                        var resp = Ext.JSON.decode(response.responseText);
                        if (resp.Record.length === 1) {
                            Ext.apply(data[0].data, resp.Record[0]);
                            grid.getView().refresh(true);
                        }
                    }
                });
            };*/

        });
		function findStoreIndex(store,name,value){
			for(var i=0;i<store.getCount();i++){
				if(store.getAt(i).get(name)==value){
					return i;
				}
			}
			return -1;
		}

		function changeradio(a,radioIndex){
			for(var i=0;i<storeDYGX2.getCount();i++){
				var phid=storeDYGX2.getAt(i).get('PhId');
				if(a==phid)
				{
					var DefStr2=storeDYGX2.getAt(i).get('DefStr2');
					var radios=document.getElementsByName(a);
					storeDYGX2.getAt(i).set('DefStr2',radioIndex);
					radios[radioIndex].checked=true;
					/*if(DefStr2=='0')
					{
						storeDYGX2.getAt(i).set('DefStr2',1);
						radios[1].checked=true;
					}
					else
					{
						storeDYGX2.getAt(i).set('DefStr2',0);
						radios[0].checked=true;
					}*/
				}
			}

			IsChange=true;
		}
		
		function OutJG(item, record, it, index, e, eOpts)
		{
			var iu=document.getElementsByName(record.get('PhId'));
			Ext.MessageBox.prompt('设置新单价', '请输入新单价', function (btn, text) {
							if (btn == "ok") {
								if (isNaN(text)) {
									Ext.MessageBox.alert('严重错误', '不合法的数字格式');
								}else{
									record.set("DefStr3",text);
									IsChange=true;
									
									//设置格式的选中
									/*var DefStr2;
									var PhId=record.get('PhId');
									//alert(PhId);
									var iu=document.getElementsByName(PhId);
									for(var j=0;j<2;j++){
										//alert(document.getElementsByName(PhId)[j].checked);
										if(document.getElementsByName(PhId)[j].checked==true)
										{
											DefStr2=document.getElementsByName(PhId)[j].value;
											break;
										}
									}
									alert(DefStr2);*/
									var DefStr2=record.get('DefStr2');
									var PhId=record.get('PhId');
									var radios=document.getElementsByName(PhId);
									if(DefStr2=='0'){
										radios[0].checked=true;
									}
									if(DefStr2=='1'){
										radios[1].checked=true;
									}
									if(DefStr2=='2'){
										radios[2].checked=true;
									}
									/*for(var i=0;i<storeDYGX2.getCount();i++){
										var phid=storeDYGX2.getAt(i).get('PhId');
										if(PhId==phid)
										{
											var DefStr2=storeDYGX2.getAt(i).get('DefStr2');
											var radios=document.getElementsByName(PhId);
											if(DefStr2=='0')
											{
												storeDYGX2.getAt(i).set('DefStr2',1);
												radios[1].checked=true;
											}
											else
											{
												storeDYGX2.getAt(i).set('DefStr2',0);
												radios[0].checked=true;
											}
										}
									}*/
									
								}
							}
						})
		}

    </script>
}


