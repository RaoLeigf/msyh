<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GQT3.QT.Service.Interface</name>
    </assembly>
    <members>
        <member name="T:GQT3.QT.Service.Interface.IBudgetAccountsService">
            <summary>
            BudgetAccounts服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IBudgetAccountsService.ExportData">
            <summary>
            导出数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IBudgetAccountsService.ImportData(System.String,System.String)">
            <summary>
            导入数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IBudgetAccountsService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.BudgetAccountsModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IBudgetAccountsService.IfLastStage(System.String)">
            <summary>
            根据code判断是否是末级
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service">
            <summary>
            CorrespondenceSettings2服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.UpdateIfSBOrg(System.Collections.Generic.List{GQT3.QT.Model.Domain.OrganizeModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettings2Model},System.Collections.Generic.List{GQT3.QT.Model.Domain.OrganizeModel})">
            <summary>
            是否为申报单位的设置
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.UpdateZCLB(System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettings2Model},System.Collections.Generic.List{GQT3.QT.Model.Domain.ExpenseCategoryModel})">
            <summary>
            支出类别关系的改变
            </summary>
            <param name="OrgCode"></param>
            <param name="OrgPhId"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.LoadWithPageIsend(System.String)">
            <summary>
            判断是否是末级组织
            </summary>
            <param name="ParentOrg"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.UpdateYSDtlGS(System.String)">
            <summary>
            保存项目类型对应项目预算明细显示格式设置
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.GetOrgListNoDYGXdtl(System.String)">
            <summary>
            根据按钮主键取对应关系列表基础数据详细(得到的PhId为对应关系的主键)（没有对应关系的数据）(按钮权限)
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettings2Service.UpdateControlSet(System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettings2Model},System.Collections.Generic.List{GQT3.QT.Model.Domain.OrganizeModel})">
            <summary>
            页面功能控制
            </summary>
            <param name="Setcode"></param>
            <param name="SetPhId"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.ICorrespondenceSettingsService">
            <summary>
            CorrespondenceSettings服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageYSBM(SUP.Common.DataEntity.DataStoreParam)">
            <summary>
            取对应关系列表数据
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageYSBM2(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            取对应关系列表数据
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.GetRelationYSBMLeftList(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            取对应关系列表数据
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.GetRelationYSBMRightList(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            取对应关系列表数据
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.UpdataRelationYSBM(System.Collections.Generic.List{GQT3.QT.Model.Domain.OrganizeModel},System.String)">
            <summary>
            设置操作员对应预算部门关系
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageUser_Org(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            取对应关系列表数据  操作员对应组织部门
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageOrg(SUP.Common.DataEntity.DataStoreParam)">
            <summary>
            取所有org（不包括部门）
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageAllOrg(SUP.Common.DataEntity.DataStoreParam)">
            <summary>
            取所有org（包括部门）
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageBM(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            根据组织id取部门
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.UpdateZJLY(System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettingsModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.SourceOfFundsModel})">
            <summary>
            资金来源关系的改变
            </summary>
            <param name="OrgCode"></param>
            <param name="OrgPhId"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.UpdateYSKM(System.String,System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettingsModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.BudgetAccountsModel})">
            <summary>
            预算科目关系的改变
            </summary>
            <param name="OrgCode"></param>
            <param name="OrgPhId"></param>
            <param name="OrgName"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.UpdateYSK(System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettingsModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.ProjLibProjModel})">
            <summary>
            预算库关系的改变
            </summary>
            <param name="OrgCode"></param>
            <param name="OrgPhId"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.UpdateDefaultOrg(System.String,System.String,System.Collections.Generic.List{GQT3.QT.Model.Domain.CorrespondenceSettingsModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.OrganizeModel})">
            <summary>
            操作员默认组织设置
            </summary>
            <param name="usercode"></param>
            <param name="username"></param>
            <param name="mydelete"></param>
            <param name="myinsert"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.LoadWithPageOrgByUser(SUP.Common.DataEntity.DataStoreParam,System.String)">
            <summary>
            取操作员能操作的org
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ICorrespondenceSettingsService.DeleteQtbase(System.Int64)">
            <summary>
            删除单位对应预算科目
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IExpenseCategoryService">
            <summary>
            ExpenseCategory服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IExpenseCategoryService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.ExpenseCategoryModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IExpenseCategoryService.IfLastStage(System.String)">
            <summary>
            根据支出类别(项目类型)的code判断是否是末级
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IExpenseCategoryService.Save2(GQT3.QT.Model.Domain.ExpenseCategoryModel,System.String)">
            <summary>
            保存
            </summary>
            <param name="expenseCategory"></param>
            <param name="edittype"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IGHProjDtlShareService">
            <summary>
            GHProjDtlShare服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IOrgRelatitem2Service">
            <summary>
            OrgRelatitem服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IPaymentMethodService">
            <summary>
            PaymentMethod服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IPaymentMethodService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.PaymentMethodModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IPerformEvalTargetClassService">
            <summary>
            PerformEvalTargetClass服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IPerformEvalTargetService">
            <summary>
            PerformEvalTarget服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IPerformEvalTargetService.CodeToName(Enterprise3.Common.Model.Results.PagedResult{GQT3.QT.Model.Domain.PerformEvalTargetModel})">
            <summary>
            指标类别转名称
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IPerformEvalTargetService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.PerformEvalTargetModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IPerformEvalTargetTypeService">
            <summary>
            PerformEvalTargetType服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IPerformEvalTargetTypeService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.PerformEvalTargetTypeModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IPerformEvalTypeService">
            <summary>
            PerformEvalType服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IProcurementCatalogService">
            <summary>
            ProcurementCatalog服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IProcurementCatalogService.SaveImportData(System.String,System.String,System.String)">
            <summary>
            导入数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IProcurementProceduresService">
            <summary>
            ProcurementProcedures服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IProcurementTypeService">
            <summary>
            ProcurementType服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IProcurementTypeService.ExecuteDataCheck(System.Collections.Generic.List{GQT3.QT.Model.Domain.ProcurementTypeModel}@,System.String)">
            <summary>
            验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IProjectThresholdService">
            <summary>
            ProjectThreshold服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IProjLibProjService">
            <summary>
            ProjLibProj服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQtBaseProjectService">
            <summary>
            QtBaseProject服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.CreateOrGetMaxProjCode(System.String)">
            <summary>
            获取最大项目库编码
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.Save2(GQT3.QT.Model.Domain.QtBaseProjectModel,GYS3.YS.Model.Domain.SubjectMstModel)">
            <summary>
            保存
            </summary>
            <param name="qtBaseProjectModel"></param>
            <param name="subjectMstModel"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.JudgeIfEnd(System.String)">
            <summary>
            判断是否是末级
            </summary>
            <param name="kmdm"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.Update2(GQT3.QT.Model.Domain.QtBaseProjectModel)">
            <summary>
            修改项目名称和填报部门
            </summary>
            <param name="qtBaseProjectModel"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.JudgeHaveDtl(System.Int64)">
            <summary>
            判断是否有明细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.DeleteIfDtl(System.Int64)">
            <summary>
            有明细时判断是否处于审批流程中
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.Delete2(System.Int64)">
            <summary>
            没有明细时判断SubjectMst表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtBaseProjectService.FindSubjectData(System.String,System.String)">
            <summary>
            查找该单位下全部的预算科目
            </summary>
            <param name="FDwdm"></param>
            <param name="FKmlb"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTControlSetService">
            <summary>
            QTControlSet服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTControlSetService.UpdateOrg(System.String)">
            <summary>
            根据主键更新数据
            </summary>
            <param name="SetPhId"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTMemoService">
            <summary>
            QTMemo服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTMemoService.Save2(System.Collections.Generic.List{GQT3.QT.Model.Domain.QTMemoModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.QTMemoModel},System.Collections.Generic.List{System.String})">
            <summary>
            保存
            </summary>
            <param name="adddata"></param>
            <param name="updatedata"></param>
            <param name="deletedata"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTModifyService">
            <summary>
            QTModify服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQtOrgDygxService">
            <summary>
            QtOrgDygx服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtOrgDygxService.Save2(System.Collections.Generic.List{GQT3.QT.Model.Domain.QtOrgDygxModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.QtOrgDygxModel},System.Collections.Generic.List{System.String})">
            <summary>
            保存
            </summary>
            <param name="adddata"></param>
            <param name="updatedata"></param>
            <param name="deletedata"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtOrgDygxService.ImportData(System.String,System.String)">
            <summary>
            导入数据
            </summary>
            <param name="fileExtension"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTProductService">
            <summary>
            QTProduct服务组装层接口
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTProductUserDygxService">
            <summary>
            QTProductUserDygx服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserDygxService.Save2(GQT3.QT.Model.Domain.User2Model,System.Collections.Generic.List{GQT3.QT.Model.Domain.QTProductUserDygxModel},System.Collections.Generic.List{System.String})">
            <summary>
            保存
            </summary>
            <param name="User"></param>
            <param name="adddata"></param>
            <param name="deletedata"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserDygxService.JudgeByProduct(System.String)">
            <summary>
            判断是否设置过该产品的对应账号
            </summary>
            <param name="ProductBZ"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserDygxService.SaveByProductIfDelete(System.String)">
            <summary>
            删除后设置对应关系
            </summary>
            <param name="ProductBZ"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserDygxService.SaveByProductNoDelete(System.String)">
            <summary>
            不删除设置对应关系
            </summary>
            <param name="ProductBZ"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserDygxService.SaveByProduct(System.String)">
            <summary>
            没有该产品对应关系设置对应关系
            </summary>
            <param name="ProductBZ"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQTProductUserService">
            <summary>
            QTProductUser服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserService.Save2(System.Collections.Generic.IList{GQT3.QT.Model.Domain.QTProductUserModel})">
            <summary>
            保存时获取产品主键
            </summary>
            <param name="entities"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserService.getUserByProduct(System.String,System.String)">
            <summary>
            获取产品用户通过产品标识和G6账号
            </summary>
            <param name="ProductBZ"></param>
            <param name="UserNo"></param>
            <returns></returns>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQTProductUserService.SaveImportData(System.String,System.String,System.String,System.String,System.Int64)">
            <summary>
            导入数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQtSysCodeSeqService">
            <summary>
            QtSysCodeSeq服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtSysCodeSeqService.GetSysCodeSeq(System.String,System.String,System.String)">
            <summary>
            返回对应年度、标识代码和表名的系统编码对象
            </summary>
            <param name="year">年度</param>
            <param name="code">标识代码</param>
            <param name="tname">表名</param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQtYJKService">
            <summary>
            QtYJK服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtYJKService.Update1(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{GQT3.QT.Model.Domain.QtYJKModel},System.Collections.Generic.List{GQT3.QT.Model.Domain.QtYJKModel})">
            <summary>
            更新意见库
            </summary>
            <param name="DeleteYJPhids"></param>
            <param name="Changedatas"></param>
            <param name="Insertdatas"></param>
            <returns></returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IQtZcgnflService">
            <summary>
            QtZcgnfl服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IQtZcgnflService.IfLastStage(System.String)">
            <summary>
            根据code判断是否是末级
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.ISourceOfFundsService">
            <summary>
            SourceOfFunds服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.ISourceOfFundsService.IfLastStage(System.String)">
            <summary>
            根据支出类别(项目类型)的code判断是否是末级
            </summary>
            <returns>返回Json串</returns>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IUserOrgService">
            <summary>
            UserOrg服务组装层接口
            </summary>
        </member>
        <member name="M:GQT3.QT.Service.Interface.IUserOrgService.GetList(System.Int64)">
            <summary>
            报表
            </summary>
        </member>
        <member name="T:GQT3.QT.Service.Interface.IVCorrespondenceSetting2Service">
            <summary>
            VCorrespondenceSetting2服务组装层接口
            </summary>
        </member>
    </members>
</doc>
