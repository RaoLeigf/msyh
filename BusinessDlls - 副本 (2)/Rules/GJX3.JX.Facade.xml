<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GJX3.JX.Facade</name>
    </assembly>
    <members>
        <member name="T:GJX3.JX.Facade.PerformanceDtlBuDtlFacade">
            <summary>
            PerformanceDtlBuDtl业务组装处理类
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlBuDtlFacade.PerformanceDtlBuDtlRule">
            <summary>
            PerformanceDtlBuDtl业务逻辑处理对象
            </summary>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlBuDtlFacade.FindByForeignKey``1(``0,System.String[])">
            <summary>
            通过外关联的单主键值，获取数据
            </summary>
            <param name="id">外键值</param>
            <returns>实体</returns>
        </member>
        <member name="T:GJX3.JX.Facade.PerformanceDtlEvalFacade">
            <summary>
            PerformanceDtlEval业务组装处理类
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlEvalFacade.PerformanceDtlEvalRule">
            <summary>
            PerformanceDtlEval业务逻辑处理对象
            </summary>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlEvalFacade.FindByForeignKey``1(``0,System.String[])">
            <summary>
            通过外关联的单主键值，获取数据
            </summary>
            <param name="id">外键值</param>
            <returns>实体</returns>
        </member>
        <member name="T:GJX3.JX.Facade.PerformanceDtlTarImplFacade">
            <summary>
            PerformanceDtlTarImpl业务组装处理类
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlTarImplFacade.PerformanceDtlTarImplRule">
            <summary>
            PerformanceDtlTarImpl业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlTarImplFacade.PerformanceDtlEvalRule">
            <summary>
            PerformanceDtlEval业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlTarImplFacade.PerformanceDtlTextContRule">
            <summary>
            PerformanceDtlTextCont业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlTarImplFacade.PerformanceDtlBuDtlRule">
            <summary>
            PerformanceDtlBuDtl业务逻辑处理对象
            </summary>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlTarImplFacade.FindByForeignKey``1(``0,System.String[])">
            <summary>
            通过外关联的单主键值，获取数据
            </summary>
            <param name="id">外键值</param>
            <returns>实体</returns>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlTarImplFacade.Delete``1(``0)">
            <summary>
            通过id，删除数据
            </summary>
            <param name="id">单主键id值</param>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlTarImplFacade.Delete``1(System.Collections.Generic.IList{``0})">
            <summary>
            通过ids，删除数据
            </summary>
            <param name="ids">单主键id集合</param>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlTarImplFacade.SavePerformanceDtlTarImpl(GJX3.JX.Model.Domain.PerformanceDtlTarImplModel,System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlEvalModel},System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlTextContModel},System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlTarImplModel},System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlBuDtlModel})">
            <summary>
            保存数据
            </summary>
            <param name="performanceDtlTarImplEntity"></param>
            <param name="performanceDtlEvalEntities"></param>
            <param name="performanceDtlTextContEntities"></param>
            <param name="performanceDtlTarImplEntities"></param>
            <param name="performanceDtlBuDtlEntities"></param>
            <returns></returns>
        </member>
        <member name="T:GJX3.JX.Facade.PerformanceDtlTextContFacade">
            <summary>
            PerformanceDtlTextCont业务组装处理类
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceDtlTextContFacade.PerformanceDtlTextContRule">
            <summary>
            PerformanceDtlTextCont业务逻辑处理对象
            </summary>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceDtlTextContFacade.FindByForeignKey``1(``0,System.String[])">
            <summary>
            通过外关联的单主键值，获取数据
            </summary>
            <param name="id">外键值</param>
            <returns>实体</returns>
        </member>
        <member name="T:GJX3.JX.Facade.PerformanceMstFacade">
            <summary>
            PerformanceMst业务组装处理类
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceMstFacade.PerformanceMstRule">
            <summary>
            PerformanceMst业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceMstFacade.PerformanceDtlEvalRule">
            <summary>
            PerformanceDtlEval业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceMstFacade.PerformanceDtlTextContRule">
            <summary>
            PerformanceDtlTextCont业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceMstFacade.PerformanceDtlBuDtlRule">
            <summary>
            PerformanceDtlBuDtl业务逻辑处理对象
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.PerformanceMstFacade.PerformanceDtlTarImplRule">
            <summary>
            PerformanceDtlTarImpl业务逻辑处理对象
            </summary>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceMstFacade.LoadWithPage(System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])">
            <summary>
            分页获取全部集合
            </summary>
            <param name="pageNumber">页码(从1开始)</param>
            <param name="pageSize">每页大小(最大为200)</param>
            <param name="dic">查询条件字典（建议使用Enterprise3.Common.Base.CreateCriteria进行创建）</param>
            <param name="sorts">排序({属性名 desc,属性名,属性名 asc})</param>
            <returns>集合</returns>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceMstFacade.LoadWithPage(System.Int32,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.String[])">
            <summary>
            分页获取全部集合
            </summary>
            <param name="pageNumber">页码(从1开始)</param>
            <param name="pageSize">每页大小(最大为200)</param>
            <param name="nameSqlName">命名SQL名称</param>
            <param name="dic">查询条件字典（建议使用Enterprise3.Common.Base.CreateCriteria进行创建）</param>
            <param name="sorts">排序({属性名 desc,属性名,属性名 asc})</param>
            <returns>集合</returns>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceMstFacade.Delete``1(``0)">
            <summary>
            通过id，删除数据
            </summary>
            <param name="id">单主键id值</param>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceMstFacade.Delete``1(System.Collections.Generic.IList{``0})">
            <summary>
            通过ids，删除数据
            </summary>
            <param name="ids">单主键id集合</param>
        </member>
        <member name="M:GJX3.JX.Facade.PerformanceMstFacade.SavePerformanceMst(GJX3.JX.Model.Domain.PerformanceMstModel,System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlTextContModel},System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlBuDtlModel},System.Collections.Generic.List{GJX3.JX.Model.Domain.PerformanceDtlTarImplModel})">
            <summary>
            保存数据
            </summary>
            <param name="performanceMstEntity"></param>
            <param name="performanceDtlTextContEntities"></param>
            <param name="performanceDtlBuDtlEntities"></param>
            <param name="performanceDtlTarImplEntities"></param>
            <returns></returns>
        </member>
        <member name="T:GJX3.JX.Facade.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:GJX3.JX.Facade.Resources.InitializeObject">
            <summary>
              查找类似 初始化对象失败！ 的本地化字符串。
            </summary>
        </member>
    </members>
</doc>
